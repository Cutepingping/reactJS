{"version":3,"sources":["src\\widget\\Layout\\UpdatePwd\\updatePwdView.jsx"],"names":["FormItem","Item","formItemLayout","labelCol","span","wrapperCol","updatePwdView","props","context","checkConfirm","rule","value","callback","state","loginInfo","password","phone","verifyCode","confimpassword","nextProps","nextState","prevProps","prevState","data","newObj","setState","e","preventDefault","stopPropagation","self","form","validateFields","err","_","isEmpty","handleModifyPwd","result","resultCode","handlePwdRes","Cookie","get","config","cookie","auth","titleName","resetPwdReq","updatePwdReq","resetFields","params","mobile","templateCode","resultMsg","reg","test","reqGetCode","count","countDown","setTimeout","clearInterval","setInterval","html","removeAttr","attr","footer","styles","btnl","onSubmit","reset","ReactElement","DOMElement","console","log","getFieldDecorator","visible","onClose","getFooter","login_info_content","rules","required","message","pattern","initialValue","onPwdChange","target","updatePwd1","handleMsgCode","__html","validator","Component","create"],"mappings":"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","file":"updatePwdView.jsx","sourceRoot":"C:/Users/liu.ping/helloReact","sourcesContent":["import React from 'react'\r\nimport { Component } from 'react'\r\nimport { Button, Row, Form, Input, Popover, Modal, Col} from 'antd'\r\nimport $ from 'jquery'\r\nimport { parse } from 'qs'\r\nimport cx from 'classnames'\r\nimport Cookie from 'js-cookie'\r\nimport { isEmpty, get, merge } from 'lodash'\r\nimport { config } from '../../../utils'\r\nimport styles  from './updatePwdStyle.less'\r\nimport { messageInform } from '../../../utils/notification'\r\nimport { getPhoneCode, forgetLoginPwd, updateLoginPwd } from './updatePwdServ'\r\n\r\nconst FormItem = Form.Item\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    span: 8\r\n  },\r\n  wrapperCol: {\r\n    span: 16\r\n  }\r\n}\r\n\r\nclass updatePwdView extends Component {\r\n  constructor(props, context) {\r\n    super(props, context)\r\n    this.state = {\r\n      loginInfo: {\r\n        // 手机号码\r\n        phone: '',\r\n        // 手机验证码\r\n        verifyCode: '',\r\n        // 密码\r\n        password: '',\r\n        // 重复密码\r\n        confimpassword: '',\r\n      },\r\n    }\r\n  }\r\n\r\n  //准备：即将被重新渲染，状态未变化\r\n  componentWillMount() {\r\n  }\r\n\r\n  //准备：即将被重新渲染，状态未变化\r\n  componentWillUpdate(nextProps, nextState) {}\r\n\r\n  //完成：正在被重新渲染，状态已变化\r\n  componentDidUpdate(prevProps, prevState) {}\r\n\r\n  // 已加载组件，收到新属性时调用\r\n  componentWillReceiveProps(nextProps) {}\r\n\r\n  // 已插入真实DOM\r\n  componentDidMount() {}\r\n\r\n  //组件将被卸载\r\n  componentWillUnmount(){}\r\n\r\n  // 输入框改变\r\n  onPwdChange(data) {\r\n    let { loginInfo } = this.state\r\n    let newObj = merge(loginInfo, data)\r\n    this.setState({\r\n      loginInfo: newObj\r\n    })\r\n  }\r\n\r\n  // 密码一致性校验\r\n  checkConfirm = (rule, value, callback)=> {\r\n    if (value && (this.state.loginInfo.password !== value)) {\r\n      callback('两次输入不一致！')\r\n    }\r\n    callback()\r\n  }\r\n\r\n  // 提交重置密码\r\n  onSubmit(e){\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    let self = this\r\n    self.props.form.validateFields((err) => {\r\n      if(_.isEmpty(err)) {\r\n        self.handleModifyPwd()\r\n      }\r\n    })\r\n  }\r\n\r\n  // 处理修改密码结果\r\n  handlePwdRes(result){\r\n    if ('0' === '' + result.resultCode) {\r\n      messageInform('设置成功', 'success')\r\n    }\r\n    return false\r\n  }\r\n\r\n  // 重置密码请求\r\n  async resetPwdReq(loginInfo){\r\n    // 结果集\r\n    let result = null\r\n    try{\r\n      result = await forgetLoginPwd(loginInfo)\r\n      this.handlePwdRes(result)\r\n    }catch(e){\r\n      messageInform(e || '未知的重置密码异常', 'error')\r\n    }\r\n    return false\r\n  }\r\n\r\n  // 修改密码请求\r\n  async updatePwdReq(loginInfo){\r\n\r\n    if(!Cookie.get(config.cookie.auth)){\r\n      messageInform('修改密码需要先登录', 'error')\r\n      return false\r\n    }\r\n\r\n    // 结果集\r\n    let result = null\r\n    try{\r\n      result = await updateLoginPwd(loginInfo)\r\n      this.handlePwdRes(result)\r\n    }catch(e){\r\n      messageInform(e || '未知的修改密码异常', 'error')\r\n    }\r\n    return false\r\n  }\r\n\r\n  // 修改/重置密码处理\r\n  handleModifyPwd(){\r\n    let { loginInfo } = this.state\r\n    let titleName = this.props.titleName\r\n\r\n    // 重置密码\r\n    if('重置密码' === '' + titleName){\r\n      this.resetPwdReq(loginInfo)\r\n    // 修改密码\r\n    }else if('修改密码' === '' + titleName){\r\n      this.updatePwdReq(loginInfo)\r\n    }\r\n  }\r\n\r\n  // 表单清空\r\n  reset(){\r\n    this.props.form.resetFields()\r\n    this.setState({\r\n      loginInfo: {\r\n        phone:'',\r\n        verifyCode:'',\r\n        password: '',\r\n        confimpassword: ''\r\n      }\r\n    })\r\n  }\r\n\r\n  // 取消\r\n  cancel() {}\r\n\r\n  // 请求短信验证码\r\n  async reqGetCode(phone){\r\n    try{\r\n      let params = parse({ mobile: phone ,templateCode: 'DEALER_FIND_PASSWORD'})\r\n      // 请求短信验证码\r\n      let result = await getPhoneCode(params)\r\n\r\n      if('0' === '' + result.resultCode){\r\n        messageInform('发送验证码成功')\r\n      }else{\r\n        messageInform(result.resultMsg || '未知的发送短信验证码错误', 'error')\r\n      }\r\n    }catch(e){\r\n      messageInform(e || '未知的发送短信验证码异常', 'error')\r\n    }\r\n  }\r\n\r\n  // 短信验证码处理\r\n  handleMsgCode(e) {\r\n    // 登录表单信息\r\n    let { loginInfo }  = this.state\r\n\r\n    // 手机号\r\n    let phone = get(loginInfo, 'phone', null)\r\n    // 手机号正则\r\n    let reg = /^1[3,4,5,7,8]\\d{9}$/\r\n\r\n    // 校验非空\r\n    if(!phone){\r\n      messageInform('手机号不能为空', 'error')\r\n      return false\r\n    // 校验格式\r\n    }else if(!reg.test(loginInfo.phone)){\r\n      messageInform('手机号格式不正确', 'error')\r\n      return false\r\n    }\r\n\r\n    // 手机号校验通过，开始发送短信\r\n    this.reqGetCode(phone)\r\n\r\n    // 倒计时处理\r\n    let count = 60, countDown = null\r\n\r\n    setTimeout( e => {\r\n      // 清空，避免请求次数多时，时间变快\r\n      clearInterval(countDown)\r\n\r\n      countDown = setInterval(() => {\r\n        if(!count){\r\n          $('#getCode').html(\"获取验证码\")\r\n          $('#getCode').removeAttr('disabled')\r\n          clearInterval(countDown)\r\n        }else{\r\n          $('#getCode').html(count + 's')\r\n          $('#getCode').attr('disabled', true)\r\n          count --\r\n        }\r\n      }, 1000) // end countDown\r\n    }, 1000) // end setTimeout\r\n  } // end handleMsgCode\r\n\r\n\r\n  getFooter(){\r\n    let footer = [\r\n      <Button key=\"submit\" type=\"primary\" className={cx(styles.btnl, 'mg3r', 'width100')} onClick={ e => this.onSubmit(e)}>提交</Button>,\r\n      <Button key=\"reset\" className={cx('mg1l', 'width100')} onClick={ e => this.reset(e) }>重置</Button>\r\n    ]\r\n    return footer\r\n  }\r\n\r\n  // 初始状态或状态变化会触发render\r\n  render(ReactElement, DOMElement, callback) {\r\n    console.log('update pwd render')\r\n    const {getFieldDecorator} = this.props.form\r\n\r\n    return (\r\n      <Modal\r\n        title={ this.props.titleName}\r\n        wrapClassName=\"vertical-center-modal\"\r\n        visible={ this.props.visible }\r\n        onCancel={ e => this.props.onClose(e) }\r\n        className={cx('center')}\r\n        footer={ this.getFooter() }\r\n      >\r\n        <div className={cx('iblock', styles.login_info_content)}>\r\n          <Form>\r\n            <FormItem {...formItemLayout} label=\"手机号码\" hasFeedback>\r\n              {\r\n                getFieldDecorator('phone', {\r\n                  rules: [\r\n                    {required: true, message: '请输入您的手机号码!', },\r\n                    {pattern: /^1[3,4,5,7,8]\\d{9}$/, message: '手机格式不正确'}\r\n                  ],\r\n                  initialValue: this.state.loginInfo.phone\r\n                })(<Input onBlur={(e) => { this.onPwdChange({phone: e.target.value}) }} />)\r\n              }\r\n            </FormItem>\r\n\r\n            <FormItem {...formItemLayout} label=\"验证码\">\r\n              <Row gutter={8}>\r\n                <Col span={12}>\r\n                  {\r\n                    getFieldDecorator('captcha', {\r\n                      rules: [\r\n                        { required: true, message: '请输入您的验证码!' }\r\n                      ],\r\n                    })(<Input size=\"large\" onBlur={(e) => { this.onPwdChange({verifyCode: e.target.value} )}}/>)\r\n                  }\r\n                </Col>\r\n                <Col span={12}>\r\n                    <button className={styles.updatePwd1} onClick={(e) => this.handleMsgCode(e)} id=\"getCode\" dangerouslySetInnerHTML={{__html: \"获取验证码\"}}></button>\r\n                </Col>\r\n              </Row>\r\n            </FormItem>\r\n\r\n            <FormItem {...formItemLayout} label=\"新密码\" hasFeedback>\r\n              {\r\n                getFieldDecorator('password', {\r\n                  rules: [\r\n                    { required: true, message: '请输入您的新密码!',},\r\n                    { pattern: /^[\\w_]{6,18}$/ , message: '密码必须为6-18位数字、字母或下划线_组成',}\r\n                  ],\r\n                  initialValue: this.state.password,\r\n                })(<Input type=\"password\" onBlur={(e) => { this.onPwdChange({ password: e.target.value})} } />)\r\n              }\r\n            </FormItem>\r\n\r\n            <FormItem {...formItemLayout} label=\"确认密码\" hasFeedback>\r\n              {\r\n                getFieldDecorator('confirmedPwd', {\r\n                  rules: [\r\n                    { required: true, message: '重新输入密码!', },\r\n                    { validator: this.checkConfirm }\r\n                  ],\r\n                  initialValue: this.state.confimpassword\r\n                })(<Input type=\"password\" onBlur={(e) => { this.onPwdChange({confimpassword: e.target.value}) }} />)\r\n              }\r\n            </FormItem>\r\n          </Form>\r\n        </div>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default (Form.create())(updatePwdView)\r\n"]}