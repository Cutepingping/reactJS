{"version":3,"sources":["src\\pages\\category\\prodCategoryMod.js"],"names":["state","pageConfig","current","size","total","categoryList","searchValue","expandedKeys","autoExpandParent","selectedKeys","originalCategoryList","detailData","actionType","btnLoading","topCategory","name","pId","id","search","list","check","length","i","includes","children","copyList","result","forEach","d","push","getParentKey","tree","parentKey","node","some","item","mod","subscriptions","setup","dispatch","history","listen","pathname","location","type","payload","effects","init","call","put","select","delete","deleteProdCategory","resp","resultCode","success","sort","namespace","sortProdCategory","autoExpand","update","service","updateProdCategory","addProdCategory","getCategory","isReExpand","getOrginCategory","data","iterator","queryProdCategory","status","respData","topCategoryCopy","convertedData","start","slice","totalCategoryList","page","pageChange","searchedCateList","searchedExpKeys","sv","undefined","map","filter","self","indexOf","reducers","updateStore","action"],"mappings":"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","file":"prodCategoryMod.js","sourceRoot":"C:/Users/liu.ping/helloReact","sourcesContent":["/**\r\n * @(#)prodCategoryMod.js 0.5.1 2018-01-10\r\n * Copyright (c) 2017, YUNXI. All rights reserved.\r\n * YUNXI PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.\r\n */\r\nimport {\r\n  queryProdCategory,\r\n  updateProdCategory,\r\n  addProdCategory,\r\n  deleteProdCategory,\r\n  sortProdCategory\r\n} from './prodCategoryServ'\r\nimport {isEmpty, cloneDeep, pick, omit, difference, filter, get} from 'lodash'\r\nimport {message} from 'antd'\r\nimport {convertToTree, treeDataConvertor} from '../../utils/util'\r\nimport respData from './response'\r\n\r\n\r\n/*\r\n * 产品分类\r\n *\r\n * @author 苏离\r\n * @since 20180621\r\n */\r\nconst state = {\r\n  /******   start 使用category组件必须包含state  ******************/\r\n  pageConfig: {\r\n    current: 1,\r\n    size: 50,\r\n    total: 1,\r\n  },\r\n  categoryList: [],\r\n  searchValue: '',\r\n  expandedKeys: ['0'],\r\n  autoExpandParent: true,\r\n  //选中类目\r\n  selectedKeys: [],\r\n  originalCategoryList: [],\r\n  /******   end 使用category组件必须包含state  ******************/\r\n  detailData: {},\r\n  //新增,删除,查询\r\n  actionType: '',\r\n  btnLoading: false,\r\n};\r\n\r\n//默认第一层\r\nconst topCategory = {\r\n  name: '产品分类',\r\n  pId: '0',\r\n  id: '0',\r\n}\r\n\r\nfunction search(list, searchValue) {\r\n  //检测是否包含searchValue\r\n  function check(list = []) {\r\n    const length = get(list, 'length', 0);\r\n    for(let i = 0; i< length; i++ ) {\r\n      let name = get(list[i], 'name', '');\r\n      if(name.includes(searchValue)) {\r\n        return true;\r\n      } else {\r\n        if(check(list[i].children)) return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  const copyList = cloneDeep(list);\r\n  const result = [];\r\n  copyList.forEach(d => {\r\n    if(d.name.includes(searchValue) || check(d.children))  result.push(d);\r\n  })\r\n  return result;\r\n}\r\n\r\nfunction getParentKey(name, tree) {\r\n  let parentKey;\r\n  for (let i = 0; i < tree.length; i++) {\r\n    const node = tree[i];\r\n    if (node.children) {\r\n      if (node.children.some(item => item.name === name)) {\r\n        parentKey = node.id;\r\n      } else if (getParentKey(name, node.children)) {\r\n        parentKey = getParentKey(name, node.children);\r\n      }\r\n    }\r\n  }\r\n  return parentKey;\r\n};\r\n\r\nconst mod = {\r\n  state: cloneDeep(state),\r\n  subscriptions: {\r\n    setup({dispatch, history}) {\r\n      history.listen(location => {\r\n        if(mod.pathname === '' + location.pathname){\r\n          dispatch({type: 'updateStore', payload: cloneDeep(state)});\r\n          dispatch({type: 'init'});\r\n          dispatch({type: 'getCategory'});\r\n        }\r\n      })\r\n    },\r\n  },\r\n  effects: {\r\n    *init({ payload = {} }, { call, put, select }) {\r\n    },\r\n    //删除\r\n    *delete({ payload = {}}, {call, put, select}) {\r\n      yield put({type: 'updateStore', payload: {btnLoading: true}});\r\n      const resp = yield call(deleteProdCategory, [payload.id]);\r\n      if (resp.resultCode === 0) {\r\n        yield put({type: 'getCategory'});\r\n        message.success('删除成功！');\r\n        yield put({type: 'updateStore', payload: {detailData: {}}});\r\n      }\r\n      yield put({type: 'updateStore', payload: {btnLoading: false}});\r\n    },\r\n    //排序\r\n    *sort({payload}, {call, put, select}) {\r\n      const {detailData} = yield select(d => d[mod.namespace]);\r\n      yield put({type: 'updateStore', payload: {btnLoading: true}});\r\n      const resp = yield call(sortProdCategory, payload);\r\n      if (resp.resultCode === 0) {\r\n        yield put({type: 'getCategory', payload: {\r\n          autoExpand: false\r\n        }});\r\n        message.success('排序成功！');\r\n        yield put({type: 'updateStore', payload: {detailData: {}}});\r\n      }\r\n      yield put({type: 'updateStore', payload: {btnLoading: false}});\r\n    },\r\n    *update({payload}, {call, put, select}) {\r\n      const {detailData, actionType} = yield select(d => d[mod.namespace]);\r\n      yield put({type: 'updateStore', payload: {btnLoading: true}});\r\n      const service = actionType === 'edit' ? updateProdCategory : addProdCategory;\r\n      const resp = yield call(service, {...omit(detailData, ['key', 'children'])});\r\n      if (resp.resultCode === 0) {\r\n        message.success('保存成功!');\r\n        yield put({type: 'updateStore', payload: {detailData: {}, selectedKeys: []}});\r\n        yield put({type: 'getCategory'});\r\n        payload();\r\n      }\r\n      yield put({type: 'updateStore', payload: {btnLoading: false}});\r\n    },\r\n    //获取分类(使用category组件必须包含的effect)\r\n    *getCategory({isReExpand}, {put, call, select}) {\r\n      //数据转义\r\n      function getOrginCategory(data){\r\n        function iterator(d, result) {\r\n          d.forEach((item) => {\r\n            result.push(item.node);\r\n            if(!isEmpty(item.children)) {\r\n              iterator(item.children, result)\r\n            }\r\n          })\r\n        }\r\n        let result = [];\r\n        iterator(data, result);\r\n        return result;\r\n      }\r\n      let resp = yield call(queryProdCategory, { status: -1});\r\n      //todo: 使用mock数据\r\n      resp = respData;\r\n      const {pageConfig} = yield select(d => d[mod.namespace]);\r\n      let topCategoryCopy = cloneDeep(topCategory);\r\n      let categoryList = [topCategoryCopy];\r\n\r\n      if (resp.resultCode === 0) {\r\n        if (isEmpty(resp.data)) {\r\n          yield put({\r\n            type: 'updateStore',\r\n            payload: {categoryList}\r\n          });\r\n        } else {\r\n          let convertedData = treeDataConvertor(resp.data, 'node');\r\n\t        pageConfig.current == 0 && (pageConfig.current = 1);\r\n          //分页\r\n          const start = (pageConfig.current - 1) * pageConfig.size;\r\n          topCategoryCopy.children = convertedData.slice(start, start + pageConfig.size)\r\n          pageConfig.total = convertedData ? convertedData.length : 1\r\n          yield put({\r\n            type: 'updateStore',\r\n            payload: {\r\n              categoryList,\r\n              originalCategoryList: getOrginCategory(resp.data),\r\n              totalCategoryList: convertedData,\r\n              pageConfig:{...pageConfig}\r\n            }\r\n          })\r\n \t        yield put({\r\n            type: 'pageChange',\r\n            payload: {\r\n              page: pageConfig.current,\r\n              isReExpand\r\n            }\r\n          })\r\n        }\r\n      }\r\n    },\r\n    //跳页(使用category组件必须包含的effect)\r\n    *pageChange({payload}, {put, call, select}){\r\n      const {page, isReExpand} = payload;\r\n      const {pageConfig, totalCategoryList = [], searchValue, originalCategoryList, expandedKeys} = yield select(d => d[mod.namespace]);\r\n      pageConfig.current = page;\r\n      const start = (page - 1) * pageConfig.size;\r\n      let topCategoryCopy = cloneDeep(topCategory);\r\n      let categoryList = [topCategoryCopy];\r\n      pageConfig.current = page;\r\n\r\n      //搜索\r\n      let searchedCateList = cloneDeep(totalCategoryList);\r\n      let total = 0;\r\n      let searchedExpKeys = ['0']\r\n      let sv = ''\r\n      if((payload.searchValue == 0 || payload.searchValue) || (searchValue == 0 || searchValue)) {\r\n        sv = payload.searchValue === undefined ? searchValue : payload.searchValue;\r\n        if(searchedCateList) {\r\n          searchedCateList = search(searchedCateList, sv);\r\n          isEmpty(searchedCateList) || (topCategoryCopy.children = searchedCateList.slice(start, start + pageConfig.size))\r\n          total = searchedCateList.length;\r\n        }\r\n        if(!isEmpty(sv)) {\r\n          searchedExpKeys = originalCategoryList.map((item) => {\r\n            if (item.name.includes(sv)) {\r\n              return getParentKey(item.name, categoryList);\r\n            }\r\n            return null;\r\n          }).filter((item, i, self) => item && self.indexOf(item) === i);\r\n        }\r\n      } else {\r\n        isEmpty(searchedCateList) || (topCategoryCopy.children = searchedCateList.slice(start, start + pageConfig.size))\r\n      }\r\n\r\n      yield put({\r\n        type: 'updateStore',\r\n        payload: {\r\n          categoryList,\r\n          expandedKeys: isReExpand ? searchedExpKeys : expandedKeys,\r\n          detailData: {},\r\n          selectedKeys: [],\r\n          autoExpandParent: true,\r\n          pageConfig: {\r\n            ...cloneDeep(pageConfig),\r\n            total,\r\n            current: total ? pageConfig.current : 0\r\n          },\r\n          searchValue: sv\r\n      }})\r\n    }\r\n  },\r\n  reducers: {\r\n    updateStore(state, action) {\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default mod;\r\n"]}