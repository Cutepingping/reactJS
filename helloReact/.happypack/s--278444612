{"name":"BabelLoaderError","message":"SyntaxError: C:/Users/liu.ping/helloReact/src/pages/myPage/myPageMod.js: Unexpected token, expected , (68:4)\n\n\u001b[0m \u001b[90m 66 | \u001b[39m    }\u001b[33m,\u001b[39m\n \u001b[90m 67 | \u001b[39m    查询记录\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 68 | \u001b[39m    \u001b[33m*\u001b[39mvisInfo({ payload }\u001b[33m,\u001b[39m { put\u001b[33m,\u001b[39m call\u001b[33m,\u001b[39m select }) {\n \u001b[90m    | \u001b[39m    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 69 | \u001b[39m      \u001b[36mtry\u001b[39m{\n \u001b[90m 70 | \u001b[39m        console\u001b[33m.\u001b[39mlog(\u001b[32m'click me'\u001b[39m)\n \u001b[90m 71 | \u001b[39m        \u001b[90m// 获取当前组件状态机中的数据，也可以获取其他组件的状态机数据，只要他们被创建过\u001b[39m\u001b[0m\n","hideStack":true,"error":{"pos":1642,"loc":{"line":68,"column":4},"_babel":true,"codeFrame":"\u001b[0m \u001b[90m 66 | \u001b[39m    }\u001b[33m,\u001b[39m\n \u001b[90m 67 | \u001b[39m    查询记录\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 68 | \u001b[39m    \u001b[33m*\u001b[39mvisInfo({ payload }\u001b[33m,\u001b[39m { put\u001b[33m,\u001b[39m call\u001b[33m,\u001b[39m select }) {\n \u001b[90m    | \u001b[39m    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 69 | \u001b[39m      \u001b[36mtry\u001b[39m{\n \u001b[90m 70 | \u001b[39m        console\u001b[33m.\u001b[39mlog(\u001b[32m'click me'\u001b[39m)\n \u001b[90m 71 | \u001b[39m        \u001b[90m// 获取当前组件状态机中的数据，也可以获取其他组件的状态机数据，只要他们被创建过\u001b[39m\u001b[0m","name":"SyntaxError","message":"C:/Users/liu.ping/helloReact/src/pages/myPage/myPageMod.js: Unexpected token, expected , (68:4)","stack":"SyntaxError: C:/Users/liu.ping/helloReact/src/pages/myPage/myPageMod.js: Unexpected token, expected , (68:4)\n\u001b[0m \u001b[90m 66 | \u001b[39m    }\u001b[33m,\u001b[39m\n \u001b[90m 67 | \u001b[39m    查询记录\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 68 | \u001b[39m    \u001b[33m*\u001b[39mvisInfo({ payload }\u001b[33m,\u001b[39m { put\u001b[33m,\u001b[39m call\u001b[33m,\u001b[39m select }) {\n \u001b[90m    | \u001b[39m    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 69 | \u001b[39m      \u001b[36mtry\u001b[39m{\n \u001b[90m 70 | \u001b[39m        console\u001b[33m.\u001b[39mlog(\u001b[32m'click me'\u001b[39m)\n \u001b[90m 71 | \u001b[39m        \u001b[90m// 获取当前组件状态机中的数据，也可以获取其他组件的状态机数据，只要他们被创建过\u001b[39m\u001b[0m\n    at Parser.pp$5.raise (C:\\Users\\liu.ping\\helloReact\\node_modules\\babylon\\lib\\index.js:4454:13)\n    at Parser.pp.unexpected (C:\\Users\\liu.ping\\helloReact\\node_modules\\babylon\\lib\\index.js:1761:8)\n    at Parser.pp.expect (C:\\Users\\liu.ping\\helloReact\\node_modules\\babylon\\lib\\index.js:1749:33)\n    at Parser.pp$3.parseObj (C:\\Users\\liu.ping\\helloReact\\node_modules\\babylon\\lib\\index.js:3978:12)\n    at Parser.pp$3.parseExprAtom (C:\\Users\\liu.ping\\helloReact\\node_modules\\babylon\\lib\\index.js:3719:19)\n    at Parser.parseExprAtom (C:\\Users\\liu.ping\\helloReact\\node_modules\\babylon\\lib\\index.js:7238:22)\n    at Parser.pp$3.parseExprSubscripts (C:\\Users\\liu.ping\\helloReact\\node_modules\\babylon\\lib\\index.js:3494:19)\n    at Parser.pp$3.parseMaybeUnary (C:\\Users\\liu.ping\\helloReact\\node_modules\\babylon\\lib\\index.js:3474:19)\n    at Parser.pp$3.parseExprOps (C:\\Users\\liu.ping\\helloReact\\node_modules\\babylon\\lib\\index.js:3404:19)\n    at Parser.pp$3.parseMaybeConditional (C:\\Users\\liu.ping\\helloReact\\node_modules\\babylon\\lib\\index.js:3381:19)\n    at Parser.pp$3.parseMaybeAssign (C:\\Users\\liu.ping\\helloReact\\node_modules\\babylon\\lib\\index.js:3344:19)\n    at Parser.parseMaybeAssign (C:\\Users\\liu.ping\\helloReact\\node_modules\\babylon\\lib\\index.js:6474:20)\n    at Parser.pp$3.parseObjectProperty (C:\\Users\\liu.ping\\helloReact\\node_modules\\babylon\\lib\\index.js:4115:99)\n    at Parser.pp$3.parseObjPropValue (C:\\Users\\liu.ping\\helloReact\\node_modules\\babylon\\lib\\index.js:4140:84)\n    at Parser.parseObjPropValue (C:\\Users\\liu.ping\\helloReact\\node_modules\\babylon\\lib\\index.js:6253:13)\n    at Parser.pp$3.parseObj (C:\\Users\\liu.ping\\helloReact\\node_modules\\babylon\\lib\\index.js:4048:10)"},"stack":"BabelLoaderError: SyntaxError: C:/Users/liu.ping/helloReact/src/pages/myPage/myPageMod.js: Unexpected token, expected , (68:4)\n\n\u001b[0m \u001b[90m 66 | \u001b[39m    }\u001b[33m,\u001b[39m\n \u001b[90m 67 | \u001b[39m    查询记录\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 68 | \u001b[39m    \u001b[33m*\u001b[39mvisInfo({ payload }\u001b[33m,\u001b[39m { put\u001b[33m,\u001b[39m call\u001b[33m,\u001b[39m select }) {\n \u001b[90m    | \u001b[39m    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 69 | \u001b[39m      \u001b[36mtry\u001b[39m{\n \u001b[90m 70 | \u001b[39m        console\u001b[33m.\u001b[39mlog(\u001b[32m'click me'\u001b[39m)\n \u001b[90m 71 | \u001b[39m        \u001b[90m// 获取当前组件状态机中的数据，也可以获取其他组件的状态机数据，只要他们被创建过\u001b[39m\u001b[0m\n\n    at transpile (C:\\Users\\liu.ping\\helloReact\\node_modules\\babel-loader\\lib\\index.js:61:13)\n    at Object.module.exports (C:\\Users\\liu.ping\\helloReact\\node_modules\\babel-loader\\lib\\index.js:163:20)\n    at applySyncOrAsync (C:\\Users\\liu.ping\\helloReact\\node_modules\\happypack\\lib\\applyLoaders.js:342:21)\n    at apply (C:\\Users\\liu.ping\\helloReact\\node_modules\\happypack\\lib\\applyLoaders.js:269:5)\n    at C:\\Users\\liu.ping\\helloReact\\node_modules\\happypack\\lib\\applyLoaders.js:132:7\n    at applyPitchLoader (C:\\Users\\liu.ping\\helloReact\\node_modules\\happypack\\lib\\applyLoaders.js:185:14)\n    at applyPitchLoader (C:\\Users\\liu.ping\\helloReact\\node_modules\\happypack\\lib\\applyLoaders.js:193:14)\n    at applyPitchLoaders (C:\\Users\\liu.ping\\helloReact\\node_modules\\happypack\\lib\\applyLoaders.js:223:4)\n    at applyLoaders (C:\\Users\\liu.ping\\helloReact\\node_modules\\happypack\\lib\\applyLoaders.js:117:3)\n    at HappyWorker.compile (C:\\Users\\liu.ping\\helloReact\\node_modules\\happypack\\lib\\HappyWorker.js:32:3)\n    at Object.compile (C:\\Users\\liu.ping\\helloReact\\node_modules\\happypack\\lib\\HappyForegroundThreadPool.js:61:14)\n    at HappyPlugin.compileAndUpdateCache (C:\\Users\\liu.ping\\helloReact\\node_modules\\happypack\\lib\\HappyPlugin.js:350:14)\n    at HappyPlugin.compileInForeground (C:\\Users\\liu.ping\\helloReact\\node_modules\\happypack\\lib\\HappyPlugin.js:322:25)\n    at HappyPlugin.compile (C:\\Users\\liu.ping\\helloReact\\node_modules\\happypack\\lib\\HappyPlugin.js:238:32)\n    at Object.HappyLoader (C:\\Users\\liu.ping\\helloReact\\node_modules\\happypack\\lib\\HappyLoader.js:42:15)\n    at WEBPACK_CORE_LOADER_EXECUTION (C:\\Users\\liu.ping\\helloReact\\node_modules\\webpack-core\\lib\\NormalModuleMixin.js:155:71)"}