{"version":3,"sources":["src\\widget\\Layout\\Banner\\BannerView.jsx"],"names":["loadedSuccess","props","context","state","updatePwdFlag","self","nextState","nextProps","getPwdDlgFlag","Cookie","remove","config","cookie","userName","auth","localStorage","removeItem","sessionStorage","isLogin","clearCookie","hashHistory","push","resultCode","resultMsg","e","setState","console","log","key","doLogout","showPwdDlg","handleClickMenu","width","location","href","baseURL","b2bWebHomePath","get","styles","user","getDropDownMenu","document","getElementById","maxWidth","paddingLeft","imgLogo","hidePwdDlg","tophead","headLeft","tableCell","headLogo","logoImg","appName","headRight","sysType","enterpriseInfo","color","goToB2bWeb","renderUserInfo","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;AAIA;;;;AAEA;;AAKA;;;;AAEA;;AAGA;;;;AAEA;;AAGA;;;;AAEA;;;;AAEA;;;;AAGA;;;;AAEA;;AACA;;;;AACA;;;;;;AAEA;;;AAPA;;AALA;;AALA;;AALA;;AAPA;;AAJA;AAkCA,IAAIA,gBAAgB,KAApB;;AAEA;;AARA;;AALA;;;AAJA;;;AALA;;AALA;;;AAFA;;AALA;AAJA;;;;;AAyCE;AACA,oBAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA,kIACpBD,KADoB,EACbC,OADa;;AAE1B,UAAKC,KAAL,GAAa;AACXC,qBAAe;AADJ,KAAb;AAF0B;AAK3B;;AAED;;;;;wCACmB;AACjB,UAAIC,OAAO,IAAX;;AAEAL,sBAAgB,IAAhB;AACD;;AAED;;;;kCACcM,S,EAAU;AACtB,UAAG,KAAK,KAAKH,KAAL,CAAWC,aAAhB,KAAkC,KAAKE,UAAUF,aAApD,EAAkE;AAChE,eAAO,KAAP;AACD,OAFD,MAEK;AACH,eAAO,IAAP;AACD;AACF;;AAED;;;;0CACsBG,S,EAAWD,S,EAAW;AAC1C,UAAID,OAAO,IAAX;;AAEA;AACA,UAAGL,aAAH,EAAiB;AACf,YAAGK,KAAKG,aAAL,CAAmBF,SAAnB,CAAH,EAAiC;AAC/B,iBAAO,IAAP;AACD,SAFD,MAEK;AACH,iBAAO,KAAP;AACD;AACF,OAND,MAMK;AACH,eAAO,IAAP;AACD;AACF;;AAED;;;;kCACa;AACXG,yBAAOC,MAAP,CAAcC,iBAAOC,MAAP,CAAcC,QAA5B;AACAJ,yBAAOC,MAAP,CAAcC,iBAAOC,MAAP,CAAcE,IAA5B;AACAC,mBAAaC,UAAb,CAAwB,oBAAxB;AACAC,qBAAeD,UAAf,CAA0B,gBAA1B;AACAC,qBAAeD,UAAf,CAA0B,oBAA1B;AACD;;AAED;;;;;;;;;;;;AAEMX,oB,GAAO,I;;oBACPM,iBAAOO,O;;;;;AACT;AACAb,qBAAKc,WAAL;AACA;AACA,iDAAc,MAAd,EAAsB,SAAtB;AACA;AACAC,oCAAYC,IAAZ,CAAiB,QAAjB;iDACO,K;;;;uBAG6B,8BAAa,EAAb,C;;;;AAAhCC,0B,SAAAA,U;AAAYC,yB,SAAAA,S;;;AAElB,oBAAG,QAAQ,KAAKD,UAAhB,EAA2B;AACxB;AACDjB,uBAAKc,WAAL;AACA;AACA,mDAAc,MAAd,EAAsB,SAAtB;;AAEA;AACA;AACA;AACD;;;;;;;;;;;;;;;;;AAGH;;;;+BACWK,C,EAAE;AAAA;;AACX,WAAKC,QAAL,CAAc;AACZrB,uBAAe;AADH,OAAd,EAEG,YAAM;AACPsB,gBAAQC,GAAR,CAAY,2BAAZ,EAAyC,OAAKxB,KAAL,CAAWC,aAApD;AACD,OAJD;AAKD;;AAED;;;;+BACWoB,C,EAAE;AACX,WAAKC,QAAL,CAAc;AACZrB,uBAAe;AADH,OAAd;AAGD;;AAED;;;;oCACgBoB,C,EAAE;AAChB,UAAInB,OAAO,IAAX;AACA;AACA,cAAO,KAAKmB,EAAEI,GAAd;AACE,aAAK,QAAL;AACE;AACAvB,eAAKwB,QAAL;AACA;AACF,aAAK,gBAAL;AACExB,eAAKyB,UAAL,CAAgBN,CAAhB;AACA;AACF;AACEE,kBAAQC,GAAR,CAAY,aAAZ;AATJ;AAWD;;AAED;;;;sCACiB;AAAA;;AACf,aACE;AAAA;AAAA,UAAM,SAAU;AAAA,mBAAK,OAAKI,eAAL,CAAqBP,CAArB,CAAL;AAAA,WAAhB;AACE;AAAA,yBAAM,IAAN;AAAA,YAAW,KAAI,gBAAf;AACE;AAAA;AAAA,cAAG,OAAO,EAACQ,OAAO,GAAR,EAAV;AAAwB,iDAAG,WAAU,+BAAb,GAAxB;AAAA;AAAA;AADF,SADF;AAIE;AAAA,yBAAM,IAAN;AAAA,YAAW,KAAI,QAAf;AACE;AAAA;AAAA,cAAG,OAAO,EAACA,OAAO,GAAR,EAAV;AAAwB,iDAAG,WAAU,4BAAb,GAAxB;AAAA;AAAA;AADF;AAJF,OADF;AAUD;;AAED;;;;iCACa;AACXC,eAASC,IAAT,GAAgBvB,iBAAOwB,OAAP,GAAiB,GAAjB,GAAuBxB,iBAAOyB,cAA9C;AACD;;AAED;;;;qCACgB;AACd,UAAMvB,WAAWJ,mBAAO4B,GAAP,CAAW1B,iBAAOC,MAAP,CAAcC,QAAd,GAAyB,OAApC,CAAjB;AACA,aACE;AAAA;AAAA,UAAK,WAAW,0BAAGyB,qBAAOC,IAAV,CAAhB;AACE,+CAAK,KAAI,uDAAT,EAAiE,KAAI,EAArE,GADF;AAEE;AAAA;AAAA,YAAU,SAAU,KAAKC,eAAL,EAApB,EAA6C,SAAS,CAAC,OAAD,CAAtD,EAAiE,mBAAmB;AAAA,qBAAMC,SAASC,cAAT,CAAwB,qBAAxB,CAAN;AAAA,aAApF;AACE;AAAA;AAAA,cAAG,WAAU,yBAAb,EAAuC,MAAK,GAA5C,EAAgD,OAAO7B,QAAvD,EAAiE,OAAO,EAAC8B,UAAU,GAAX,EAAgBC,aAAa,CAA7B,EAAxE;AACE;AAAA;AAAA,gBAAM,OAAO,EAACD,UAAU,GAAX,EAAb,EAA8B,WAAU,iBAAxC;AAA4D9B;AAA5D,aADF;AAC+E,4DAAM,MAAK,MAAX;AAD/E;AADF;AAFF,OADF;AAUD;;AAED;;;;6BACQ;AAAA;;AACN,UAAIgC,UAAU,EAAd;AACA,aACE;AAAA;AAAA;AAGI,aAAK1C,KAAL,CAAWC,aAAX,IAA4B,8BAAC,uBAAD,IAAW,WAAU,0BAArB,EAA4B,SAAU,KAAKD,KAAL,CAAWC,aAAjD,EAAiE,SAAU,oBAAK;AAAE,mBAAK0C,UAAL,CAAgBtB,CAAhB;AAAoB,WAAtG,GAHhC;AAKE;AAAA;AAAA,YAAK,WAAWc,qBAAOS,OAAvB;AAEE;AAAA;AAAA,cAAK,WAAWT,qBAAOU,QAAvB;AACE;AAAA;AAAA,gBAAM,WAAWV,qBAAOW,SAAxB;AACE,qDAAK,WAAWX,qBAAOY,QAAvB,EAAiC,KAAKC,cAAtC,EAA+C,KAAI,EAAnD;AADF,aADF;AAIE;AAAA;AAAA,gBAAM,WAAWb,qBAAOW,SAAxB;AAAA;AAAA,aAJF;AAKE;AAAA;AAAA,gBAAM,WAAWX,qBAAOW,SAAxB;AACGtC,+BAAOyC,OAAP,IAAkB,EADrB;AAEE,4CAAC,wBAAD;AAFF;AALF,WAFF;AAaE;AAAA;AAAA,cAAK,WAAWd,qBAAOe,SAAvB,EAAkC,IAAG,qBAArC;AAEI1C,6BAAO2C,OAAP,KAAmB,WAAnB,IAAkC;AAAA;AAAA,gBAAK,WAAW,0BAAGhB,qBAAOiB,cAAV,EAA0B,QAA1B,CAAhB;AAChC;AAAA;AAAA,kBAAG,WAAU,MAAb,EAAoB,OAAO,EAACC,OAAO,OAAR,EAA3B,EAA6C,SAAS;AAAA,2BAAM,OAAKC,UAAL,EAAN;AAAA,mBAAtD;AAAA;AAAA,eADgC;AAEhC;AAAA;AAAA,kBAAG,OAAM,0BAAT,EAAgB,OAAO,EAACD,OAAO,OAAR,EAAvB;AAAyC,gEAAM,WAAU,MAAhB,EAAuB,MAAK,UAA5B,EAAuC,SAAS;AAAA,2BAAM,OAAKzB,eAAL,CAAqB,EAACH,KAAK,QAAN,EAArB,CAAN;AAAA,mBAAhD;AAAzC;AAFgC,aAFtC;AAQE,0CAAC,qBAAD,OARF;;AAUI;AACAjB,6BAAO2C,OAAP,KAAmB,WAAnB,IAAkC,KAAKI,cAAL,EAXtC;AAcE,0CAAC,qBAAD;AAdF;AAbF;AALF,OADF;AAuCD;;;EA3L0BC,gB","file":"BannerView.jsx","sourceRoot":"C:/Users/liu.ping/helloReact","sourcesContent":["// 加载React\r\nimport React from 'react'\r\n// 加载Component\r\nimport { Component } from 'react'\r\n// Cookie对象\r\nimport Cookie from 'js-cookie'\r\n// 路由对象\r\nimport { hashHistory } from 'dva/router'\r\n\r\n// 引入antd的组件\r\nimport {Menu, Icon, Dropdown, Select } from 'antd'\r\n// 站点配置\r\nimport config from '../../../config/config'\r\n// 弹出提示框\r\nimport { messageInform } from '../../../utils/notification'\r\n\r\n// 加载当前组件样式\r\nimport styles  from './BannerView.less'\r\n// 注销登录\r\nimport { delCacheUser } from './BannerServ'\r\n\r\n// 引入我的消息组件\r\nimport MsgList  from '../MsgList/msgListView'\r\n// 引入组织机构组件\r\nimport OrgList from '../OrgList/orgListView'\r\n// 引入商户信息组件\r\nimport SellerInfo from '../SellerInfo/sellerInfoView'\r\n\r\n// 引入修改密码对话框\r\nimport UpdatePwd from '../UpdatePwd/updatePwdView'\r\n// 登录跳转的方法\r\nimport { customLoginRedirect } from '../../../utils/redirect_utils'\r\nimport cx from 'classnames'\r\nimport logoImg from '../../../assets/img/logo.png'\r\n\r\n// 是否已加载成功\r\nlet loadedSuccess = false\r\n\r\n// 导出组件\r\nexport default class extends Component{\r\n\r\n  // 构造函数\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = {\r\n      updatePwdFlag: false,\r\n    }\r\n  }\r\n\r\n  // 已插入DOM\r\n  componentDidMount(){\r\n    let self = this\r\n\r\n    loadedSuccess = true\r\n  }\r\n\r\n  // 比较对话框状态，已确保是否需要重新渲染\r\n  getPwdDlgFlag(nextState){\r\n    if('' + this.state.updatePwdFlag === '' + nextState.updatePwdFlag){\r\n      return false\r\n    }else{\r\n      return true\r\n    }\r\n  }\r\n\r\n  // 是否触发render函数\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    let self = this\r\n\r\n    // 若已渲染过，则不重新渲染\r\n    if(loadedSuccess){\r\n      if(self.getPwdDlgFlag(nextState)){\r\n        return true\r\n      }else{\r\n        return false\r\n      }\r\n    }else{\r\n      return true\r\n    }\r\n  }\r\n\r\n  // 删除Cookie\r\n  clearCookie(){\r\n    Cookie.remove(config.cookie.userName)\r\n    Cookie.remove(config.cookie.auth)\r\n    localStorage.removeItem('antdAdminSiderFold')\r\n    sessionStorage.removeItem('SIDER_OPEN_KEY')\r\n    sessionStorage.removeItem('SIDER_SELECTED_KEY')\r\n  }\r\n\r\n  // 执行退出\r\n  async doLogout(){\r\n    let self = this\r\n    if(!config.isLogin){\r\n      // 清除Cookie\r\n      self.clearCookie()\r\n      // 注销成功提示\r\n      messageInform('注销成功', 'success')\r\n      // 跳转到登录页\r\n      hashHistory.push('/login')\r\n      return false\r\n    }\r\n    // 注销登录\r\n    let { resultCode, resultMsg } = await delCacheUser({})\r\n\r\n    if('0' === '' + resultCode){\r\n       // 清除Cookie\r\n      self.clearCookie()\r\n      // 注销成功提示\r\n      messageInform('注销成功', 'success')\r\n\r\n      // // 跳转到登录页\r\n      // hashHistory.push('/login')\r\n      customLoginRedirect()\r\n    }\r\n  }\r\n\r\n  // 打开密码对话框\r\n  showPwdDlg(e){\r\n    this.setState({\r\n      updatePwdFlag: true\r\n    }, () => {\r\n      console.log('this.state.updatePwdFlag:', this.state.updatePwdFlag)\r\n    })\r\n  }\r\n\r\n  // 关闭密码对话框\r\n  hidePwdDlg(e){\r\n    this.setState({\r\n      updatePwdFlag: false\r\n    })\r\n  }\r\n\r\n  // 下拉菜单点击事件\r\n  handleClickMenu(e){\r\n    let self = this\r\n    // 点击那一项\r\n    switch('' + e.key){\r\n      case 'logout':\r\n        // 退出登录\r\n        self.doLogout()\r\n        break\r\n      case 'forgetPassword':\r\n        self.showPwdDlg(e)\r\n        break\r\n      default:\r\n        console.log('unknown key')\r\n    }\r\n  }\r\n\r\n  // 点击用户登录信息的下拉菜单\r\n  getDropDownMenu(){\r\n    return (\r\n      <Menu onClick={ e => this.handleClickMenu(e) }>\r\n        <Menu.Item key=\"forgetPassword\">\r\n          <a style={{width: 120}}><i className=\"iconfont icon-xiugaimima mg1r\"  />修改密码</a>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"logout\">\r\n          <a style={{width: 120}}><i className=\"iconfont icon-zhuxiao mg1r\"/>注销</a>\r\n        </Menu.Item>\r\n      </Menu>\r\n    )\r\n  }\r\n\r\n  //跳转到经销商门户\r\n  goToB2bWeb() {\r\n    location.href = config.baseURL + '/' + config.b2bWebHomePath;\r\n  }\r\n\r\n  // 渲染用户信息\r\n  renderUserInfo(){\r\n    const userName = Cookie.get(config.cookie.userName + '_name');\r\n    return (\r\n      <div className={cx(styles.user)}>\r\n        <img src=\"https://avatars2.githubusercontent.com/u/80?s=400&v=4\" alt=\"\"/>\r\n        <Dropdown overlay={ this.getDropDownMenu() } trigger={['click']} getPopupContainer={() => document.getElementById('routerApp_headRight')}>\r\n          <a className=\"ant-dropdown-link block\" href=\"#\" title={userName} style={{maxWidth: 240, paddingLeft: 8}}>\r\n            <span style={{maxWidth: 210}} className=\"ellipsis iblock\">{ userName }</span><Icon type=\"down\" />\r\n          </a>\r\n        </Dropdown>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // 渲染内容\r\n  render(){\r\n    let imgLogo = ''\r\n    return (\r\n      <div>\r\n        {/* 弹出的修改密码对话框 - 默认隐藏 */}\r\n        {\r\n          this.state.updatePwdFlag && <UpdatePwd titleName='修改密码' visible={ this.state.updatePwdFlag } onClose={ e => { this.hidePwdDlg(e) } }/>\r\n        }\r\n        <div className={styles.tophead}>\r\n          {/* 左侧header */}\r\n          <div className={styles.headLeft}>\r\n            <span className={styles.tableCell}>\r\n              <img className={styles.headLogo} src={logoImg} alt=\"\"/>\r\n            </span>\r\n            <span className={styles.tableCell}>|</span>\r\n            <span className={styles.tableCell}>\r\n              {config.appName || ''}\r\n              <SellerInfo/>\r\n            </span>\r\n          </div>\r\n          {/* 右侧header */}\r\n          <div className={styles.headRight} id=\"routerApp_headRight\">\r\n            {\r\n              config.sysType === 'entCenter' && <div className={cx(styles.enterpriseInfo, 'fright')}>\r\n                <a className=\"mg2r\" style={{color: 'white'}} onClick={() => this.goToB2bWeb()}>门户首页</a>\r\n                <a title=\"退出登录\" style={{color: 'white'}}><Icon className=\"mg2r\" type=\"poweroff\" onClick={() => this.handleClickMenu({key: 'logout'})}/></a>\r\n              </div>\r\n            }\r\n            {/* 组织机构列表*/}\r\n            <OrgList/>\r\n            {\r\n              //用户登录信息\r\n              config.sysType === 'entCenter' || this.renderUserInfo()\r\n            }\r\n            {/* 消息列表 */}\r\n            <MsgList/>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]}