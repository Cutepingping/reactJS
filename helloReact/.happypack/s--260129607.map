{"version":3,"sources":["src\\widget\\Layout\\OrgList\\orgListView.jsx"],"names":["props","context","state","userOrgList","currentOrg","nextProps","nextState","prevProps","prevState","getOrgList","self","config","isMultiOrg","isB2bLogin","userInfo","userInfoKey","orgList","currOrgId","setState","result","resultCode","data","v","orgId","location","reload","orgListMenu","orgChange","e","key","length","map","item","index","id","name","styles","org","sysType","tableCell","document","getElementById","fontSize","maxWidth","paddingLeft","ReactElement","DOMElement","callback","renderOrgList","Component"],"mappings":"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","file":"orgListView.jsx","sourceRoot":"C:/Users/liu.ping/helloReact","sourcesContent":["// 加载React\r\nimport React from 'react'\r\n// 加载Component\r\nimport { Component } from 'react'\r\n\r\n// 引入antd的组件\r\nimport { Select, Dropdown, Menu, Icon } from 'antd'\r\n// 样式管理器\r\nimport cx from 'classnames'\r\n\r\n// 站点配置\r\nimport config from '../../../config/config'\r\n\r\nimport styles from './orgListStyle.less'\r\nimport { getUserOrg } from './orgListServ'\r\n\r\nimport { setLocalData, getLocalData } from '../../../utils/globalScope'\r\n// 弹出提示框\r\nimport { messageInform } from '../../../utils/notification'\r\nimport {find, get} from 'lodash'\r\nimport {hashHistory} from 'dva/router'\r\n\r\n// 导出组件\r\nexport default class extends Component {\r\n  // 构造函数\r\n  constructor(props, context) {\r\n    super(props, context)\r\n    this.state = {\r\n      // 组织机构列表\r\n      userOrgList: [],\r\n      // 当前组织机构\r\n      currentOrg: '',\r\n    }\r\n  }\r\n\r\n  //准备：即将被重新渲染，状态未变化\r\n  componentWillMount() {}\r\n\r\n  //准备：即将被重新渲染，状态未变化\r\n  componentWillUpdate(nextProps, nextState) {}\r\n\r\n  //完成：正在被重新渲染，状态已变化\r\n  componentDidUpdate(prevProps, prevState) {}\r\n\r\n  // 已加载组件，收到新属性时调用\r\n  componentWillReceiveProps(nextProps) {}\r\n\r\n  // 已插入真实DOM\r\n  componentDidMount() {\r\n    this.getOrgList()\r\n  }\r\n\r\n  //组件将被卸载\r\n  componentWillUnmount(){}\r\n\r\n  // 是否触发render函数\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    let self = this\r\n    // 若不配置组织机构开关，则不渲染\r\n    if(!config.isMultiOrg){\r\n      return false\r\n    }else{\r\n      return true\r\n    }\r\n  }\r\n\r\n  // 获取组织机构列表\r\n  async getOrgList(){\r\n    try{\r\n      if(!config.isMultiOrg) return false\r\n      // 查询用户组织结构\r\n      //企业中心显示为经销商下拉数据，从localstorage里获取\r\n      if(config.isB2bLogin) {\r\n        const userInfo = getLocalData(config.userInfoKey);\r\n        let orgList = get(userInfo, 'data.orgList', []);\r\n        let currOrgId = get(userInfo, 'data.orgId', '');\r\n        this.setState({\r\n          userOrgList: orgList,\r\n          currentOrg: currOrgId\r\n        })\r\n      } else {\r\n        let result = await getUserOrg()\r\n\r\n        if ('0' === '' + result.resultCode) {\r\n          this.setState({\r\n            userOrgList: result.data,\r\n            currentOrg: get(result, 'data.orgInfo.orgName', '')\r\n          })\r\n        }\r\n      }\r\n\r\n    }catch(e){\r\n      messageInform(e || '未知的查询组织异常', 'error')\r\n    }\r\n  }\r\n  //组织切换\r\n  orgChange(v) {\r\n    const {currentOrg} = this.state;\r\n    if(currentOrg + '' === v + '') {\r\n      return\r\n    }\r\n    const userInfo = getLocalData(config.userInfoKey);\r\n    let orgList = get(userInfo, 'data.orgList', []);\r\n    if(userInfo) {\r\n      userInfo.data.orgId = v\r\n      setLocalData(config.userInfoKey, userInfo);\r\n      //刷新页面\r\n      location.reload();\r\n    }\r\n  }\r\n\r\n  // 渲染组织机构列表\r\n  renderOrgList(){\r\n    const {userOrgList, currentOrg} = this.state;\r\n\r\n    if(config.isMultiOrg){\r\n      const orgListMenu = <Menu onClick={e => this.orgChange(e.key)}>\r\n        {\r\n          currentOrg && userOrgList && userOrgList.length > 0\r\n            ? userOrgList.map((item, index) => (\r\n            <Menu.Item key={item.id + ''}>{item.name}</Menu.Item>\r\n          ))\r\n            : <Menu.Item key={'default'}>集团</Menu.Item>\r\n        }\r\n      </Menu>\r\n\r\n      return (\r\n        <div className={ cx(styles.org, 'mg2r') }>\r\n          {\r\n            config.sysType === 'entCenter' || <div className={styles.tableCell}><span className={ cx('ant-divider') }/></div>\r\n          }\r\n          {\r\n            config.sysType === 'entCenter'\r\n              ? <div className={styles.tableCell}>\r\n                  您好，\r\n                  <Dropdown overlay={orgListMenu}\r\n                    getPopupContainer={() => document.getElementById('routerApp_headRight')}>\r\n                   <span>\r\n                    {currentOrg ? get(find(userOrgList, item => item.id + '' === currentOrg + ''), 'name', '集团') : '集团'}\r\n                    <Icon className=\"mg1l\" style={{fontSize: 10}} type=\"caret-down\" />\r\n                  </span>\r\n                </Dropdown>\r\n              </div>\r\n              : <div className={styles.tableCell}>\r\n                  <a className=\"ant-dropdown-link block\" title={currentOrg} style={{maxWidth: 240, paddingLeft: 8}}>\r\n                    <span style={{maxWidth: 210}} className=\"ellipsis iblock\">{ currentOrg }</span>\r\n                  </a>\r\n              </div>\r\n          }\r\n        </div>\r\n      )\r\n    }else{\r\n      return ''\r\n    }\r\n  }\r\n\r\n  // 初始状态或状态变化会触发render\r\n  render(ReactElement, DOMElement, callback) {\r\n    return (\r\n      <div> { this.renderOrgList() } </div>\r\n    )\r\n  }\r\n}\r\n"]}