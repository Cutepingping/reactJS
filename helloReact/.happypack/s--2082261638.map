{"version":3,"sources":["src\\widget\\PopUpSelect\\PopUpSelect.jsx"],"names":["Component","React","FormItem","Item","Option","OptGroup","TreeNode","props","context","state","queryList","visible","isSave","onItem","itemIds","extendPropName","modalWidth","maxHeight","loadingFlag","search","catalogId","groupPropId","tagId","propId","propValueId","propShow","itemCode","itemName","pageNum","pageSize","tableData","total","selectedProduct","selectedRows","selectedRowKeys","closeCbk","confirmCbk","item","setModalWidth","nextProps","nextState","self","window","onresize","prevProps","prevState","map","key","idKey","name","setState","getProductList","that","respListKey","defaultReqParams","params","value","url","requestUrl","method","data","resultCode","status","resultMsg","getTableHeight","i","windowWidth","document","body","clientWidth","isSingle","tableColumn","title","handleSelectAll","width","render","flag","x","handleSelect","selectedColumn","className","styles","del","fixed","deleteRow","fontSize","page","size","current","parseInt","simple","showTotal","showSizeChanger","showQuickJumper","onShowSizeChange","pageChangeHandler","onChange","cbk","obj","clearSearch","push","length","e","splice","type","warn","allSelected","cSelectedProduct","cSelectedRows","j","y","allKeys","modHierarchy","find","tableDom","setTimeout","height","handleConfirm","bind","handleCancel","handleSearch","handleReset","updateModel","emptyTitle","table","setTableColumn","setPagination","tableScroll","selected","deleteSelected","scroll","textNoWrap","setSelectedColumn","selectedTableScroll"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA;;;;AAEA;;AACA;;;;AACA;;AACA;;;;AACA;;AACA;;;;AACA;;AACA;;;;AACA;;;;;;AAhBA;;;;;;IAkBQA,S,GAAcC,e,CAAdD,S;;AACR,IAAME,WAAW,eAAKC,IAAtB;IACQC,M,oBAAAA,M;IAAQC,Q,oBAAAA,Q;;AAChB,IAAMC,WAAW,qBAAWA,QAA5B;;AAEA;;;;;;;;;AAME;AACA,oBAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA,kIACpBD,KADoB,EACbC,OADa;;AAE1B,UAAKC,KAAL,GAAa;AACXC,iBAAW,uBAAUH,MAAMG,SAAhB,CADA;AAEX;AACAC,eAAS,MAAKJ,KAAL,CAAWI,OAAX,IAAsB,KAHpB,EAG0B;AACrCC,cAAQ,MAAKL,KAAL,CAAWK,MAAX,IAAqB,KAJlB,EAIwB;AACnCC,cAAQ,MAAKN,KAAL,CAAWM,MAAX,IAAqB,KALlB,EAKwB;AACnCC,eAAQ,MAAKP,KAAL,CAAWO,OAAX,IAAsB,EANnB;AAOXC,sBAAgB,MAAKR,KAAL,CAAWQ,cAAX,IAA6B,gBAPlC,EAOmD;AAC9D;AACAC,kBAAY,IATD;AAUX;AACAC,iBAAW,GAXA;AAYX;AACAC,mBAAa,IAbF;AAcX;AACAC,cAAQ;AACNC,mBAAU,EADJ,EACO;AACbC,qBAAY,EAFN,EAES;AACfC,eAAM,EAHA,EAGG;AACTC,gBAAO,EAJD,EAII;AACVC,qBAAa,EALP,EAKW;AACjBC,kBAAU,EANJ,EAMQ;AACdC,kBAAS,EAPH,EAOM;AACZC,kBAAS,EARH,CAQM;AARN,OAfG;AAyBXC,eAAS,CAzBE,EAyBA;AACXC,gBAAU,EA1BC,EA0BE;AACbC,iBAAW,EA3BA;AA4BXC,aAAO,CA5BI;AA6BX;AACAC,uBAAiB,EA9BN;AA+BX;AACAC,oBAAc,EAhCH;AAiCX;AACAC,uBAAiB,EAlCN;AAmCX;AACAC,gBAAU,oBAAI;AACZ,cAAK5B,KAAL,CAAW4B,QAAX;AACD,OAtCU;AAuCX;AACAC,kBAAY,oBAACC,IAAD,EAAU;AACpB,cAAK9B,KAAL,CAAW6B,UAAX,CAAsBC,IAAtB;AACD;AA1CU,KAAb;;AAF0B;AA+C3B;;AAGD;;;;;yCACqB;AACnB,WAAKC,aAAL;AACA;AACD;;AAED;;;;wCACoBC,S,EAAWC,S,EAAW;AACxC,UAAIC,OAAO,IAAX;AACA;AACAC,aAAOC,QAAP,GAAkB,YAAU;AAC1B,YAAIF,KAAKhC,KAAL,CAAWE,OAAf,EAAwB;AACtB8B,eAAKH,aAAL;AACD;AACF,OAJD;AAKD;;AAED;;;;uCACmBM,S,EAAWC,S,EAAW,CAExC;AADC;;;AAGF;;;;8CAC0BN,S,EAAW;AAAA;;AACnC;AACA;AACA,WAAK9B,KAAL,CAAWE,OAAX,GAAqB4B,UAAU5B,OAA/B;AACA,UAAG,KAAKF,KAAL,CAAWE,OAAX,IAAsB,IAAzB,EAA8B;AAC5B,YAAG4B,UAAU3B,MAAb,EAAoB;AAClB,cAAIoB,kBAAkB,uBAAUO,UAAU1B,MAApB,EAA4BiC,GAA5B,CAAgC,gBAAQ;AAC5DT,iBAAKU,GAAL,GAAWV,KAAKE,UAAUS,KAAf,CAAX;AACAX,iBAAKV,QAAL,GAAgBU,KAAKY,IAArB;AACA,mBAAOZ,IAAP;AACD,WAJqB,CAAtB;AAKA,eAAKa,QAAL,CAAc;AACZlB,4CADY;AAEZlB,qBAASyB,UAAUzB;AAFP,WAAd;AAID;AACD,aAAKoC,QAAL,CAAc,EAAd,EAAkB,YAAI;AACpB,iBAAKC,cAAL;AACD,SAFD;AAGD;AACF;;AAED;;;;wCACoB,CACnB;;AAGD;;;;;;;;;;;;AAEMC,oB,GAAO,I;yBACuC,KAAK7C,K,EAAlD8C,W,UAAAA,W,EAAaL,K,UAAAA,K,iCAAOM,gB,EAAAA,gB,yCAAmB,E;;;AAE5C,qBAAKJ,QAAL,CAAc;AACZhC,+BAAa;AADD,iBAAd;6BAG+C,uBAAUkC,KAAK3C,KAAf,C,EAAzCmB,O,cAAAA,O,EAASC,Q,cAAAA,Q,EAAUV,M,cAAAA,M,EAAQT,S,cAAAA,S;AACjC;;AACI6C,sB,GAAS,E;;AACb7C,0BAAUoC,GAAV,CAAc,gBAAQ;AACpBS,yBAAOlB,KAAKU,GAAZ,IAAmBV,KAAKmB,KAAxB;AACD,iBAFD;;;uBAIkD,sBAAQ;AACxDC,uBAAKL,KAAK7C,KAAL,CAAWmD,UADwC;AAExDC,0BAAQ,KAFgD;AAGxDC,mDACKN,gBADL;AAEE1B,oCAFF;AAGEC;AAHF,qBAIK0B,MAJL;AAHwD,iBAAR,C;;;;AAA7CM,0B,SAAAA,U;AAAYC,sB,SAAAA,M;AAAQC,yB,SAAAA,S;AAAWH,oB,SAAAA,I;;AAUpC,oBAAIC,cAAc,CAAd,IAAmBE,SAAvB,EAAkC;AAChCX,uBAAKY,cAAL;AACAJ,uBAAKP,WAAL,EAAkBP,GAAlB,CAAsB,UAACT,IAAD,EAAO4B,CAAP,EAAa;AACjC5B,yBAAKU,GAAL,GAAWV,KAAKW,KAAL,CAAX;AACD,mBAFD;;AAIA,uBAAKE,QAAL,CAAc;AACZpB,+BAAW8B,KAAKP,WAAL,CADC;AAEZtB,2BAAO6B,KAAK7B,KAFA;AAGZb,iCAAa;AAHD,mBAAd;AAKD;;;;;;;;;;;;;;;;;AAGH;;;;oCACgB;AACd,UAAIgD,cAAcC,SAASC,IAAT,CAAcC,WAAhC;AACA,UAAIrD,aAAakD,cAAc,GAAd,GAAoB,IAApB,GAA2B,IAA3B,GAAkCA,cAAc,GAAjE;AACA,WAAKhB,QAAL,CAAc,EAAClC,sBAAD,EAAd;AACD;;AAED;;;;qCACiB;AAAA;;AACf,UAAIyB,OAAO,IAAX;AADe,oBAES,KAAKlC,KAFd;AAAA,UAEVyC,KAFU,WAEVA,KAFU;AAAA,UAEHsB,QAFG,WAEHA,QAFG;;;AAIf,wDACK,KAAK/D,KAAL,CAAWgE,WADhB,IAEE;AACEC,eAAOF,WAAW,IAAX,GAAkB;AAAC,sBAAD;AAAA;AACzB,qBAAS;AAAA,qBAAM7B,KAAKgC,eAAL,EAAN;AAAA;AADgB;AAAA;AAAA,SAD3B;AAIEC,eAAO,EAJT;AAKEC,gBAAQ,gBAACtC,IAAD,EAAU;AAChB,cAAIuC,OAAO,KAAX;AACA,iBAAKnE,KAAL,CAAWuB,eAAX,CAA2Bc,GAA3B,CAA+B,UAAC+B,CAAD,EAAGZ,CAAH,EAAO;AACpC,gBAAGY,EAAE7B,KAAF,KAAYX,KAAKW,KAAL,CAAf,EAA2B;AACzB4B,qBAAO,IAAP;AACD;AACF,WAJD;AAKA,cAAI,OAAKnE,KAAL,CAAWK,OAAf,EAAwB;AACtB,mBAAKL,KAAL,CAAWK,OAAX,CAAmBgC,GAAnB,CAAuB,UAAC+B,CAAD,EAAGZ,CAAH,EAAO;AAC5B,kBAAGY,KAAKxC,KAAKW,KAAL,CAAR,EAAoB;AAClB4B,uBAAO,IAAP;AACD;AACF,aAJD;AAKD;AACD,iBACE;AAAA;AAAA,cAAK,WAAU,aAAf;AACE;AAAC,0BAAD;AAAA,gBAAM,SAAS,mBAAM;AAAC,yBAAKE,YAAL,CAAkBzC,IAAlB;AAAwB,iBAA9C,EAAgD,UAAUuC,IAA1D;AACGA,qBAAO,KAAP,GAAe;AADlB;AADF,WADF;AAOD;AA1BH,OAFF;AA+BD;;;wCACmB;AAAA;;AAClB,wDACK,KAAKrE,KAAL,CAAWwE,cADhB,IAEE;AACEP,eAAO,IADT;AAEEQ,mBAAWC,sBAAOC,GAFpB;AAGER,eAAO,EAHT;AAIES,eAAO,OAJT;AAKER,gBAAQ,gBAACtC,IAAD,EAAU;AAChB,iBACE;AAAA;AAAA;AACE,qBAAM,uCADR;AAEE,sBAAO,cAFT;AAGE,0BAAW,cAHb;AAIE,yBAAW;AAAA,uBAAM,OAAK+C,SAAL,CAAe/C,IAAf,CAAN;AAAA;AAJb;AAOE,4DAAM,OAAO,EAACgD,UAAU,EAAX,EAAb,EAA6B,MAAK,cAAlC,EAAiD,SAAS;AAAA,uBAAM,OAAKD,SAAL,CAAe/C,IAAf,CAAN;AAAA,eAA1D;AAPF,WADF;AAWD;AAjBH,OAFF;AAsBD;;AAED;;;;sCACkBiD,I,EAAMC,I,EAAM;AAC5B,WAAKrC,QAAL,CAAc;AACZtB,iBAAS0D,IADG;AAEZzD,kBAAU0D;AAFE,OAAd,EAGG,KAAKpC,cAHR;AAID;;AAED;;;;oCACgB;AAAA;;AACd,aAAO;AACLqC,iBAASC,SAAS,KAAKhF,KAAL,CAAWmB,OAApB,CADJ,EACiC;AACtCC,kBAAU,KAAKpB,KAAL,CAAWoB,QAFhB,EAEyB;AAC9BE,eAAO,KAAKtB,KAAL,CAAWsB,KAHb,EAGmB;AACxB2D,gBAAO,IAJF;AAKLC,mBAAW;AAAA,6BAAQ,OAAKlF,KAAL,CAAWsB,KAAnB;AAAA,SALN;AAML6D,yBAAiB,IANZ;AAOLC,yBAAiB,IAPZ;AAQLC,0BAAkB,0BAACR,IAAD,EAAOC,IAAP,EAAgB;AAChC,iBAAKQ,iBAAL,CAAuBT,IAAvB,EAA6BC,IAA7B;AACD,SAVI;AAWLS,kBAAU,kBAACV,IAAD,EAAOC,IAAP,EAAc;AACtB,iBAAKQ,iBAAL,CAAuBT,IAAvB,EAA6BC,IAA7B;AACD;AAbI,OAAP;AAeD;;AAED;;;;gCACYU,G,EAAK;AACf,UAAI,CAAC,CAACA,GAAN,EAAW;AACT,aAAK/C,QAAL,CAAc;AACZxC,qBAAW,uBAAU,KAAKH,KAAL,CAAWG,SAArB;AADC,SAAd,EAEGuF,GAFH;AAGD,OAJD,MAIO;AACL,aAAK/C,QAAL,CAAc;AACZxC,qBAAW,uBAAU,KAAKH,KAAL,CAAWG,SAArB;AADC,SAAd;AAGD;AACF;;AAED;;;;oCACe;AACb,UAAI0C,OAAO,IAAX;AACA,UAAI8C,MAAM,uBAAU9C,KAAK3C,KAAL,CAAWuB,eAArB,CAAV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAKvB,KAAL,CAAW2B,UAAX,CAAsB8D,GAAtB;AACA,UAAG,CAAC,KAAKzF,KAAL,CAAWG,MAAf,EAAsB;AACpB,aAAKsC,QAAL,CAAc;AACZlB,2BAAgB;AADJ,SAAd,EAEG,KAAKmE,WAFR;AAGD,OAJD,MAIK;AACH,aAAKjD,QAAL,CAAc,EAAd;AACD;;AAED,WAAKzC,KAAL,CAAW0B,QAAX;AACD;;AAED;;;;mCACc;AACZ,UAAIiB,OAAO,IAAX;AACA,WAAKF,QAAL,CACE;AACElB,yBAAiB,EADnB;AAEEJ,iBAAS,CAFX;AAGEC,kBAAU;AAHZ,OADF,EAME,KAAKsE,WANP;AAQA,WAAK1F,KAAL,CAAW0B,QAAX;AACD;;AAED;;;;mCACe;AAAA;;AACb,WAAKe,QAAL,CAAc;AACZtB,iBAAS,CADG;AAEZC,kBAAU;AAFE,OAAd,EAGG,YAAM;AACP,eAAKsB,cAAL;AACD,OALD;AAMD;;AAED;;;;kCACc;AACZ,WAAKgD,WAAL,CAAiB,KAAKhD,cAAtB;AACD;;AAED;;;;iCACad,I,EAAM;AACjB,UAAIL,kBAAkB,KAAKvB,KAAL,CAAWuB,eAAjC;AADiB,UAEZsC,QAFY,GAEA,KAAK/D,KAFL,CAEZ+D,QAFY;;AAGjB,UAAGA,QAAH,EAAa;AACXtC,0BAAkB,CAACK,IAAD,CAAlB;AACD,OAFD,MAEM;AACJL,wBAAgBoE,IAAhB,CAAqB/D,IAArB;AACD;AACD,WAAKa,QAAL,CAAc,EAAClB,gCAAD,EAAd;AACD;;;sCAEiB;AAAA,UACXgB,KADW,GACF,KAAKzC,KADH,CACXyC,KADW;AAAA,mBAEmB,KAAKvC,KAFxB;AAAA,UAEXqB,SAFW,UAEXA,SAFW;AAAA,UAEAE,eAFA,UAEAA,eAFA;;AAGhBF,gBAAUgB,GAAV,CAAc,gBAAQ;AACpB,YAAI8B,OAAO,KAAX;AACA,aAAK,IAAIX,IAAI,CAAb,EAAgBA,IAAIjC,gBAAgBqE,MAApC,EAA4CpC,GAA5C,EAAiD;AAC/C,cAAMqC,IAAItE,gBAAgBiC,CAAhB,CAAV;AACA,cAAIqC,EAAEtD,KAAF,MAAaX,KAAKW,KAAL,CAAjB,EAA8B;AAC5B4B,mBAAO,IAAP;AACA;AACD;AACF;AACD,YAAI,CAACA,IAAL,EAAW;AACT5C,0BAAgBoE,IAAhB,CAAqB/D,IAArB;AACD;AACF,OAZD;AAaA,WAAKa,QAAL,CAAc,EAAClB,gCAAD,EAAd;AACD;;AAED;;;;8BACUK,I,EAAM;AAAA,UACTW,KADS,GACA,KAAKzC,KADL,CACTyC,KADS;;AAEd,UAAIhB,kBAAkB,KAAKvB,KAAL,CAAWuB,eAAjC;AACA,UAAIC,eAAe,KAAKxB,KAAL,CAAWwB,YAA9B;AACAD,sBAAgBc,GAAhB,CAAoB,UAAC+B,CAAD,EAAGZ,CAAH,EAAO;AACzB,YAAG5B,KAAKW,KAAL,KAAe6B,EAAE7B,KAAF,CAAlB,EAA2B;AACzBhB,0BAAgBuE,MAAhB,CAAuBtC,CAAvB,EAAyB,CAAzB;AACD;AACF,OAJD;;AAMAhC,mBAAaa,GAAb,CAAiB,UAAC+B,CAAD,EAAGZ,CAAH,EAAO;AACtB,YAAG5B,KAAKW,KAAL,KAAe6B,EAAE7B,KAAF,CAAlB,EAA2B;AACzBf,uBAAasE,MAAb,CAAoBtC,CAApB,EAAsB,CAAtB;AACD;AACF,OAJD;AAKA,WAAKf,QAAL,CAAc,EAAClB,gCAAD,EAAkBC,0BAAlB,EAAd;AACD;AACD;;;;mCACeuE,I,EAAM;AAAA,UACdxD,KADc,GACL,KAAKzC,KADA,CACdyC,KADc;;AAEnB,UAAIP,OAAO,IAAX;AACA,UAAI+D,QAAQ,KAAZ,EAAmB;AACjB,YAAG/D,KAAKhC,KAAL,CAAWuB,eAAX,CAA2BqE,MAA3B,KAAsC,CAAzC,EAA4C;AAC1C,4BAAQI,IAAR,CAAa,eAAb;AACA;AACD;AACDhE,aAAKS,QAAL,CAAc,EAAClB,iBAAiB,EAAlB,EAAsBC,cAAc,EAApC,EAAd;AACAQ,aAAKiE,WAAL;AACD,OAPD,MAOO;AACL,YAAIzE,eAAeQ,KAAKhC,KAAL,CAAWwB,YAA9B;AACA,YAAID,kBAAkBS,KAAKhC,KAAL,CAAWuB,eAAjC;AACA,YAAI2E,mBAAmB,EAAvB;AACA,YAAIC,gBAAgB,EAApB;AACA3E,qBAAaa,GAAb,CAAiB,UAAC+B,CAAD,EAAGZ,CAAH,EAAO;AACtBjC,0BAAgBc,GAAhB,CAAoB,UAAC+D,CAAD,EAAGC,CAAH,EAAO;AACzB,gBAAGjC,EAAE7B,KAAF,KAAY6D,EAAE7D,KAAF,CAAf,EAAwB;AACtB,qBAAOhB,gBAAgB8E,CAAhB,CAAP;AACA,qBAAO7E,aAAagC,CAAb,CAAP;AACD;AACF,WALD;AAMD,SAPD;;AASAjC,wBAAgBc,GAAhB,CAAoB,UAAC+B,CAAD,EAAGZ,CAAH,EAAO;AACzB,cAAGY,CAAH,EAAK;AACH8B,6BAAiBP,IAAjB,CAAsBvB,CAAtB;AACD;AACF,SAJD;;AAMA5C,qBAAaa,GAAb,CAAiB,UAAC+B,CAAD,EAAGZ,CAAH,EAAO;AACtB,cAAGY,CAAH,EAAK;AACH+B,0BAAcR,IAAd,CAAmBvB,CAAnB;AACD;AACF,SAJD;AAKA,aAAK3B,QAAL,CAAc,EAAClB,iBAAiB2E,gBAAlB,EAAoC1E,cAAc2E,aAAlD,EAAd;AACD;AACF;;;gCAEWhC,I,EAAM;AAChB,UAAInC,OAAO,IAAX;AACA,UAAImC,IAAJ,EAAU;AAAA,YACH5C,eADG,GACgBS,KAAKhC,KADrB,CACHuB,eADG;;AAER,YAAI+E,UAAU/E,gBAAgBc,GAAhB,CAAoB;AAAA,iBAAKwD,EAAEvD,GAAP;AAAA,SAApB,CAAd;AACAN,aAAKS,QAAL,CAAc,EAAChB,iBAAiB6E,OAAlB,EAAd;AACD,OAJD,MAIO;AACLtE,aAAKS,QAAL,CAAc,EAAChB,iBAAiB,EAAlB,EAAd;AACD;AACF;;AAED;;;;gCACYsB,K,EAAOP,I,EAAM+D,Y,EAAc;AACrC,UAAGA,iBAAiB,QAApB,EAA8B;AAAA,YACrBtG,SADqB,GACR,KAAKD,KADG,CACrBC,SADqB;;AAE5B,YAAIkD,OAAOlD,UAAUuG,IAAV,CAAe;AAAA,iBAAQ5E,KAAKU,GAAL,KAAaE,IAArB;AAAA,SAAf,CAAX;AACAW,aAAKJ,KAAL,GAAaA,KAAb;AACAyD,aAAK,KAAKxG,KAAL,CAAWC,SAAhB;AACA,aAAKwC,QAAL,CAAc,EAACxC,oBAAD,EAAd;AACD,OAND,MAMO;AACL,YAAIwF,MAAMc,eAAe,KAAKvG,KAAL,CAAWuG,YAAX,CAAf,GAA0C,KAAKvG,KAAzD;AACAyF,YAAIjD,IAAJ,IAAYO,KAAZ;AACA,aAAKN,QAAL,4BAAkBgD,GAAlB;AACD;AACF;;;;;AAED;qCACiB;AACf,UAAI9C,OAAO,IAAX;AACA,UAAI8D,WAAW,sBAAE,QAAF,CAAf;AACAC,iBAAW,YAAM;AACf/D,aAAKF,QAAL,CAAc;AACZjC,qBAAWiG,SAASE,MAAT;AADC,SAAd;AAGD,OAJD,EAIG,GAJH;AAKD;;;6BAGQ;AAAA;;AACP,UAAI3E,OAAO,IAAX;AACA,aACE;AAAA;AAAA;AACE;AAAA;AAAA;AACE,mBAAO,KAAKlC,KAAL,CAAWiE,KAAX,IAAoB,IAD7B;AAEE,qBAAS,KAAKjE,KAAL,CAAWI,OAFtB;AAGE,kBAAM,KAAK0G,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAHR;AAIE,sBAAU,KAAKC,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAJZ;AAKE,mBAAO,KAAK7G,KAAL,CAAWO;AALpB;AAOE;AAAA;AAAA,cAAM,WAAU,iBAAhB;AACE;AAAC,qCAAD;AAAA,gBAAe,QACb;AAAA;AAAA;AACE;AAAA;AAAA,sBAAQ,MAAK,SAAb,EAAuB,UAAS,QAAhC,EAAyC,MAAK,OAA9C,EAAsD,SAAS,KAAKwG,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAA/D;AAAA;AAAA,mBADF;AAEE;AAAA;AAAA,sBAAS,UAAS,QAAlB,EAA2B,MAAK,OAAhC,EAAwC,SAAS,KAAKG,WAAL,CAAiBH,IAAjB,CAAsB,IAAtB,CAAjD;AAAA;AAAA;AAFF,iBADF;AAME,4CAAC,oBAAD;AACE,sBAAM,KAAK7G,KAAL,CAAWC,SADnB;AAEE,6BAAa,qBAACqC,GAAD,EAAMS,KAAN;AAAA,yBAAgB,OAAKkE,WAAL,CAAiBlE,KAAjB,EAAwBT,GAAxB,EAA6B,QAA7B,CAAhB;AAAA;AAFf;AANF;AADF,WAPF;AAoBE;AAAA;AAAA,cAAK,QAAQ,EAAb;AACE;AAAA;AAAA,gBAAK,MAAM,EAAX;AACE;AAAA;AAAA,kBAAK,WAAU,WAAf,EAA2B,IAAG,OAA9B;AACE;AAAA;AAAA,oBAAK,WAAWkC,sBAAO0C,UAAvB;AAAA;AAAA,iBADF;AAEE;AACE,6BAAW1C,sBAAO2C,KADpB;AAEE,2BAAS,KAAKC,cAAL,EAFX;AAGE,8BAAY,KAAKpH,KAAL,CAAWqB,SAHzB;AAIE,8BAAY,KAAKgG,aAAL,EAJd;AAKE;AACEhB,uBAAG;AADL,qBAEM,KAAKvG,KAAL,CAAWwH,WAAX,IAA0B,EAFhC;AALF;AAFF;AADF,aADF;AAgBE;AAAA;AAAA,gBAAK,MAAM,CAAX;AACE;AAAA;AAAA,kBAAK,WAAW,eAAe9C,sBAAO+C,QAAtC;AACE;AAAA;AAAA,oBAAK,WAAW/C,sBAAOT,KAAvB;AACE;AAAA;AAAA,sBAAK,MAAM,EAAX;AAEI,yBAAK/D,KAAL,CAAWwB,YAAX,CAAwBoE,MAAxB,KAAmC,CAAnC,GAAsC;AAAA;AAAA;AACpC,+BAAM,uCAD8B;AAEpC,gCAAO,cAF6B;AAGpC,oCAAW,cAHyB;AAIpC,mCAAW;AAAA,iCAAM,OAAK4B,cAAL,CAAoB,EAApB,CAAN;AAAA;AAJyB;AAMpC;AAAC,oCAAD;AAAA;AAAA;AAAA;AANoC,qBAAtC,GASgB;AAAC,kCAAD;AAAA,wBAAM,SAAS,oBAAG;AAAC,4CAAQxB,IAAR,CAAa,QAAb;AAAuB,yBAA1C;AAAA;AAAA;AAXpB,mBADF;AAeE;AAAA;AAAA,sBAAK,MAAM,EAAX;AACE;AAAA;AAAA;AACE,+BAAM,uCADR;AAEE,gCAAO,cAFT;AAGE,oCAAW,cAHb;AAIE,mCAAW;AAAA,iCAAM,OAAKwB,cAAL,CAAoB,KAApB,CAAN;AAAA,yBAJb;AAKE,kCAAU;AAAA,iCAAMxF,KAAKiE,WAAL,EAAN;AAAA;AALZ;AAOE;AAAC,oCAAD;AAAA,0BAAM,SAAS;AAAA,mCAAMjE,KAAKiE,WAAL,CAAiB,IAAjB,CAAN;AAAA,2BAAf;AAAA;AAAA;AAPF;AADF;AAfF,iBADF;AA8BE;AAAA;AAAA,oBAAK,WAAWzB,sBAAOiD,MAAvB,EAA+B,OAAO,EAACjH,WAAW,KAAKR,KAAL,CAAWQ,SAAvB,EAAtC;AACE;AAAA;AAAA;AACE;AACE,iCAAW,0BAAGgE,sBAAOkD,UAAV,EAAsBlD,sBAAO2C,KAA7B,CADb;AAEE,+BAAS,KAAKQ,iBAAL,EAFX;AAGE,kCAAY,KAAK3H,KAAL,CAAWuB,eAHzB;AAIE,kCAAY,KAJd;AAKE,oCAAc;AACZE,yCAAiBO,KAAKhC,KAAL,CAAWyB,eADhB;AAEZ8D,kCAAU,kBAAC9D,eAAD,EAAkBD,YAAlB,EAAmC;AAC3C,iCAAKiB,QAAL,CAAc,EAAChB,gCAAD,EAAkBD,0BAAlB,EAAd;AACD;AAJW,uBALhB;AAWE;AACE6E,2BAAG;AADL,yBAEM,KAAKvG,KAAL,CAAW8H,mBAAX,IAAkC,EAFxC;AAXF;AADF;AADF;AA9BF;AADF;AAhBF;AApBF;AADF,OADF;AA+FD;;;EA9gB0BrI,S","file":"PopUpSelect.jsx","sourceRoot":"C:/Users/liu.ping/helloReact","sourcesContent":["/*\r\n * 弹框多数据选择器\r\n *\r\n * @author 啊九\r\n * @since 2017/12/21\r\n */\r\nimport React from 'react';\r\nimport { Modal, Row, Col, Form, TreeSelect, Select, Table, Input, Button, Icon, Checkbox, Popconfirm, message } from 'antd';\r\nimport { Link } from \"dva/router\";\r\nimport styles  from './PopUpSelect.less';\r\nimport { request } from '../../config/request'\r\nimport $ from 'jquery';\r\nimport { cloneDeep, get } from 'lodash'\r\nimport AdvanceSearch from '../CollapsiblePanels/AdvanceSearch'\r\nimport {QueryCondition} from '../Grid/Grid'\r\nimport config from '../../config/config'\r\nimport cx from 'classnames'\r\n\r\nconst { Component } = React\r\nconst FormItem = Form.Item\r\nconst { Option, OptGroup } = Select\r\nconst TreeNode = TreeSelect.TreeNode\r\n\r\n/*\r\n*\r\n* 产品选择组件\r\n*\r\n*/\r\nexport default class extends Component {\r\n  // 构造函数\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = {\r\n      queryList: cloneDeep(props.queryList),\r\n      //需要传递的参数\r\n      visible: this.props.visible || false,//是否打开\r\n      isSave: this.props.isSave || false,//是否保存已选数据\r\n      onItem: this.props.onItem || false,//更新已选数据\r\n      itemIds:this.props.itemIds || [],\r\n      extendPropName: this.props.extendPropName || 'extendPropName',//属性名称字段\r\n      //组件宽度\r\n      modalWidth: 1000,\r\n      //右侧选择框的高度\r\n      maxHeight: 403,\r\n      //表格数据加载标志\r\n      loadingFlag: true,\r\n      //查询条件\r\n      search: {\r\n        catalogId:\"\",//前端类目\r\n        groupPropId:\"\",//扩展属性类型\r\n        tagId:\"\",//产品标签\r\n        propId:\"\",//产品属性\r\n        propValueId: '', // 选择子产品属性\r\n        propShow: '', // 产品属性显示\r\n        itemCode:\"\",//产品编号\r\n        itemName:\"\",//产品名称\r\n      },\r\n      pageNum: 1,//当前页\r\n      pageSize: 10,//单页条数\r\n      tableData: [],\r\n      total: 0,\r\n      // 已选择的产品\r\n      selectedProduct: [],\r\n      // 右侧已选择产品中选择的行\r\n      selectedRows: [],\r\n      // 右侧已选择产品中选择的行号\r\n      selectedRowKeys: [],\r\n      //关闭按钮  必填\r\n      closeCbk: ()=>{\r\n        this.props.closeCbk();\r\n      },\r\n      // 确认回调\r\n      confirmCbk: (item) => {\r\n        this.props.confirmCbk(item)\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n  //Modal初始化\r\n  componentWillMount() {\r\n    this.setModalWidth()\r\n    // 还需新增state初始化\r\n  }\r\n\r\n  //准备：即将被重新渲染，状态未变化\r\n  componentWillUpdate(nextProps, nextState) {\r\n    let self = this;\r\n    //浏览器大小改变的时候\r\n    window.onresize = function(){\r\n      if (self.state.visible) {\r\n        self.setModalWidth()\r\n      }\r\n    };\r\n  }\r\n\r\n  //完成：正在被重新渲染，状态已变化\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // this.getTableHeight()\r\n  }\r\n\r\n  // 已加载组件，收到新属性时调用\r\n  componentWillReceiveProps(nextProps) {\r\n    // this.state.propsParameter.selArea = nextProps.selArea;\r\n    // this.setState({});\r\n    this.state.visible = nextProps.visible;\r\n    if(this.state.visible == true){\r\n      if(nextProps.isSave){\r\n        let selectedProduct = cloneDeep(nextProps.onItem).map(item => {\r\n          item.key = item[nextProps.idKey]\r\n          item.itemName = item.name\r\n          return item\r\n        })\r\n        this.setState({\r\n          selectedProduct,\r\n          itemIds: nextProps.itemIds\r\n        })\r\n      }\r\n      this.setState({}, ()=>{\r\n        this.getProductList();\r\n      });\r\n    }\r\n  }\r\n\r\n  // 插入真实 DOM\r\n  componentDidMount() {\r\n  }\r\n\r\n\r\n  //获取产品列表\r\n  async getProductList(){\r\n    let that = this;\r\n    let {respListKey, idKey, defaultReqParams = {}} = this.props;\r\n\r\n    this.setState({\r\n      loadingFlag: true,\r\n    })\r\n    let { pageNum, pageSize, search, queryList } = cloneDeep(that.state)\r\n    //组装接口入参\r\n    let params = {};\r\n    queryList.map(item => {\r\n      params[item.key] = item.value;\r\n    });\r\n\r\n    let {resultCode, status, resultMsg, data} = await request({\r\n      url: that.props.requestUrl,\r\n      method: 'GET',\r\n      data: {\r\n        ...defaultReqParams,\r\n        pageNum,\r\n        pageSize,\r\n        ...params,\r\n      }\r\n    });\r\n    if (resultCode == 0 && resultMsg) {\r\n      that.getTableHeight();\r\n      data[respListKey].map((item, i) => {\r\n        item.key = item[idKey]\r\n      })\r\n\r\n      this.setState({\r\n        tableData: data[respListKey],\r\n        total: data.total,\r\n        loadingFlag: false,\r\n      })\r\n    }\r\n  }\r\n\r\n  // 设置Modal宽度\r\n  setModalWidth() {\r\n    let windowWidth = document.body.clientWidth\r\n    let modalWidth = windowWidth * 0.8 > 1200 ? 1200 : windowWidth * 0.8\r\n    this.setState({modalWidth})\r\n  }\r\n\r\n  // 设置表格内容\r\n  setTableColumn() {\r\n    let self = this\r\n    let {idKey, isSingle} = this.props;\r\n\r\n    return [\r\n      ...this.props.tableColumn,\r\n      {\r\n        title: isSingle ? '操作' : <Link\r\n        onClick={() => self.handleSelectAll()}\r\n        >全选</Link>,\r\n        width: 70,\r\n        render: (item) => {\r\n          let flag = false;\r\n          this.state.selectedProduct.map((x,i)=>{\r\n            if(x[idKey] == item[idKey]){\r\n              flag = true\r\n            }\r\n          })\r\n          if (this.state.itemIds) {\r\n            this.state.itemIds.map((x,i)=>{\r\n              if(x == item[idKey]){\r\n                flag = true\r\n              }\r\n            })\r\n          }\r\n          return (\r\n            <div className=\"tableAction\">\r\n              <Link onClick={() => {this.handleSelect(item)}} disabled={flag}>\r\n                {flag ? '已选择' : '选择'}\r\n              </Link>\r\n            </div>\r\n          )\r\n        }\r\n      }\r\n    ]\r\n  }\r\n  setSelectedColumn() {\r\n    return [\r\n      ...this.props.selectedColumn,\r\n      {\r\n        title: \"操作\",\r\n        className: styles.del,\r\n        width: 60,\r\n        fixed: 'right',\r\n        render: (item) => {\r\n          return (\r\n            <Popconfirm\r\n              title='确定要删除吗?'\r\n              okText='确定'\r\n              cancelText='取消'\r\n              onConfirm={() => this.deleteRow(item)}\r\n            >\r\n              {/* <Icon onClick={() => this.deleteRow(item)} style={{fontSize: 24}} type=\"close-circle\"/> */}\r\n              <Icon style={{fontSize: 20}} type=\"close-circle\" onClick={() => this.deleteRow(item)} />\r\n            </Popconfirm>\r\n          )\r\n        }\r\n      },\r\n    ]\r\n  }\r\n\r\n  //分页发生时所调用的方法\r\n  pageChangeHandler(page, size) {\r\n    this.setState({\r\n      pageNum: page,\r\n      pageSize: size\r\n    }, this.getProductList)\r\n  }\r\n\r\n  // 设置分页\r\n  setPagination() {\r\n    return {\r\n      current: parseInt(this.state.pageNum),//当前页\r\n      pageSize: this.state.pageSize,//单页条数\r\n      total: this.state.total,//总条数\r\n      simple:true,\r\n      showTotal: e=>`共 ${this.state.total} 条`,\r\n      showSizeChanger: true,\r\n      showQuickJumper: true,\r\n      onShowSizeChange: (page, size) => {\r\n        this.pageChangeHandler(page, size)\r\n      },\r\n      onChange: (page, size)=>{\r\n        this.pageChangeHandler(page, size)\r\n      }\r\n    }\r\n  }\r\n\r\n  //清空组件状态\r\n  clearSearch(cbk) {\r\n    if (!!cbk) {\r\n      this.setState({\r\n        queryList: cloneDeep(this.props.queryList)\r\n      }, cbk)\r\n    } else {\r\n      this.setState({\r\n        queryList: cloneDeep(this.props.queryList)\r\n      })\r\n    }\r\n  }\r\n\r\n  //弹窗的确定按钮\r\n  handleConfirm(){\r\n    let that = this\r\n    let obj = cloneDeep(that.state.selectedProduct)\r\n    // let returnData = obj.map(item => {\r\n    //   return {\r\n    //     id: item[idKey],\r\n    //     key: item[idKey],\r\n    //     name: item.itemName\r\n    //   }\r\n    // })\r\n    this.state.confirmCbk(obj)\r\n    if(!this.state.isSave){\r\n      this.setState({\r\n        selectedProduct:[],\r\n      }, this.clearSearch)\r\n    }else{\r\n      this.setState({})\r\n    }\r\n\r\n    this.state.closeCbk()\r\n  }\r\n\r\n  //弹窗的取消按钮\r\n  handleCancel(){\r\n    let that = this\r\n    this.setState(\r\n      {\r\n        selectedProduct: [],\r\n        pageNum: 1,\r\n        pageSize: 10\r\n      },\r\n      this.clearSearch\r\n    )\r\n    this.state.closeCbk()\r\n  }\r\n\r\n  //弹窗的查询按钮\r\n  handleSearch() {\r\n    this.setState({\r\n      pageNum: 1,\r\n      pageSize: 10\r\n    }, () => {\r\n      this.getProductList()\r\n    })\r\n  }\r\n\r\n  //弹窗的重置按钮\r\n  handleReset() {\r\n    this.clearSearch(this.getProductList)\r\n  }\r\n\r\n  // 列表的选择按钮\r\n  handleSelect(item) {\r\n    let selectedProduct = this.state.selectedProduct;\r\n    let {isSingle} = this.props;\r\n    if(isSingle) {\r\n      selectedProduct = [item]\r\n    }else {\r\n      selectedProduct.push(item)\r\n    }\r\n    this.setState({selectedProduct})\r\n  }\r\n\r\n  handleSelectAll() {\r\n    let {idKey} = this.props;\r\n    let {tableData, selectedProduct} = this.state\r\n    tableData.map(item => {\r\n      let flag = false\r\n      for (let i = 0; i < selectedProduct.length; i++) {\r\n        const e = selectedProduct[i];\r\n        if (e[idKey] === item[idKey]) {\r\n          flag = true\r\n          break\r\n        }\r\n      }\r\n      if (!flag) {\r\n        selectedProduct.push(item)\r\n      }\r\n    })\r\n    this.setState({selectedProduct})\r\n  }\r\n\r\n  // 右侧已选框中每行的删除\r\n  deleteRow(item) {\r\n    let {idKey} = this.props;\r\n    let selectedProduct = this.state.selectedProduct\r\n    let selectedRows = this.state.selectedRows\r\n    selectedProduct.map((x,i)=>{\r\n      if(item[idKey] == x[idKey]){\r\n        selectedProduct.splice(i,1)\r\n      }\r\n    })\r\n\r\n    selectedRows.map((x,i)=>{\r\n      if(item[idKey] == x[idKey]){\r\n        selectedRows.splice(i,1)\r\n      }\r\n    })\r\n    this.setState({selectedProduct, selectedRows})\r\n  }\r\n  // 右侧已选框上的删除按钮\r\n  deleteSelected(type) {\r\n    let {idKey} = this.props;\r\n    let self = this\r\n    if (type == 'all') {\r\n      if(self.state.selectedProduct.length === 0) {\r\n        message.warn('已选列表中至少存在一条数据')\r\n        return\r\n      }\r\n      self.setState({selectedProduct: [], selectedRows: []})\r\n      self.allSelected()\r\n    } else {\r\n      let selectedRows = self.state.selectedRows;\r\n      let selectedProduct = self.state.selectedProduct;\r\n      let cSelectedProduct = [];\r\n      let cSelectedRows = [];\r\n      selectedRows.map((x,i)=>{\r\n        selectedProduct.map((j,y)=>{\r\n          if(x[idKey] == j[idKey]){\r\n            delete selectedProduct[y]\r\n            delete selectedRows[i]\r\n          }\r\n        })\r\n      })\r\n\r\n      selectedProduct.map((x,i)=>{\r\n        if(x){\r\n          cSelectedProduct.push(x)\r\n        }\r\n      })\r\n\r\n      selectedRows.map((x,i)=>{\r\n        if(x){\r\n          cSelectedRows.push(x)\r\n        }\r\n      })\r\n      this.setState({selectedProduct: cSelectedProduct, selectedRows: cSelectedRows})\r\n    }\r\n  }\r\n\r\n  allSelected(flag) {\r\n    let self = this\r\n    if (flag) {\r\n      let {selectedProduct} = self.state\r\n      let allKeys = selectedProduct.map(e => e.key)\r\n      self.setState({selectedRowKeys: allKeys})\r\n    } else {\r\n      self.setState({selectedRowKeys: []})\r\n    }\r\n  }\r\n\r\n  //更新状态值\r\n  updateModel(value, name, modHierarchy) {\r\n    if(modHierarchy === 'search') {\r\n      const {queryList} = this.state;\r\n      let data = queryList.find(item => item.key === name);\r\n      data.value = value;\r\n      find(this.state.queryList)\r\n      this.setState({queryList})\r\n    } else {\r\n      let obj = modHierarchy ? this.state[modHierarchy] : this.state;\r\n      obj[name] = value;\r\n      this.setState({...obj})\r\n    }\r\n  };\r\n\r\n  //获取左侧表格的高度\r\n  getTableHeight() {\r\n    let that = this\r\n    let tableDom = $('#table')\r\n    setTimeout(() => {\r\n      that.setState({\r\n        maxHeight: tableDom.height()\r\n      })\r\n    }, 100);\r\n  }\r\n\r\n\r\n  render() {\r\n    let self = this\r\n    return (\r\n      <div>\r\n        <Modal\r\n          title={this.props.title || '选择'}\r\n          visible={this.props.visible}\r\n          onOk={this.handleConfirm.bind(this)}\r\n          onCancel={this.handleCancel.bind(this)}\r\n          width={this.state.modalWidth}\r\n        >\r\n          <Form className=\"public_listMain\">\r\n            <AdvanceSearch footer={\r\n              <span>\r\n                <Button type=\"primary\" htmlType=\"button\" size=\"large\" onClick={this.handleSearch.bind(this)}>搜索</Button>\r\n                <Button  htmlType=\"button\" size=\"large\" onClick={this.handleReset.bind(this)}>重置</Button>\r\n              </span>\r\n            }>\r\n              <QueryCondition\r\n                data={this.state.queryList}\r\n                inputChange={(key, value) => this.updateModel(value, key, 'search')}\r\n              />\r\n            </AdvanceSearch>\r\n          </Form>\r\n          <Row gutter={16}>\r\n            <Col span={16}>\r\n              <div className=\"boxShadow\" id='table'>\r\n                <Row className={styles.emptyTitle}>&nbsp;</Row>\r\n                <Table\r\n                  className={styles.table}\r\n                  columns={this.setTableColumn()}\r\n                  dataSource={this.state.tableData}\r\n                  pagination={this.setPagination()}\r\n                  scroll={{\r\n                    y: 310,\r\n                    ...(this.props.tableScroll || {})\r\n                  }}\r\n                />\r\n              </div>\r\n            </Col>\r\n            <Col span={8}>\r\n              <div className={'boxShadow ' + styles.selected}>\r\n                <Row className={styles.title}>\r\n                  <Col span={12}>\r\n                    {\r\n                      this.state.selectedRows.length !== 0 ?<Popconfirm\r\n                        title='确定要删除吗?'\r\n                        okText='确定'\r\n                        cancelText='取消'\r\n                        onConfirm={() => this.deleteSelected('')}\r\n                      >\r\n                        <Link>\r\n                          批量删除\r\n                        </Link>\r\n                      </Popconfirm> : <Link onClick={e=>{message.warn(\"至少选择一项\")}}>批量删除</Link>\r\n                    }\r\n                  </Col>\r\n                  <Col span={12}>\r\n                    <Popconfirm\r\n                      title='确定要删除吗?'\r\n                      okText='确定'\r\n                      cancelText='取消'\r\n                      onConfirm={() => this.deleteSelected('all')}\r\n                      onCancel={() => self.allSelected()}\r\n                    >\r\n                      <Link onClick={() => self.allSelected(true)} >\r\n                        全部删除\r\n                      </Link>\r\n                    </Popconfirm>\r\n                  </Col>\r\n                </Row>\r\n                <Row className={styles.scroll} style={{maxHeight: this.state.maxHeight}}>\r\n                  <Col>\r\n                    <Table\r\n                      className={cx(styles.textNoWrap, styles.table)}\r\n                      columns={this.setSelectedColumn()}\r\n                      dataSource={this.state.selectedProduct}\r\n                      pagination={false}\r\n                      rowSelection={{\r\n                        selectedRowKeys: self.state.selectedRowKeys,\r\n                        onChange: (selectedRowKeys, selectedRows) => {\r\n                          this.setState({selectedRowKeys, selectedRows})\r\n                        },\r\n                      }}\r\n                      scroll={{\r\n                        y: 310,\r\n                        ...(this.props.selectedTableScroll || {})\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n"]}