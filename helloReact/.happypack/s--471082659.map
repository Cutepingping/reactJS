{"version":3,"sources":["src\\pages\\goodsMgmt\\goodsList\\goodsListView.jsx"],"names":["routeView","dispatch","model","form","resetFields","getFieldDecorator","validateFields","setFieldsValue","modelObj","namespace","clickHandler","e","type","payload","pageProps","ui","api_url","method","params","mockData","search_bar","fields","action_bar","table","actions","biz","syncBackCbf","mapStateToProps","create"],"mappings":";;;;;;;;;;;;AACA;;;;AAEA;;AAIA;;;;AAEA;;AAEA;;;;AAEA;;;;;;AAEA;;;;;;;AALA;;AAJA;;AAFA;AAJA;AAqBA,IAAMA,YAAY,SAAZA,SAAY,OAAkC;AAAA,MAAxBC,QAAwB,QAAxBA,QAAwB;AAAA,MAAdC,KAAc,QAAdA,KAAc;AAAA,MAAPC,IAAO,QAAPA,IAAO;;AAClD;AADkD,MAE3CC,WAF2C,GAEuBD,IAFvB,CAE3CC,WAF2C;AAAA,MAE9BC,iBAF8B,GAEuBF,IAFvB,CAE9BE,iBAF8B;AAAA,MAEXC,cAFW,GAEuBH,IAFvB,CAEXG,cAFW;AAAA,MAEKC,cAFL,GAEuBJ,IAFvB,CAEKI,cAFL;AAGlD;;AAHkD,MAI1CC,QAJ0C,GAIlBN,KAJkB,CAI1CM,QAJ0C;AAAA,MAIhCC,SAJgC,GAIlBP,KAJkB,CAIhCO,SAJgC;;AAMlD;;AAEA;;AACA,MAAMC,eAAe,SAAfA,YAAe,CAACC,CAAD,EAAO;AAC1B;AACAV,aAAS;AACPW,YAASH,SAAT,SADO;AAEPI,eAAS;AAFF,KAAT;AAID,GAND;;AAQA,MAAIC,YAAY;AACd;AACAC,QAAI;AACF;AACAC,eAAS,EAFP;AAGF;AACAC,cAAQ,KAJN;AAKF;AACAC,cAAQ,uBANN;AAOF;AACAC,gBAAUA,uBARR;AASF;AACAC,kBAAY;AACVC,gBAAQ;AADE,OAVV;AAcF;AACAC,kBAAY,EAfV;AAkBF;AACAC,aAAO;AACL;AACAF,gBAAQ,EAFH;AAIL;AACAG,iBAAS;AALJ;AAnBL;;AA8BN;AAhCgB,GAAhB,CAiCA,IAAG,CAAC,CAAChB,SAASiB,GAAd,EAAkB;AAChBX,cAAUW,GAAV,GAAgBjB,SAASiB,GAAzB;AACAX,cAAUW,GAAV,CAAcC,WAAd,GAA4B,UAACD,GAAD,EAAS;AACnCxB,eAAS;AACPW,cAASH,SAAT,gBADO;AAEPI,iBAASY;AAFF,OAAT;AAID,KALD;AAMD;;AAED,SAAO,8BAAC,kBAAD,IAAU,WAAYX,SAAtB,GAAP;AACA;AACD,CA9DD;;AAgEA;;AAzEA;;AAJA;;AANA;kBAoFe,kBAAQa,2BAAR,EAAyB,eAAKC,MAAL,GAAc5B,SAAd,CAAzB,C","file":"goodsListView.jsx","sourceRoot":"C:/Users/liu.ping/helloReact","sourcesContent":["// React基础组件\r\nimport React from 'react'\r\n// dva 连接组件 - 连接route和model\r\nimport { connect } from 'dva'\r\n// 引入antd的组件\r\nimport { Form } from 'antd'\r\n// 引入列表页组件\r\nimport ListPage from 'widget/PageTmpl/ListPage'\r\n// 引入model取值工具方法\r\nimport { mapStateToProps } from 'utils/view_utils'\r\n// 当前组件样式\r\nimport styles from './goodsListStyle.less'\r\n// 引入模拟数据\r\nimport mockData  from './goodsListMock.js'\r\n\r\n/**\r\n * description 路由视图及事件处理\r\n * dispatch 分发到models中的effects对应事件名\r\n * model 用于获取models中state定义的数据\r\n * form 表单对象\r\n */\r\nconst routeView = function({dispatch, model, form}) {\r\n  // 表单的子函数\r\n  const {resetFields, getFieldDecorator, validateFields, setFieldsValue} = form\r\n  // 取出model对象，命名空间\r\n  const { modelObj, namespace } = model\r\n\r\n  // modelObj.xxx获取model中状态机的值\r\n\r\n  // 点击处理事件\r\n  const clickHandler = (e) => {\r\n    // 分发到model文件中effects的xxx方法\r\n    dispatch({\r\n      type: `${namespace}/xxx`,\r\n      payload: {}\r\n    });\r\n  }\r\n\r\n  let pageProps = {\r\n    // ---------- 界面部分 ----------\r\n    ui: {\r\n      // 页面接口地址\r\n      api_url: \"\",\r\n      // 接口方式\r\n      method: \"GET\",\r\n      // 接口参数\r\n      params: \"pageNum=1&pageSize=10\",\r\n      // 模拟数据 - 用于开发需要，若填充了上面的api_url之后，请将此项设置为null\r\n      mockData: mockData,\r\n      // 查询栏\r\n      search_bar: {\r\n        fields: [\r\n        ]\r\n      },\r\n      // 操作栏\r\n      action_bar: [\r\n       \r\n      ],\r\n      // 数据表格\r\n      table: {\r\n        // 表头字段列表\r\n        fields: [\r\n        ],\r\n        // 表格操作\r\n        actions: [\r\n        ]\r\n      }\r\n    }\r\n  }\r\n\r\n  // 用于同步列表的值到父组件\r\n  if(!!modelObj.biz){\r\n    pageProps.biz = modelObj.biz\r\n    pageProps.biz.syncBackCbf = (biz) => {\r\n      dispatch({\r\n        type: `${namespace}/setFormVal`,\r\n        payload: biz\r\n      })\r\n    }\r\n  }\r\n\r\n  return <ListPage pageProps={ pageProps }/>\r\n  // return <div onClick={ e => clickHandler(e)>列表页</div>\r\n}\r\n\r\n// 连接视图(view)和模型(model)\r\nexport default connect(mapStateToProps)(Form.create()(routeView))"]}