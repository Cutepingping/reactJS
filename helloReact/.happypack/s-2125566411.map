{"version":3,"sources":["src\\pages\\goodsMgmt\\goodsDetail\\goodsDetailMod.js"],"names":["defultState","xxx","imgUrl01","tmpModule","state","subscriptions","setup","dispatch","history","listen","pathname","query","type","payload","effects","queryInfo","put","call","select","console","log","tmpState","getGoods","data","resultCode","resultMsg","error","goodsInfo","reducers","detailStore","preState","action","Object","assign"],"mappings":";;;;;;;;;;AACA;;AAIA;;;;AAKA;;AAEA;;AAEA;;;;AAEA;;AALA;;AAPA;;AAFA;AAeA,IAAMA,cAAc;AAClBC,OAAK,GADa;AAElBC,YAAU;;AAGZ;AALoB,CAApB;AAJA;;AAPA;;;;AANA;AAuBA,IAAMC,YAAY;AAChB;AACAC,SAAO,uBAAUJ,WAAV,CAFS;AAGhB;AACAK,iBAAe;AACbC,SADa,uBACe;AAAA,UAApBC,QAAoB,QAApBA,QAAoB;AAAA,UAAVC,OAAU,QAAVA,OAAU;;AAC1BA,cAAQC,MAAR,CAAe,iBAAyB;AAAA,YAAtBC,QAAsB,SAAtBA,QAAsB;AAAA,YAAZC,KAAY,SAAZA,KAAY;;AACtC;AACA,YAAG,KAAKR,UAAUO,QAAf,KAA4B,KAAKA,QAApC,EAA6C;AAC3C;AACAH,mBAAS;AACPK,kBAAM,WADC;AAEPC,qBAAS;AAFF,WAAT,EAF2C,CAKxC;AACJ,SARqC,CAQpC;AACH,OATD,EAD0B,CAUvB;AACJ;AAZY,GAJC;;AAmBhB;AACAC,WAAS;AACP;AACCC,aAFM;AAAA,UAEMF,OAFN,SAEMA,OAFN;AAAA,UAEmBG,GAFnB,SAEmBA,GAFnB;AAAA,UAEwBC,IAFxB,SAEwBA,IAFxB;AAAA,UAE8BC,MAF9B,SAE8BA,MAF9B;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIH;AACAC,sBAAQC,GAAR,CAAY,gBAAZ;AALG,+CAMI,KANJ;;AAAA;AAQCC,sBARD;AAAA;AAAA,qBAU6CJ,KAAKK,yBAAL,EAAe,eAAM,EAAErB,KAAK,GAAP,EAAN,CAAf,CAV7C;;AAAA;AAAA;AAUKsB,kBAVL,SAUKA,IAVL;AAUYC,wBAVZ,SAUYA,UAVZ;AAUyBC,uBAVzB,SAUyBA,SAVzB;AAAA;AAAA,qBAYGT,IAAI,EAAE;AACVJ,sBAAM,aADE,EACa;AACrBC,yBAAQ;AACNZ,uBAAKsB;AADC;AAFA,eAAJ,CAZH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAmBHJ,sBAAQO,KAAR;;AAnBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAsBP;AACCC,aAvBM;AAAA,UAuBMd,OAvBN,SAuBMA,OAvBN;AAAA,UAuBmBG,GAvBnB,SAuBmBA,GAvBnB;AAAA,UAuBwBC,IAvBxB,SAuBwBA,IAvBxB;AAAA,UAuB8BC,MAvB9B,SAuB8BA,MAvB9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAyBGF,IAAI,EAAE;AACVJ,sBAAM,aADE,EACa;AACrBC,yBAAQ;AACNX,4BAAU;AADJ;AAFA,eAAJ,CAzBH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAgCHiB,sBAAQO,KAAR;;AAhCG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GApBO;;AA0DhB;AACAE,YAAU;AACRC,eADQ,uBACIC,QADJ,EACcC,MADd,EACsB;AAC5B,aAAOC,OAAOC,MAAP,CAAc,EAAd,EAAkBH,QAAlB,EAA4BC,OAAOlB,OAAnC,CAAP;AACD;AAHO;AA3DM,CAAlB;;kBAkEeV,S","file":"goodsDetailMod.js","sourceRoot":"C:/Users/liu.ping/helloReact","sourcesContent":["// 对象和JSON字符串互转\r\nimport { parse } from 'qs'\r\n// 弹出消息框\r\nimport { message } from 'antd'\r\n// 日期处理对象\r\nimport moment from 'moment'\r\n/* isEmpty 对象是否为空\r\n * isArray 对象是否数组\r\n * cloneDeep 对象深拷贝\r\n */\r\nimport {isEmpty, isArray, cloneDeep, merge} from 'lodash'\r\n// 引入路由对象\r\nimport { hashHistory } from 'dva/router'\r\n// 引入接口文件\r\nimport { getGoods } from './goodsDetailServ.js'\r\n\r\n// 初始默认状态\r\nconst defultState = {\r\n  xxx: '1',\r\n  imgUrl01: 'assets/img/u1837.png',\r\n}\r\n\r\n// 声明module\r\nconst tmpModule = {\r\n  // 默认状态\r\n  state: cloneDeep(defultState),\r\n  // 入口函数(先执行)\r\n  subscriptions: {\r\n    setup ({dispatch, history}) {\r\n      history.listen(({ pathname, query }) => {\r\n        // 页面路由匹配时执行\r\n        if('' + tmpModule.pathname === '' + pathname){\r\n          // 执行业务操作\r\n          dispatch({\r\n            type: 'queryInfo',\r\n            payload: {}\r\n          }) // end dispatch\r\n        } // end if\r\n      }) // end listen\r\n    },\r\n  },\r\n\r\n  // 方法列表\r\n  effects: {\r\n    // 查询记录\r\n    *queryInfo({ payload }, { put, call, select }) {\r\n      try{\r\n        // 中断往下执行，以下是示例代码，代码生成后去掉 return false可继续执行\r\n        console.log('this is detail')\r\n        return false\r\n        // 获取当前组件状态机中的数据，也可以获取其他组件的状态机数据，只要他们被创建过\r\n        let tmpState = yield select(state => state[tmpModule.namespace])\r\n        //调用接口，并传参\r\n        const { data , resultCode , resultMsg } = yield call(getGoods, parse({ xxx: \"1\" }))\r\n        // 调完接口，将返回的数据存入到状态机\r\n        yield put({ // 调用reducers中方法，把新数据与状态机数据合并更新\r\n          type: 'detailStore', // 方法名，也可以调用effects中的方法\r\n          payload:{\r\n            xxx: data\r\n          }\r\n        })\r\n      }catch(e){\r\n        console.error(e)\r\n      }\r\n    },\r\n    // 商品详情\r\n    *goodsInfo({ payload }, { put, call, select }) {\r\n      try{\r\n        yield put({ // 调用reducers中方法，把新数据与状态机数据合并更新\r\n          type: 'detailStore', // 方法名，也可以调用effects中的方法\r\n          payload:{\r\n            imgUrl01: '../../../assets/img/u1825_img',\r\n          }\r\n        })\r\n      }catch(e){\r\n        console.error(e)\r\n      }\r\n    },\r\n\r\n  }, \r\n\r\n  // 存入状态机\r\n  reducers: {\r\n    detailStore(preState, action) {\r\n      return Object.assign({}, preState, action.payload)\r\n    },\r\n  }\r\n}\r\n\r\nexport default tmpModule"]}