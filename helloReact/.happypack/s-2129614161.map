{"version":3,"sources":["src\\pages\\goodsMgmt\\goodsList\\goodsListView.jsx"],"names":["routeView","dispatch","model","form","resetFields","getFieldDecorator","validateFields","setFieldsValue","modelObj","namespace","clickHandler","e","type","payload","pageProps","ui","api_url","method","params","mockData","search_bar","fields","en_name","zh_name","elem_type","elem_valid_type","placeholder","split_keys","format","double","cmpt_items","label","value","key","children","action_bar","table","actions","biz","syncBackCbf","styles","title","mapStateToProps","create"],"mappings":"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","file":"goodsListView.jsx","sourceRoot":"C:/Users/liu.ping/helloReact","sourcesContent":["// React基础组件\r\nimport React from 'react'\r\n// dva 连接组件 - 连接route和model\r\nimport { connect } from 'dva'\r\n// 引入antd的组件\r\nimport { Form } from 'antd'\r\n// 引入列表页组件\r\nimport ListPage from 'widget/PageTmpl/ListPage'\r\n// 引入model取值工具方法\r\nimport { mapStateToProps } from 'utils/view_utils'\r\n// 当前组件样式\r\nimport styles from './goodsListStyle.less'\r\n// 引入模拟数据\r\nimport mockData  from './goodsListMock.js'\r\n\r\n/**\r\n * description 路由视图及事件处理\r\n * dispatch 分发到models中的effects对应事件名\r\n * model 用于获取models中state定义的数据\r\n * form 表单对象\r\n */\r\nconst routeView = function({dispatch, model, form}) {\r\n  // 表单的子函数\r\n  const {resetFields, getFieldDecorator, validateFields, setFieldsValue} = form\r\n  // 取出model对象，命名空间\r\n  const { modelObj, namespace } = model\r\n\r\n  // modelObj.xxx获取model中状态机的值\r\n\r\n  // 点击处理事件\r\n  const clickHandler = (e) => {\r\n    // 分发到model文件中effects的xxx方法\r\n    dispatch({\r\n      type: `${namespace}/xxx`,\r\n      payload: {}\r\n    });\r\n  }\r\n\r\n  let pageProps = {\r\n    // ---------- 界面部分 ----------\r\n    ui: {\r\n      // 页面接口地址\r\n      api_url: \"\",\r\n      // 接口方式\r\n      method: \"GET\",\r\n      // 接口参数\r\n      params: \"pageNum=1&pageSize=10\",\r\n      // 模拟数据 - 用于开发需要，若填充了上面的api_url之后，请将此项设置为null\r\n      mockData: mockData,\r\n      // 查询栏\r\n      search_bar: {\r\n        fields: [\r\n          {\r\n            en_name: 'carCode', // 字段英文名\r\n            zh_name: '车型编号', // 字段中文名\r\n            elem_type: 'Input', // 页面元素类型\r\n            elem_valid_type: 'string', // 页面元素校验类型，使用antd的校验类型，支持正则表达式\r\n          },\r\n          {\r\n            en_name: 'carName', \r\n            zh_name:'车型名称',\r\n            placeholder: '使用逗号做分隔符',\r\n            elem_type: 'Input',\r\n            elem_valid_type: 'string'\r\n          },\r\n          {\r\n            en_name: 'createTime',\r\n            zh_name: '创建时间',\r\n            elem_type: 'Date',\r\n            split_keys: ['createTimeBegin',\r\n              'createTimeEnd'\r\n            ],\r\n            format: 'YYYY-MM-DD',\r\n            elem_valid_type: 'string'\r\n          },\r\n          {\r\n            en_name:'validTime',\r\n            zh_name: '有效时间',\r\n            elem_type: 'Date',\r\n            format: 'YYYY-MM-DD HH:mm:ss',\r\n            double: true,\r\n            split_keys: ['validTimeBegin', 'validTimeEnd'],\r\n            elem_valid_type: 'string'\r\n          },\r\n          {\r\n            en_name: 'catelogId',\r\n            zh_name: '分类',\r\n            elem_type: 'TreeSelect',\r\n            elem_valid_type: 'string',\r\n            cmpt_items: [\r\n              {\r\n                label: '子节点一',\r\n                value: '0-0',\r\n                key: '0-0',\r\n                children: [\r\n                  {\r\n                    label: '子节点一',\r\n                    value: '0-0-1',\r\n                    key: '0-0-1'\r\n                  },\r\n                  {\r\n                    label: '子节点二',\r\n                    value: '0-0-2',\r\n                    key: '0-0-2'\r\n                  }\r\n                ]\r\n              }\r\n\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      // 操作栏\r\n      action_bar: [\r\n       \r\n      ],\r\n      // 数据表格\r\n      table: {\r\n        // 表头字段列表\r\n        fields: [\r\n        ],\r\n        // 表格操作\r\n        actions: [\r\n        ]\r\n      }\r\n    }\r\n  }\r\n\r\n  // 用于同步列表的值到父组件\r\n  if(!!modelObj.biz){\r\n    pageProps.biz = modelObj.biz\r\n    pageProps.biz.syncBackCbf = (biz) => {\r\n      dispatch({\r\n        type: `${namespace}/setFormVal`,\r\n        payload: biz\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"boxShadow\">\r\n      <div className={styles.title}>商品条目</div>\r\n      <hr/>\r\n      <ListPage pageProps={ pageProps }/>\r\n    </div>\r\n    \r\n  )\r\n  // return <div onClick={ e => clickHandler(e)>列表页</div>\r\n}\r\n\r\n// 连接视图(view)和模型(model)\r\nexport default connect(mapStateToProps)(Form.create()(routeView))"]}