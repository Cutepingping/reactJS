{"version":3,"sources":["src\\widget\\PageTabs\\index.js"],"names":["props","context","onTabRemove","targetKey","e","cbf","stopPropagation","nativeEvent","stopImmediatePropagation","nextTabKey","state","currentTabKey","currentTabIndex","tabPanes","forEach","pane","i","key","length","location","locationMap","newTabPanes","filter","setState","hashHistory","push","isDva","isReload","headerProps","currTabTitle","menuList","tabWid","maxTabCount","nextProps","tabProps","onAddTabs","activeKey","self","flag","currTabCount","content","tmpArr","splice","payload","routes","routeObj","path","indexOf","cloneKey","name","tabCount","loadMenuList","exist","currTitle","title","currKey","getCurrKey","children","limitTabCount","setMaxTabWidth","setTabTitle","pathname","slice","cloneTabPanes","map","tab","AppBus","on","Error","substring","closeAll","refs","tabDomList","totalWidth","tabDomObj","tabDomWidth","offsetWidth","ulObj","liArr","len","swipeRight","scrollLeft","tabStyles","tabContainer","tabListContainer","tabList","pan","tabItems","active","link","onTabChange","icon","window","CURR_TAB_KEY","fade","in","swipeLeft","renderTabNav","styles","container","renderContent","renderBody","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;AAGA;;;;AAEA;;;;AAIA;;;;AAEA;;AAEA;;AAGA;;;;AAEA;;;;AAEA;;;;AAIA;;;;AAEA;;;;;;AAEA;;AAPA;AACA;;AAfA;;AALA;;;;AA4BE;AACA,oBAAYA,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA,kIACpBD,KADoB,EACbC,OADa;;AAAA,UAkQ5BC,WAlQ4B,GAkQd,UAACC,SAAD,EAAYC,CAAZ,EAAeC,GAAf,EAAuB;AACnC,UAAG,CAAC,CAACD,CAAL,EAAO;AACL;AACAA,UAAEE,eAAF;AACAF,UAAEG,WAAF,CAAcC,wBAAd;AACD;AACD;;AAEA;AACA,UAAIC,aAAa,MAAKC,KAAL,CAAWC,aAA5B;;AAEA,UAAI,KAAK,MAAKD,KAAL,CAAWC,aAAhB,KAAkC,KAAKR,SAA3C,EAAsD;;AAEpD,YAAIS,kBAAkB,CAAC,CAAvB;AACA,cAAKF,KAAL,CAAWG,QAAX,CAAoBC,OAApB,CAA4B,UAACC,IAAD,EAAOC,CAAP,EAAa;AACvC,cAAID,KAAKE,GAAL,KAAad,SAAjB,EAA4B;AAC1BS,8BAAkBI,CAAlB;AACD;AACF,SAJD;;AAMA;AACA,YAAIJ,kBAAkB,CAAtB,EAAyB;AACvBH,uBAAa,MAAKC,KAAL,CAAWG,QAAX,CAAoBD,kBAAkB,CAAtC,EAAyCK,GAAtD;AACD;AACD;AAHA,aAIK,IAAIL,oBAAoB,CAApB,IAAyB,MAAKF,KAAL,CAAWG,QAAX,CAAoBK,MAApB,GAA6B,CAA1D,EAA6D;AAChET,yBAAa,MAAKC,KAAL,CAAWG,QAAX,CAAoBD,kBAAkB,CAAtC,EAAyCK,GAAtD;AACD;AACD;AACD;AACD;AACA,UAAIE,WAAW,iBAAI,MAAKT,KAAL,CAAWU,WAAf,QAAgCX,UAAhC,QAA+C,MAAKC,KAAL,CAAWS,QAA1D,CAAf;AACA;AACA,UAAME,cAAc,MAAKX,KAAL,CAAWG,QAAX,CAAoBS,MAApB,CAA2B;AAAA,eAAQP,KAAKE,GAAL,KAAad,SAArB;AAAA,OAA3B,CAApB;AACA;AACA,YAAKoB,QAAL,CAAc,EAAEV,UAAUQ,WAAZ,EAAyBV,eAAe,KAAKF,UAA7C,EAAyDU,kBAAzD,EAAd,EAAmF,YAAM;AACvF,YAAG,CAACf,CAAJ,EAAM;AACJC,iBAAOA,KAAP;AACD,SAFD,MAEK;AACH;AACA,cAAG,MAAMgB,YAAYH,MAArB,EAA4B;AAC1B;AACAM,gCAAYC,IAAZ,CAAiB,OAAjB;AACD;AACF;AACF,OAVD;AAWD,KAhT2B;;AAE1B,UAAKf,KAAL,GAAa;AACXgB,aAAO,KADI;AAEXC,gBAAU,KAFC;AAGXC,mBAAa,EAHF;AAIXT,gBAAU,EAJC;AAKXC,mBAAa,EALF;AAMXT,qBAAe,EANJ;AAOXkB,oBAAc,EAPH;AAQXhB,gBAAU,EARC;AASXiB,gBAAU,EATC;AAUXC,cAAQ,KAVG;AAWXC,mBAAa;AAXF,KAAb;AAF0B;AAe3B;;AAED;;;;;yCACqB,CACpB;;AAED;;;;8CAC0BC,S,EAAW;AACnC,UAAG,CAACA,UAAUC,QAAd,EAAwB,OAAO,KAAP;AACxB,WAAKC,SAAL,CAAeF,SAAf;AACD;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;gCACYG,S,EAAWhC,C,EAAE;AACvB;AACAA,QAAEE,eAAF;AACAF,QAAEG,WAAF,CAAcC,wBAAd;AAHuB,mBAIO,KAAKE,KAJZ;AAAA,UAIlBU,WAJkB,UAIlBA,WAJkB;AAAA,UAILO,QAJK,UAILA,QAJK;;AAKvB,WAAKJ,QAAL,CAAc,EAAEZ,eAAeyB,SAAjB,EAA4BjB,UAAUC,YAAY,KAAKgB,SAAjB,CAAtC,EAAmET,UAAU,CAACA,QAA9E,EAAd;AACA,aAAO,KAAP;AACD;;AAED;;;;+BACU;AACR,UAAIU,OAAO,IAAX;AADQ,UAEHxB,QAFG,GAESwB,KAAK3B,KAFd,CAEHG,QAFG;;AAGR,UAAG,MAAMA,SAASK,MAAlB,EAA0B,OAAO,KAAP;AAC1BmB,WAAKd,QAAL,CAAc;AACZV,kBAAU;AADE,OAAd,EAEG,YAAM;AACP;AACA;AACAW,4BAAYC,IAAZ,CAAiB,OAAjB;AACD,OAND;AAOD;;AAED;;;;mCACc;AACZ;AACA,UAAIY,OAAO,IAAX;AAFY,wBAGeA,KAAK3B,KAHpB;AAAA,UAGPoB,QAHO,eAGPA,QAHO;AAAA,UAGGjB,QAHH,eAGGA,QAHH;;AAIZ,UAAG,MAAMiB,SAASZ,MAAlB,EAAyB;AACvB;AACD;AACD;AACAY,iBAAW;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBS,OAAX;AAqBAO,WAAKd,QAAL,CAAc,EAACO,kBAAD,EAAd;AACD;;AAED;;;;oCACe;AACb;AACA,UAAIO,OAAO,IAAX;AACA;AACA,UAAIC,OAAO,KAAX;;AAEA,UAAIC,eAAe,KAAK7B,KAAL,CAAWG,QAAX,CAAoBK,MAAvC;;AAEA;AACA,UAAGqB,eAAe,CAAf,IAAqBA,eAAe,KAAK7B,KAAL,CAAWsB,WAAlD,EAA+D;AAC7D,aAAKtB,KAAL,CAAWG,QAAX,CAAoB,CAApB,EAAuB2B,OAAvB,GAAiC,IAAjC;AACA;AACA,aAAK9B,KAAL,CAAWG,QAAX,CAAoB,CAApB,IAAyB,IAAzB;AACA;AACA,YAAI4B,SAAS,KAAK/B,KAAL,CAAWG,QAAxB;AACA;AACA4B,eAAOC,MAAP,CAAc,CAAd,EAAiB,CAAjB;AACA;AACAL,aAAKd,QAAL,CAAc,EAACV,UAAU4B,MAAX,EAAd;AACA;AACAH,eAAO,KAAP;;AAEF;AACC,OAdD,MAcK;AACHA,eAAO,IAAP;AACD;AACD,aAAOA,IAAP;AACD;;AAED;;;;8BACUK,O,EAAQ;AAChB;AACA,UAAIN,OAAO,IAAX;AACA;AAHgB,UAIXjB,WAJW,GAII,KAAKV,KAJT,CAIXU,WAJW;AAKhB;;AALgB,UAMXc,QANW,GAMsCS,OANtC,CAMXT,QANW;AAAA,UAMDN,WANC,GAMsCe,OANtC,CAMDf,WANC;AAAA,UAMYT,QANZ,GAMsCwB,OANtC,CAMYxB,QANZ;AAAA,UAMsBU,YANtB,GAMsCc,OANtC,CAMsBd,YANtB;;AAQhB;;AACA,UAAIH,QAAQ,CAACQ,SAASlC,KAAV,GAAiB,KAAjB,GAAwB,IAApC;AACA;AACA,UAAI2B,WAAWD,KAAf;;AAEAW,WAAKd,QAAL,CAAc,EAACG,YAAD,EAAQE,wBAAR,EAAqBT,kBAArB,EAA+BQ,kBAA/B,EAAd;;AAEA;;;;AAIA,UAAIiB,SAAS,CAAClB,KAAD,GAAQQ,SAASU,MAAjB,GAAyBV,SAASlC,KAAT,CAAe4C,MAArD;AACA;AACA,UAAIC,WAAWD,OAAOA,OAAO1B,MAAP,GAAgB,CAAvB,CAAf;AACA;AACA,UAAID,MAAM4B,SAASC,IAAnB;;AAEA;AACA,UAAG,CAAC7B,GAAJ,EAAQ;AACN,aAAKP,KAAL,CAAWG,QAAX,CAAoBK,MAApB,GAA6B,CAA7B;AACA;AACD;;AAED,UAAG,CAAC,CAAD,KAAOD,IAAI8B,OAAJ,CAAY,OAAZ,CAAV,EAA+B;AAC7B9B,wBAAcA,GAAd;AACD;;AAED;AACA,UAAI+B,WAAW/B,GAAf;AACA;AACA,UAAIgC,OAAOJ,SAASI,IAApB;;AAEA;AACA,UAAI,CAAC,KAAKC,QAAV,EAAoB;AAClB,aAAKA,QAAL,GAAgB,CAAhB;AACD;;AAED;;AAEA;AACA;;AAEA;AACA9B,kBAAY,KAAKH,GAAjB,IAAwBE,QAAxB;AACAkB,WAAKd,QAAL,CAAc,EAACH,wBAAD,EAAd;;AAEA;AACAiB,WAAKc,YAAL;;AAEA;AACA,WAAKzC,KAAL,CAAWC,aAAX,GAA2BM,GAA3B;;AAEA;AACA,UAAImC,QAAQ,KAAZ;AA7DgB;AAAA;AAAA;;AAAA;AA8DhB,6BAAmB,KAAK1C,KAAL,CAAWG,QAA9B,8HAAwC;AAAA,cAA7BE,IAA6B;;AACtC,cAAI,KAAKA,KAAKE,GAAV,KAAkB,KAAKA,GAA3B,EAAgC;AAC9BmC,oBAAQ,IAAR;AACA;AACD;AACF;;AAED;AArEgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAsEhB,UAAIC,YAAYxB,aAAayB,KAAb,IAAsBL,IAAtC;AACA;AACA,UAAIM,UAAUlB,KAAKmB,UAAL,CAAgB3B,YAAhB,CAAd;;AAEA;;;;;AAKA,UAAG,CAACuB,KAAJ,EAAU;AACR,YAAIX,SAAS,KAAK/B,KAAL,CAAWG,QAAxB;AACA,YAAG,KAAKI,GAAL,KAAa,KAAKsC,OAArB,EAA6B;AAC3B,cAAG1B,gBAAgBA,aAAayB,KAAhC,EAAsC;AACpCL,mBAAOpB,aAAayB,KAApB;AACD;AACF;AACDb,eAAOhB,IAAP,CAAY;AACVR,kBADU;AAEVqC,iBAAOL,IAFG;AAGVT,mBAASd,QAAOQ,QAAP,GAAiBA,SAASuB;AAHzB,SAAZ;AAKA,aAAKlC,QAAL,CAAc,EAACV,UAAU4B,MAAX,EAAd,EAAkC,YAAM;AACtCJ,eAAKqB,aAAL;AACArB,eAAKsB,cAAL;AACD,SAHD;AAID,OAhBD,MAgBK;AACHtB,aAAKuB,WAAL,CAAiBL,OAAjB,EAA0BF,SAA1B;AACD;AACF;;AAED;;;;+BACWxB,Y,EAAa;AACtB,UAAG,CAACA,YAAJ,EAAkB,OAAO,KAAP;AAClB,UAAIgC,WAAWhC,aAAaV,QAAb,CAAsB0C,QAArC;AACA,UAAIN,UAAUM,SAASC,KAAT,CAAe,CAAf,CAAd;AACA,aAAOP,OAAP;AACD;;AAED;;;;gCACYA,O,EAASF,S,EAAU;AAC7B;AACA,UAAIhB,OAAO,IAAX;AACA;AACA,UAAI0B,gBAAgB,uBAAU,KAAKrD,KAAL,CAAWG,QAArB,CAApB;AACA;AACA,UAAG,MAAMkD,cAAc7C,MAAvB,EAA+B,OAAO,KAAP;AAC/B;AACA6C,oBAAcC,GAAd,CAAkB,UAACC,GAAD,EAAMjD,CAAN,EAAY;AAC5B,YAAG,KAAKuC,OAAL,KAAiB,KAAKU,IAAIhD,GAA7B,EAAiC;AAC/BgD,cAAIX,KAAJ,GAAYD,SAAZ;AACA;AACD;AACF,OALD;AAMA;AACAhB,WAAKd,QAAL,CAAc,EAACV,UAAUkD,aAAX,EAAd;AACD;;AAED;;;;;;AAiDA;wCACoB;AAClB,UAAI1B,OAAO,IAAX;;AAEA;AACA6B,oBAAOC,EAAP,CAAU,UAAV,EAAsB,UAAC/D,CAAD,EAAO;AAC3B,YAAIa,MAAMb,EAAEa,GAAZ;AACA,YAAG,CAACA,GAAJ,EAAQ;AACN,gBAAM,IAAImD,KAAJ,CAAU,wCAAV,CAAN;AACD;AACD,YAAG,wBAAWnD,GAAX,EAAgB,GAAhB,CAAH,EAAwB;AACtBA,gBAAMA,IAAIoD,SAAJ,CAAc,CAAd,CAAN;AACD;AACDhC,aAAKnC,WAAL,CAAiBe,GAAjB,EAAsB,IAAtB,EAA4Bb,EAAEC,GAA9B;AACD,OATD;;AAWA;AACA6D,oBAAOC,EAAP,CAAU,aAAV,EAAyB,UAAC/D,CAAD,EAAO;AAC9BiC,aAAKiC,QAAL;AACD,OAFD;;AAIA,UAAG,CAACjC,KAAKrC,KAAL,CAAWkC,QAAf,EAAyB,OAAO,KAAP;;AAEzBG,WAAKF,SAAL,CAAeE,KAAKrC,KAApB;AACD;;AAED;;;;qCACgB;AACd,UAAIqC,OAAO,IAAX;AACA,UAAG,CAAC,CAACA,KAAKkC,IAAL,CAAUC,UAAf,EAA0B;AACxB,YAAIC,aAAa,CAAjB;AACA,YAAIC,YAAYrC,KAAKkC,IAAL,CAAUC,UAA1B;AACA,YAAIG,cAAcD,UAAUE,WAA5B;;AAEA,YAAIC,QAAQH,UAAUjB,QAAV,CAAmB,CAAnB,CAAZ;AACA,YAAIqB,QAAQD,MAAMpB,QAAlB;;AAEA,YAAGqB,MAAM5D,MAAN,GAAe,CAAlB,EAAoB;AAClB,cAAIF,IAAI,CAAR;AAAA,cAAW+D,MAAMD,MAAM5D,MAAvB;AACA,iBAAOF,IAAI+D,GAAX,EAAgB/D,GAAhB,EAAqB;AACnByD,0BAAeK,MAAM9D,CAAN,EAAS4D,WAAT,GAAuB,CAAtC;AACD;AACF;;AAED;AACA,YAAGH,cAAcE,cAAc,GAA/B,EAAmC;AACjCtC,eAAK2C,UAAL;AACD;AACF;AACF;;AAED;;;;gCACW;AACT,UAAI3C,OAAO,IAAX;AACAA,WAAKkC,IAAL,CAAUC,UAAV,CAAqBS,UAArB,IAAmC,GAAnC;AACD;;AAED;;;;iCACY;AACV,UAAI5C,OAAQ,IAAZ;AACAA,WAAKkC,IAAL,CAAUC,UAAV,CAAqBS,UAArB,IAAmC,GAAnC;AACD;;AAED;;;;mCACc;AAAA;;AACZ,aACE;AAAA;AAAA,UAAK,KAAI,iBAAT,EAA4B,WAAWC,gBAAUC,YAAjD;AACE;AAAA;AAAA,YAAK,WAAWD,gBAAUE,gBAA1B;AACE;AAAA;AAAA,cAAK,KAAI,YAAT,EAAsB,WAAWF,gBAAUG,OAA3C;AACE;AAAA;AAAA;AAEI,mBAAK3E,KAAL,CAAWG,QAAX,IAAuB,KAAKH,KAAL,CAAWG,QAAX,CAAoBmD,GAApB,CAAwB,UAACsB,GAAD,EAAMtE,CAAN,EAAY;AACzD,uBACE;AAAA;AAAA,oBAAI,KAAK,SAASA,CAAlB,EAAqB,WAAW,0BAAGkE,gBAAUK,QAAb,EAAuB,KAAK,OAAK7E,KAAL,CAAWC,aAAhB,KAAkC,KAAK2E,IAAIrE,GAA3C,GAAgDiE,gBAAUM,MAA1D,GAAkE,EAAzF,CAAhC;AAEI,wBAAM,OAAK9E,KAAL,CAAWoB,QAAX,CAAoBZ,MAA1B,IACE;AAAA;AAAA,sBAAG,WAAWgE,gBAAUO,IAAxB,EAA8B,MAAK,cAAnC,EAAkD,SAAU;AAAA,+BAAK,OAAKC,WAAL,CAAiB,KAAKJ,IAAIrE,GAA1B,EAA+Bb,CAA/B,CAAL;AAAA,uBAA5D;AACE;AAAA;AAAA,wBAAM,WAAW8E,gBAAU5B,KAA3B;AAAA;AAAoCgC,0BAAIhC,KAAxC;AAAA;AAAA,qBADF;AAEE,yDAAG,WAAW,0BAAG,UAAH,EAAe,YAAf,EAA6B4B,gBAAUS,IAAvC,CAAd,EAA4D,SAAS,oBAAK;AAAC,+BAAKzF,WAAL,CAAiB,KAAKoF,IAAIrE,GAA1B,EAA+Bb,CAA/B;AAAkC,uBAA7G;AAFF,mBAHN;AAUI,wBAAM,OAAKM,KAAL,CAAWoB,QAAX,CAAoBZ,MAA1B,IACE;AAAC,yCAAD;AAAA,sBAAa,UAAU,OAAKR,KAAL,CAAWoB,QAAlC;AACE;AAAA;AAAA,wBAAG,WAAWoD,gBAAUO,IAAxB,EAA8B,MAAK,cAAnC,EAAkD,SAAU;AAAA,iCAAK,OAAKC,WAAL,CAAiB,KAAKJ,IAAIrE,GAA1B,EAA+Bb,CAA/B,CAAL;AAAA,yBAA5D;AACE;AAAA;AAAA,0BAAM,WAAW8E,gBAAU5B,KAA3B;AAAA;AAAoCgC,4BAAIhC,KAAxC;AAAA;AAAA,uBADF;AAEE,2DAAG,WAAW,0BAAG,UAAH,EAAe,YAAf,EAA6B4B,gBAAUS,IAAvC,CAAd,EAA4D,SAAS,oBAAK;AAAC,iCAAKzF,WAAL,CAAiB,KAAKoF,IAAIrE,GAA1B,EAA+Bb,CAA/B;AAAkC,yBAA7G;AAFF;AADF;AAXN,iBADF;AAuBD,eAxBsB;AAF3B;AADF;AADF;AADF,OADF;AAqCD;;AAED;;;;oCACe;AAAA;;AACb,aACE;AAAA;AAAA;AAEI,aAAKM,KAAL,CAAWG,QAAX,IAAuB,KAAKH,KAAL,CAAWG,QAAX,CAAoBmD,GAApB,CAAwB,UAACsB,GAAD,EAAMtE,CAAN,EAAY;AACzD,cAAG,OAAKN,KAAL,CAAWC,aAAX,KAA6B,KAAK2E,IAAIrE,GAAzC,EAA6C;AAC3C;AACA2E,mBAAOC,YAAP,GAAsB,MAAMP,IAAIrE,GAAhC;AACD;AACD,iBACE;AAAA;AAAA,cAAK,KAAK,aAAaD,CAAvB,EAA0B,WAAW,0BAAGkE,gBAAUY,IAAb,EAAmB,KAAK,OAAKpF,KAAL,CAAWC,aAAhB,KAAkC,KAAK2E,IAAIrE,GAA3C,GAAgDiE,gBAAUa,EAA1D,GAA8D,EAAjF,CAArC;AAIE;AAAA;AAAA;AAAM,mBAAK,OAAKrF,KAAL,CAAWC,aAAhB,KAAkC,KAAK2E,IAAIrE,GAA3C,GAAgDqE,IAAI9C,OAApD,GAA6D;AAAnE;AAJF,WADF;AAQD,SAbsB;AAF3B,OADF;AAoBD;;;iCAEW;AAAA;;AAEV;AACA,UAAG,KAAK9B,KAAL,CAAWgB,KAAd,EAAoB;AAClB,eACE;AAAA;AAAA;AACE;AAAC,gCAAD;AAAA,uCAAY,KAAKhB,KAAL,CAAWkB,WAAvB,IAAoC,UAAW;AAAA,uBAAM,OAAKoE,SAAL,EAAN;AAAA,eAA/C,EAAwE,WAAY;AAAA,uBAAM,OAAKhB,UAAL,EAAN;AAAA,eAApF,EAA6G,YAAa;AAAA,uBAAM,OAAKV,QAAL,EAAN;AAAA,eAA1H;AACI,iBAAK2B,YAAL;AADJ,WADF;AAKI,eAAKvF,KAAL,CAAWG,QAAX,IAAuB,KAAKH,KAAL,CAAWG,QAAX,CAAoBK,MAApB,GAA6B,CAApD,IACE,8BAAC,eAAD,IAAO,UAAU,KAAKR,KAAL,CAAWS,QAA5B,GANN;AASE;AAAA;AAAA,cAAK,MAAK,cAAV,EAAyB,WAAW+E,mBAAOC,SAA3C;AACE;AAAA;AAAA,gBAAK,WAAWD,mBAAO1D,OAAvB,EAAgC,KAAK,KAAK9B,KAAL,CAAWS,QAAX,CAAoB0C,QAAzD;AAOI,mBAAKuC,aAAL;AAPJ;AADF,WATF;AAoBE,wCAAC,oBAAD;AApBF,SADF;AAwBD;;AAED;AACA,UAAG,MAAM,KAAK1F,KAAL,CAAWG,QAAX,CAAoBK,MAA7B,EAAoC;AAClC,eACE;AAAA;AAAA;AAAA;AAAA,SADF;AAGD;;AAED,aACE;AAAA;AAAA;AACI,aAAK+E,YAAL,EADJ;AAEI,aAAKG,aAAL;AAFJ,OADF;AAMD;;AAED;;;;6BACS;AACP,aAAO,KAAKC,UAAL,EAAP;AACD;;;EApe0BC,gB;;AAd7B;;AAXA;AALA","file":"index.js","sourceRoot":"C:/Users/liu.ping/helloReact","sourcesContent":["// 引入React库\r\nimport React, {Component} from 'react'\r\n\r\n// 显示多个样式类名\r\nimport cx from 'classnames'\r\n// 当前组件样式\r\nimport tabStyles from './index.less'\r\n\r\n// import * as Layout from '../../widget/Layout'\r\n\r\nimport ContextMenu  from '../ContextMenu/ContextMenu'\r\n\r\nimport {remove, cloneDeep, slice, startsWith, get } from 'lodash'\r\n\r\nimport { hashHistory } from 'dva/router'\r\n\r\n// 引入头部等组件\r\nimport Header from '../Layout/Header/HeaderView'\r\n\r\nimport Footer from '../Layout/Footer/FooterView'\r\n\r\nimport styles from '../Layout/App/AppStyle.less'\r\n// CSS过度\r\n// import CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup'\r\n\r\nimport AppBus from '../../utils/bus'\r\n\r\nimport Bread from '../Layout/Bread/Bread'\r\n\r\n// 选项卡组件\r\nexport default class extends Component{\r\n  // 构造函数\r\n  constructor(props, context) {\r\n    super(props, context)\r\n    this.state = {\r\n      isDva: false,\r\n      isReload: false,\r\n      headerProps: {},\r\n      location: {},\r\n      locationMap: {},\r\n      currentTabKey: '',\r\n      currTabTitle: '',\r\n      tabPanes: [],\r\n      menuList: [],\r\n      tabWid: '1px',\r\n      maxTabCount: 20\r\n    }\r\n  }\r\n\r\n  //准备：即将被重新渲染，状态未变化\r\n  componentWillMount() {\r\n  }\r\n\r\n  // 已加载组件，收到新属性时调用\r\n  componentWillReceiveProps(nextProps) {\r\n    if(!nextProps.tabProps) return false\r\n    this.onAddTabs(nextProps)\r\n  }\r\n\r\n  // // 组件是否被渲染 - 解决页签里的组件重复渲染问题\r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n  //   // 如果旧组件的key和新组件的一致，则不重新渲染\r\n  //   if('' + this.props.location.key === '' + nextProps.location.key){\r\n  //     // key值一样时，如果是刷新页面或首次打开，则需要渲染\r\n  //     if('' + this.state.isReload !==  '' + nextState.isReload){\r\n  //       return true\r\n  //     }else{\r\n  //       return false\r\n  //     }\r\n  //   }else{\r\n  //     return true\r\n  //   }\r\n  // }\r\n\r\n  // 选项卡切换\r\n  onTabChange(activeKey, e){\r\n    // 阻止事件冒泡\r\n    e.stopPropagation();\r\n    e.nativeEvent.stopImmediatePropagation()\r\n    let {locationMap, isReload} = this.state\r\n    this.setState({ currentTabKey: activeKey, location: locationMap['' + activeKey], isReload: !isReload})\r\n    return false\r\n  }\r\n\r\n  // 全部关闭\r\n  closeAll(){\r\n    let self = this\r\n    let {tabPanes} = self.state\r\n    if(0 === tabPanes.length) return false\r\n    self.setState({\r\n      tabPanes: []\r\n    }, () => {\r\n      // 跳转到默认目录\r\n      // hashHistory.push('/')\r\n      hashHistory.push('/home')\r\n    })\r\n  }\r\n\r\n  // 初始化菜单\r\n  loadMenuList(){\r\n    // 作用域提升\r\n    let self = this\r\n    let {menuList, tabPanes} = self.state\r\n    if(0 !== menuList.length){\r\n      return\r\n    }\r\n    // 菜单项\r\n    menuList = [\r\n      // {\r\n      //   text: '刷新页面',\r\n      //   handleClick: (e) => {\r\n      //     console.log('刷新页面', e)\r\n      //   }\r\n      // },\r\n      // {\r\n      //   text: '全部关闭',\r\n      //   handleClick: (e) => {\r\n      //     if(0 === tabPanes.length) return false\r\n      //     tabPanes.map((tab, i) => {\r\n      //       // 销毁内存，回收对象\r\n      //       tab = null\r\n      //     })\r\n      //     // 全部清空\r\n      //     remove(tabPanes, () => {return 1 === 1})\r\n      //     self.setState({tabPanes: []})\r\n      //   }\r\n      // }\r\n    ]\r\n    self.setState({menuList})\r\n  }\r\n\r\n  // 限制页签个数\r\n  limitTabCount(){\r\n    // 作用域提升\r\n    let self = this\r\n    // 是否继续往下\r\n    let flag = false\r\n\r\n    let currTabCount = this.state.tabPanes.length\r\n\r\n    // 页签的个数超过一定数量，则不再追加页签，中断执行\r\n    if(currTabCount > 0 && (currTabCount > this.state.maxTabCount)){\r\n      this.state.tabPanes[0].content = null\r\n      // 第一个元素的内存释放\r\n      this.state.tabPanes[0] = null\r\n      // 临时数组，用于存放页签\r\n      let tmpArr = this.state.tabPanes\r\n      // 移除第一个元素\r\n      tmpArr.splice(0, 1)\r\n      // 放回状态机\r\n      self.setState({tabPanes: tmpArr})\r\n      // 中断执行\r\n      flag = false\r\n\r\n    // 页签小于限制范围，则继续往下走\r\n    }else{\r\n      flag = true\r\n    }\r\n    return flag\r\n  }\r\n\r\n  // 追加标签页\r\n  onAddTabs(payload){\r\n    // 作用域提升\r\n    let self = this\r\n    // 取出地址映射\r\n    let {locationMap} = this.state\r\n    // 选项卡属性、头部属性、路由属性\r\n    let {tabProps, headerProps, location, currTabTitle} = payload\r\n\r\n    // 是否DVA\r\n    let isDva = !tabProps.props? false: true\r\n    // 是否重新加载\r\n    let isReload = isDva\r\n\r\n    self.setState({isDva, headerProps, location, isReload})\r\n\r\n    /* 路由列表\r\n     * 普通的React使用props.routes\r\n     * DVA无状态组件使用props.props.routes\r\n    */\r\n    let routes = !isDva? tabProps.routes: tabProps.props.routes\r\n    // 路由对象\r\n    let routeObj = routes[routes.length - 1]\r\n    // react-router传入的key\r\n    let key = routeObj.path\r\n\r\n    // 如果key无值\r\n    if(!key){\r\n      this.state.tabPanes.length = 0\r\n      return\r\n    }\r\n\r\n    if(-1 === key.indexOf('home/')){\r\n      key = `home/${key}`\r\n    }\r\n\r\n    // 克隆的key\r\n    let cloneKey = key\r\n    // 路由中文名 - 页签标题\r\n    let name = routeObj.name\r\n\r\n    // 选项卡个数\r\n    if (!this.tabCount) {\r\n      this.tabCount = 0\r\n    }\r\n\r\n    // this.tabCount ++\r\n\r\n    // 若允许同一路由可以重复打开，则放开注释\r\n    // key = key + this.tabCount\r\n\r\n    // 设置路由对象\r\n    locationMap['' + key] = location\r\n    self.setState({locationMap})\r\n\r\n    // 加载右键菜单\r\n    self.loadMenuList()\r\n\r\n    // 更新当前选中的tab的key\r\n    this.state.currentTabKey = key\r\n\r\n    // 当前key对应的tab是否已显示\r\n    let exist = false\r\n    for (const pane of this.state.tabPanes) {\r\n      if ('' + pane.key === '' + key) {\r\n        exist = true\r\n        break\r\n      }\r\n    }\r\n\r\n    // 当前标题\r\n    let currTitle = currTabTitle.title || name\r\n    // 当前key\r\n    let currKey = self.getCurrKey(currTabTitle)\r\n\r\n    /*\r\n     * 添加选项卡到列表\r\n     * DVA无状态组件使用props\r\n     * 普通的React使用props.children\r\n    */\r\n    if(!exist){\r\n      let tmpArr = this.state.tabPanes\r\n      if('' + key === '' + currKey){\r\n        if(currTabTitle && currTabTitle.title){\r\n          name = currTabTitle.title\r\n        }\r\n      }\r\n      tmpArr.push({\r\n        key,\r\n        title: name,\r\n        content: isDva? tabProps: tabProps.children\r\n      })\r\n      this.setState({tabPanes: tmpArr}, () => {\r\n        self.limitTabCount()\r\n        self.setMaxTabWidth()\r\n      })\r\n    }else{\r\n      self.setTabTitle(currKey, currTitle)\r\n    }\r\n  }\r\n\r\n  // 获取当前key\r\n  getCurrKey(currTabTitle){\r\n    if(!currTabTitle) return false\r\n    let pathname = currTabTitle.location.pathname\r\n    let currKey = pathname.slice(1)\r\n    return currKey\r\n  }\r\n\r\n  // 设置页签标题\r\n  setTabTitle(currKey, currTitle){\r\n    // 作用域提升\r\n    let self = this\r\n    // 克隆一份\r\n    let cloneTabPanes = cloneDeep(this.state.tabPanes)\r\n    // 为空，则中断执行\r\n    if(0 === cloneTabPanes.length) return false\r\n    // 查找到当前key\r\n    cloneTabPanes.map((tab, i) => {\r\n      if('' + currKey === '' + tab.key){\r\n        tab.title = currTitle\r\n        return\r\n      }\r\n    })\r\n    // 设置回状态机\r\n    self.setState({tabPanes: cloneTabPanes})\r\n  }\r\n\r\n  // 关闭tab时的回调\r\n  onTabRemove = (targetKey, e, cbf) => {\r\n    if(!!e){\r\n      // 阻止事件冒泡\r\n      e.stopPropagation();\r\n      e.nativeEvent.stopImmediatePropagation();\r\n    }\r\n    // 如果关闭的是当前tab, 要激活哪个tab\r\n\r\n    // 首先尝试激活左边的, 再尝试激活右边的\r\n    let nextTabKey = this.state.currentTabKey\r\n\r\n    if ('' + this.state.currentTabKey === '' + targetKey) {\r\n\r\n      let currentTabIndex = -1\r\n      this.state.tabPanes.forEach((pane, i) => {\r\n        if (pane.key === targetKey) {\r\n          currentTabIndex = i\r\n        }\r\n      })\r\n\r\n      // 如果当前tab左边还有tab, 就激活左边的\r\n      if (currentTabIndex > 0) {\r\n        nextTabKey = this.state.tabPanes[currentTabIndex - 1].key\r\n      }\r\n      // 否则就激活右边的tab\r\n      else if (currentTabIndex === 0 && this.state.tabPanes.length > 1) {\r\n        nextTabKey = this.state.tabPanes[currentTabIndex + 1].key\r\n      }\r\n      // 其实还有一种情况, 就是只剩最后一个tab, 但这里不用处理\r\n    }\r\n    // location的值\r\n    let location = get(this.state.locationMap, `[${nextTabKey}]`, this.state.location)\r\n    // 过滤panes\r\n    const newTabPanes = this.state.tabPanes.filter(pane => pane.key !== targetKey)\r\n    // 放入状态机\r\n    this.setState({ tabPanes: newTabPanes, currentTabKey: '' + nextTabKey, location }, () => {\r\n      if(!e){\r\n        cbf && cbf()\r\n      }else{\r\n        // 无页签时，跳转到默认首页\r\n        if(0 === newTabPanes.length){\r\n          // hashHistory.push('/')\r\n          hashHistory.push('/home')\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  // 已插入真实DOM\r\n  componentDidMount() {\r\n    let self = this\r\n\r\n    // 监听页签关闭事件\r\n    AppBus.on('closeTab', (e) => {\r\n      let key = e.key\r\n      if(!key){\r\n        throw new Error('The key of closeTab event is not empty')\r\n      }\r\n      if(startsWith(key, '/')){\r\n        key = key.substring(1)\r\n      }\r\n      self.onTabRemove(key, null, e.cbf)\r\n    });\r\n\r\n    // 监听页签全部关闭事件\r\n    AppBus.on('closeAllTab', (e) => {\r\n      self.closeAll()\r\n    });\r\n\r\n    if(!self.props.tabProps) return false\r\n\r\n    self.onAddTabs(self.props)\r\n  }\r\n\r\n  // 获得tab的最大宽度\r\n  setMaxTabWidth(){\r\n    let self = this\r\n    if(!!self.refs.tabDomList){\r\n      let totalWidth = 0\r\n      let tabDomObj = self.refs.tabDomList\r\n      let tabDomWidth = tabDomObj.offsetWidth\r\n\r\n      let ulObj = tabDomObj.children[0]\r\n      let liArr = ulObj.children\r\n\r\n      if(liArr.length > 0){\r\n        let i = 0, len = liArr.length\r\n        for (; i < len; i++) {\r\n          totalWidth += (liArr[i].offsetWidth + 6)\r\n        }\r\n      }\r\n\r\n      // 页签总宽度大于容器总宽度，则向右滑动\r\n      if(totalWidth >= tabDomWidth - 138){\r\n        self.swipeRight()\r\n      }\r\n    }\r\n  }\r\n\r\n  // 选项卡左滑\r\n  swipeLeft(){\r\n    let self = this\r\n    self.refs.tabDomList.scrollLeft -= 138\r\n  }\r\n\r\n  // 选项卡右滑\r\n  swipeRight(){\r\n    let self =  this\r\n    self.refs.tabDomList.scrollLeft += 138\r\n  }\r\n\r\n  // 渲染选项卡\r\n  renderTabNav(){\r\n    return (\r\n      <div ref='tabDomContainer'  className={tabStyles.tabContainer}>\r\n        <div className={tabStyles.tabListContainer}>\r\n          <div ref='tabDomList' className={tabStyles.tabList}>\r\n            <ul>\r\n              {\r\n                this.state.tabPanes && this.state.tabPanes.map((pan, i) => {\r\n                  return (\r\n                    <li key={'nav_' + i} className={cx(tabStyles.tabItems, '' + this.state.currentTabKey === '' + pan.key? tabStyles.active: '')}>\r\n                      {\r\n                        0 === this.state.menuList.length && (\r\n                          <a className={tabStyles.link} href=\"javascript:;\" onClick={ e => this.onTabChange('' + pan.key, e)}>\r\n                            <span className={tabStyles.title}> {pan.title} </span>\r\n                            <i className={cx('iconfont', 'icon-close', tabStyles.icon)} onClick={e => {this.onTabRemove('' + pan.key, e)}}/>\r\n                          </a>\r\n                        )\r\n                      }\r\n                      {\r\n                        0 !== this.state.menuList.length && (\r\n                          <ContextMenu menuList={this.state.menuList}>\r\n                            <a className={tabStyles.link} href=\"javascript:;\" onClick={ e => this.onTabChange('' + pan.key, e)}>\r\n                              <span className={tabStyles.title}> {pan.title} </span>\r\n                              <i className={cx('iconfont', 'icon-close', tabStyles.icon)} onClick={e => {this.onTabRemove('' + pan.key, e)}}/>\r\n                            </a>\r\n                          </ContextMenu>\r\n                        )\r\n                      }\r\n\r\n                    </li>\r\n                  )\r\n                })\r\n              }\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // 渲染选项卡内容\r\n  renderContent(){\r\n    return (\r\n      <div>\r\n        {\r\n          this.state.tabPanes && this.state.tabPanes.map((pan, i) => {\r\n            if(this.state.currentTabKey === '' + pan.key){\r\n              // window.CURR_TAB_KEY = '' + pan.key\r\n              window.CURR_TAB_KEY = '/' + pan.key\r\n            }\r\n            return (\r\n              <div key={'content_' + i} className={cx(tabStyles.fade, '' + this.state.currentTabKey === '' + pan.key? tabStyles.in: '')}>\r\n                {/*\r\n                  '[object Object]' === '' + Object.prototype.toString.call ? <div>{pan.content}</div> : <div dangerouslySetInnerHTML={{__html:pan.content}}/>\r\n                */}\r\n                <div>{'' + this.state.currentTabKey === '' + pan.key? pan.content: ''}</div>\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderBody(){\r\n\r\n    // 如果是DVA的场景\r\n    if(this.state.isDva){\r\n      return (\r\n        <div>\r\n          <Header {...this.state.headerProps} doGoLeft={ () => this.swipeLeft() } doGoRight={ () => this.swipeRight()} doCloseAll={ () => this.closeAll() }>\r\n            { this.renderTabNav() }\r\n          </Header>\r\n          {\r\n            this.state.tabPanes && this.state.tabPanes.length > 0 && (\r\n              <Bread location={this.state.location}/>\r\n            )\r\n          }\r\n          <div name='tabContainer' className={styles.container}>\r\n            <div className={styles.content} key={this.state.location.pathname}>\r\n              {/*\r\n              <CSSTransitionGroup transitionName=\"bodyAnimations\" transitionAppear={true} transitionAppearTimeout={500}\r\n                transitionEnter={false} transitionLeave={false}>\r\n                { this.renderContent() }\r\n              </CSSTransitionGroup>\r\n              */}\r\n              { this.renderContent() }\r\n            </div>\r\n          </div>\r\n          <Footer />\r\n        </div>\r\n      )\r\n    }\r\n\r\n    // React原生组件的场景\r\n    if(0 === this.state.tabPanes.length){\r\n      return (\r\n        <div>&nbsp;</div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        { this.renderTabNav() }\r\n        { this.renderContent() }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // 渲染函数\r\n  render() {\r\n    return this.renderBody()\r\n  }\r\n\r\n}\r\n"]}