'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _form = require('antd/lib/form');

var _form2 = _interopRequireDefault(_form);

require('antd/lib/form/style');

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _dva = require('dva');

var _router = require('dva/router');

var _config = require('config/config');

var _config2 = _interopRequireDefault(_config);

var _view_utils = require('utils/view_utils');

var _myPageStyle = require('./myPageStyle.less');

var _myPageStyle2 = _interopRequireDefault(_myPageStyle);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * description 路由视图及事件处理
 * dispatch 分发到models中的effects对应事件名
 * model 用于获取models中state定义的数据
 * form 表单对象
 */


// 引入model取值工具方法

//导入路由组件，用于跳转等

// 引入antd的组件
// React基础组件
var routeView = function routeView(_ref) {
  var dispatch = _ref.dispatch,
      model = _ref.model,
      form = _ref.form;

  // 表单的子函数
  var resetFields = form.resetFields,
      getFieldDecorator = form.getFieldDecorator,
      validateFields = form.validateFields,
      setFieldsValue = form.setFieldsValue;
  // 取出model对象，命名空间

  var modelObj = model.modelObj,
      namespace = model.namespace;

  // modelObj.xxx获取model中状态机的值

  // 点击处理事件

  var clickHandler = function clickHandler(e) {
    // 分发到model文件中effects的xxx方法
    dispatch({
      type: namespace + '/xxx',
      payload: {}
    });
  };

  return _react2.default.createElement(
    'div',
    { onClick: function onClick(e) {
        return clickHandler(e);
      } },
    'Hello DVA!'
  );
};

// 连接视图(view)和模型(model)

// 当前组件样式

// 导入项目全局配置文件

// dva 连接组件 - 连接route和model
exports.default = (0, _dva.connect)(_view_utils.mapStateToProps)(_form2.default.create()(routeView));
module.exports = exports['default'];