{"version":3,"sources":["src\\utils\\toBase64.js"],"names":["data","toBase64Table","base64Pad","result","length","i","charCodeAt"],"mappings":";;;;;;kBAKe,UAAUA,IAAV,EAAgB;AAC7B,MAAG,CAACA,IAAJ,EAAS;AAAC;AAAQ;AAClB,MAAIC,gBAAgB,kEAApB;AACA,MAAIC,YAAY,GAAhB;AACA,MAAIC,SAAS,EAAb;AACA,MAAIC,SAASJ,KAAKI,MAAlB;AACA,MAAIC,CAAJ;;AAEA,OAAKA,IAAI,CAAT,EAAYA,IAAKD,SAAS,CAA1B,EAA8BC,KAAK,CAAnC,EAAsC;AACpCF,cAAUF,cAAcD,KAAKM,UAAL,CAAgBD,CAAhB,KAAsB,CAApC,CAAV;AACAF,cAAUF,cAAc,CAAC,CAACD,KAAKM,UAAL,CAAgBD,CAAhB,IAAqB,IAAtB,KAA+B,CAAhC,KAAsCL,KAAKM,UAAL,CAAgBD,IAAI,CAApB,KAA0B,CAAhE,CAAd,CAAV;AACAF,cAAUF,cAAc,CAAC,CAACD,KAAKM,UAAL,CAAgBD,IAAI,CAApB,IAAyB,IAA1B,KAAmC,CAApC,KAA0CL,KAAKM,UAAL,CAAgBD,IAAI,CAApB,KAA0B,CAApE,CAAd,CAAV;AACAF,cAAUF,cAAcD,KAAKM,UAAL,CAAgBD,IAAI,CAApB,IAAyB,IAAvC,CAAV;AACD;;AAED;;AAEA,MAAID,SAAS,CAAb,EAAgB;AACdC,QAAID,SAAUA,SAAS,CAAvB;AACAD,cAAUF,cAAcD,KAAKM,UAAL,CAAgBD,CAAhB,KAAsB,CAApC,CAAV;AACA,QAAKD,SAAS,CAAV,IAAgB,CAApB,EAAuB;AACrBD,gBAAUF,cAAc,CAAC,CAACD,KAAKM,UAAL,CAAgBD,CAAhB,IAAqB,IAAtB,KAA+B,CAAhC,KAAsCL,KAAKM,UAAL,CAAgBD,IAAI,CAApB,KAA0B,CAAhE,CAAd,CAAV;AACAF,gBAAUF,cAAc,CAACD,KAAKM,UAAL,CAAgBD,IAAI,CAApB,IAAyB,IAA1B,KAAmC,CAAjD,CAAV;AACAF,gBAAUD,SAAV;AACD,KAJD,MAIO;AACLC,gBAAUF,cAAc,CAACD,KAAKM,UAAL,CAAgBD,CAAhB,IAAqB,IAAtB,KAA+B,CAA7C,CAAV;AACAF,gBAAUD,YAAYA,SAAtB;AACD;AACF;AACD,SAAOC,MAAP;AACD,C;;qCAnCD","file":"toBase64.js","sourceRoot":"C:/Users/liu.ping/helloReact","sourcesContent":["/**\r\n * Created by jiang.weixing on 2018/1/3.\r\n * 字符串转base64\r\n */\r\n\r\nexport default function (data) {\r\n  if(!data){return;}\r\n  var toBase64Table = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n  var base64Pad = '=';\r\n  var result = '';\r\n  var length = data.length;\r\n  var i;\r\n\r\n  for (i = 0; i < (length - 2); i += 3) {\r\n    result += toBase64Table[data.charCodeAt(i) >> 2];\r\n    result += toBase64Table[((data.charCodeAt(i) & 0x03) << 4) + (data.charCodeAt(i + 1) >> 4)];\r\n    result += toBase64Table[((data.charCodeAt(i + 1) & 0x0f) << 2) + (data.charCodeAt(i + 2) >> 6)];\r\n    result += toBase64Table[data.charCodeAt(i + 2) & 0x3f];\r\n  }\r\n\r\n  // Convert the remaining 1 or 2 bytes, pad out to 4 characters.\r\n\r\n  if (length % 3) {\r\n    i = length - (length % 3);\r\n    result += toBase64Table[data.charCodeAt(i) >> 2];\r\n    if ((length % 3) == 2) {\r\n      result += toBase64Table[((data.charCodeAt(i) & 0x03) << 4) + (data.charCodeAt(i + 1) >> 4)];\r\n      result += toBase64Table[(data.charCodeAt(i + 1) & 0x0f) << 2];\r\n      result += base64Pad;\r\n    } else {\r\n      result += toBase64Table[(data.charCodeAt(i) & 0x03) << 4];\r\n      result += base64Pad + base64Pad;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n"]}