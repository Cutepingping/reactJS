{"version":3,"sources":["src\\pages\\category\\prodCategoryDetail.jsx"],"names":["FormItem","Item","RadioGroup","Group","formItemLayout","labelCol","span","wrapperCol","formItemFullLayout","Detail","dispatch","form","data","submit","validateFields","err","_","isEmpty","type","namespace","payload","resetFields","inputChange","key","value","params","detailData","verifyFinal","orginalData","parentId","parent","find","d","id","end","getFieldDecorator","actionType","btnLoading","originalCategoryList","isFinal","style","detailContent","noDataInfo","hidePeopleIcon","rules","required","max","message","pattern","initialValue","name","e","target","statement","height","status","create"],"mappings":"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","file":"prodCategoryDetail.jsx","sourceRoot":"C:/Users/liu.ping/helloReact","sourcesContent":["/**\r\n * @(#)departmentManageDetail.jsx 0.5.1 2017-09-13\r\n * Copyright (c) 2017, YUNXI. All rights reserved.\r\n * YUNXI PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.\r\n */\r\nimport React, {PropTypes} from 'react'\r\nimport {connect} from 'dva'\r\nimport {\r\n  Tree,\r\n  Input,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Modal,\r\n  Popconfirm,\r\n  Select,\r\n  Icon,\r\n  Upload,\r\n  message,\r\n  Checkbox,\r\n  Card,\r\n  Switch,\r\n  Radio\r\n} from 'antd';\r\nimport _ from 'lodash'\r\nimport style from './prodCategoryView.less'\r\nimport cx from 'classnames'\r\nimport {CustomCard} from '../../widget/Grid/index';\r\n\r\nconst FormItem = Form.Item;\r\nconst RadioGroup = Radio.Group;\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    span: 4\r\n  },\r\n  wrapperCol: {\r\n    span: 20\r\n  },\r\n};\r\nconst formItemFullLayout = {\r\n  labelCol: {\r\n    span: 4\r\n  },\r\n  wrapperCol: {\r\n    span: 20\r\n  },\r\n};\r\n\r\n/*\r\n * 产品分类\r\n *\r\n * @author 苏离\r\n * @since 20180621\r\n */\r\nconst Detail = ({dispatch, form, data}) => {\r\n  function submit() {\r\n    validateFields((err) => {\r\n      if (_.isEmpty(err)) {\r\n        dispatch({type: `${namespace}/update`, payload: resetFields});\r\n      }\r\n    })\r\n  }\r\n\r\n  function inputChange(key, value) {\r\n    let params = {};\r\n    params[key] = value\r\n    dispatch({\r\n      type: `${namespace}/updateStore`, payload: {\r\n        detailData: {...detailData, ...params}\r\n      }\r\n    })\r\n  }\r\n  //判断是否最后一层\r\n  function verifyFinal(orginalData, parentId) {\r\n    if(parentId == 0) return false;\r\n    const parent = _.find(orginalData, d => d.id == parentId);\r\n    if(parent && parent.parentId != 0) {\r\n      const end = _.find(orginalData, d => d.id == parent.parentId);\r\n      if(end && end.parentId == 0 ) return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  const {getFieldDecorator, resetFields, validateFields} = form;\r\n  const {detailData, actionType, btnLoading, namespace, originalCategoryList} = data;\r\n  const isFinal = verifyFinal(originalCategoryList, detailData.parentId)\r\n\r\n  return (\r\n    <div className={cx(_.isEmpty(detailData) ? '' : style.detailContent)}>\r\n      {\r\n        _.isEmpty(detailData)\r\n          ? <div className={cx(style.noDataInfo, 'text-info', 'txtcenter')}><Icon type=\"frown-o\" className=\"fsize14\"/>\r\n          请选择左侧产品分类</div>\r\n          : <Form autoComplete=\"off\" className={style.hidePeopleIcon}>\r\n          <CustomCard title=\"分类编辑\">\r\n            <FormItem {...formItemLayout} label=\"节点名称\" hasFeedback>\r\n              {\r\n                getFieldDecorator('name', {\r\n                  rules: [{\r\n                    required: true, max: 10, message: '请输入节点名称，长度不能超过10!',\r\n                  }, {\r\n                    pattern: /^\\S*$/, message: '节点名称不允许包含空字符串',\r\n                  }],\r\n                  initialValue: detailData.name\r\n                })(\r\n                  <Input onChange={e => inputChange('name', e.target.value)}  />\r\n                )\r\n              }\r\n            </FormItem>\r\n            <FormItem {...formItemLayout} label=\"描述\">\r\n              {\r\n                getFieldDecorator('statement', {\r\n                  rules: [{\r\n                    required: false, max: 50, message: '请输入描述，长度不能超过50!',\r\n                  }],\r\n                  initialValue: detailData.statement\r\n                })(\r\n                  <Input type=\"textarea\" style={{height: 50}} onChange={e => inputChange('statement', e.target.value)} />\r\n                )\r\n              }\r\n            </FormItem>\r\n            <FormItem {...formItemLayout} label=\"是否末级分类\" hasFeedback>\r\n              {\r\n                isFinal\r\n                  ? '是'\r\n                  : <RadioGroup onChange={e => inputChange('isFinal', e.target.value)} value={detailData.isFinal + ''}>\r\n                      <Radio value={1 + ''}>是</Radio>\r\n                      <Radio value={0 + ''}>否</Radio>\r\n                    </RadioGroup>\r\n              }\r\n            </FormItem>\r\n            <FormItem {...formItemLayout} label=\"状态\" hasFeedback>\r\n              <RadioGroup onChange={e => inputChange('status', e.target.value)} value={detailData.status + ''}>\r\n                <Radio value={1 + ''}>启用</Radio>\r\n                <Radio value={0 + ''}>禁用</Radio>\r\n              </RadioGroup>\r\n            </FormItem>\r\n          </CustomCard>\r\n          {\r\n            actionType === 'detail' || <div className={cx('txtcenter', 'mg2t')}>\r\n              <Button type=\"primary\" onClick={submit} loading={btnLoading}>\r\n                <i className=\"iconfont icon-baocun\"/>保存\r\n              </Button>\r\n            </div>\r\n          }\r\n        </Form>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect()(Form.create()(Detail))\r\n"]}