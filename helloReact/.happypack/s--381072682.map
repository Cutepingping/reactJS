{"version":3,"sources":["src\\utils\\util.js"],"names":["getParams","getParamValues","setPathname","checkAuth","clearAllCookie","generateUuid","encrypt","decrypt","convertToTree","convertToCascader","generateBarcode","generateQRCode","updatePageSize","treeDataConvertor","url","urlSplit","split","args","length","qs","replace","items","item","len","i","name","decodeURIComponent","value","push","permissions","findKey","key","sortList","list","find","startsWith","pathname","obj","menuConfig","child","path","result","allAuthPaths","dataSourceId","authPaths","ENV","location","hash","slice","indexOf","browserHistory","hashHistory","cookies","Cookie","get","Object","keys","forEach","remove","s","hexDigits","substr","Math","floor","random","uuid","join","str","pwd","prand","charCodeAt","toString","sPos","mult","parseInt","charAt","incr","ceil","modu","pow","salt","round","substring","enc_chr","enc_str","String","fromCharCode","data","parentKey","firstLevelId","children","map","id","parent","barcode","document","createElement","options","fontSize","height","displayValue","src","QRCode","toDataURL","errorCorrectionLevel","err","state","storedPageSize","pageConfig","pageSize","tree","fieldName","convert","copyTree"],"mappings":"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","file":"util.js","sourceRoot":"C:/Users/liu.ping/helloReact","sourcesContent":["import {isEmpty, sortBy, difference, compact, cloneDeep, isArray} from 'lodash'\r\nimport menuConfig from '../config/menu'\r\nimport {getGlobalData, getLocalData} from './globalScope'\r\nimport {browserHistory, hashHistory} from 'dva/router'\r\nimport Cookie from 'js-cookie'\r\nimport md5 from 'js-md5'\r\nimport QRCode from 'qrcode'\r\nimport JsBarcode from 'jsbarcode'\r\n\r\n//获取url的参数\r\nexport function getParams(url = '') {\r\n  let urlSplit = url.split('?'),\r\n    args = {}; // 保存参数数据的对象\r\n  if (isEmpty(urlSplit) || urlSplit.length === 1) {\r\n    return args;\r\n  }\r\n  // 获取url中\"?\"符后的字串\r\n  let qs = urlSplit[1].replace(/#\\/$/, ''),\r\n    items = qs.length ? qs.split(\"&\") : [], // 取得每一个参数项,\r\n    item = null,\r\n    len = items.length;\r\n\r\n  for (let i = 0; i < len; i++) {\r\n    item = items[i].split(\"=\");\r\n    let name = decodeURIComponent(item[0]),\r\n      value = decodeURIComponent(item[1]);\r\n    if (name) {\r\n      args[name] = value;\r\n    }\r\n  }\r\n  return args;\r\n}\r\n\r\n//获取url的参数值\r\nexport function getParamValues(url = '') {\r\n  let urlSplit = url.split('?'),\r\n    args = []; // 保存参数数据的对象\r\n  if (isEmpty(urlSplit) || urlSplit.length === 1) {\r\n    return args;\r\n  }\r\n  // 获取url中\"?\"符后的字串\r\n  let qs = urlSplit[1].replace(/#\\/$/, ''),\r\n\r\n    items = qs.length ? qs.split(\"&\") : [], // 取得每一个参数项,\r\n    item = null,\r\n    len = items.length;\r\n\r\n  for (let i = 0; i < len; i++) {\r\n    item = items[i].split(\"=\");\r\n    let value = decodeURIComponent(item[1]);\r\n    args.push(value)\r\n  }\r\n  return args;\r\n}\r\n\r\n//不同权限角色登录的默认页\r\nexport function setPathname(permissions) {\r\n  function findKey(value) {\r\n    const key = difference(sortList, list).find(item => {\r\n      return item.startsWith(value)\r\n    })\r\n    list.push(key);\r\n    if (key) {\r\n      findKey(key);\r\n    }\r\n  }\r\n\r\n  let list = [], pathname = '/', obj;\r\n  const sortList = sortBy(permissions);\r\n  list.push(sortList[0]);\r\n  findKey(sortList[0]);\r\n  list = compact(list);\r\n  for (let i = 0; i < list.length; i++) {\r\n    if (i === 0) {\r\n      obj = menuConfig.find(item => item.value === list[i]);\r\n      pathname = `${pathname}${obj.key}`;\r\n    } else if (!isEmpty(obj.child)) {\r\n      obj = obj.child.find(item => item.value === list[i]);\r\n      pathname = `${pathname}/${obj.key}`;\r\n    }\r\n  }\r\n  return pathname;\r\n}\r\n\r\n//校验直接输入的地址是否超出权限\r\nexport function checkAuth() {\r\n  let path = null, obj = {}, result = '';\r\n  let allAuthPaths = getGlobalData('authPaths');\r\n  let dataSourceId = getGlobalData('dataSourceId');\r\n  let authPaths = allAuthPaths ? allAuthPaths[dataSourceId] : []\r\n\r\n  if (ENV === 'development') {\r\n    path = location.pathname;\r\n  } else {\r\n    path = location.hash.slice(2, location.hash.indexOf('?'));\r\n  }\r\n  path = compact(path.split('/'));\r\n  for (let i = 0; i < path.length; i++) {\r\n    if (i === 0) {\r\n      obj = menuConfig.find(item => item.key === path[i]);\r\n      result = authPaths.find(item => item === obj.value);\r\n    } else if (obj && !isEmpty(obj.child)) {\r\n      obj = obj.child.find(item => item.key === path[i]);\r\n      result = authPaths.find(item => item === obj.value);\r\n    }\r\n    if (isEmpty(result)) {\r\n      if (ENV === 'development') {\r\n        browserHistory.push('/');\r\n      } else {\r\n        hashHistory.push('/');\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n//清除所有cookie\r\nexport function clearAllCookie() {\r\n  let cookies = Cookie.get();\r\n  Object.keys(cookies).forEach((key) => Cookie.remove(key));\r\n}\r\n\r\n//生成uuid\r\nexport function generateUuid() {\r\n  var s = [];\r\n  var hexDigits = \"0123456789abcdef\";\r\n  for (var i = 0; i < 36; i++) {\r\n    s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\r\n  }\r\n  s[14] = \"4\";  // bits 12-15 of the time_hi_and_version field to 0010\r\n  s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1);  // bits 6-7 of the clock_seq_hi_and_reserved to 01\r\n  s[8] = s[13] = s[18] = s[23] = \"-\";\r\n\r\n  var uuid = s.join(\"\");\r\n  return uuid;\r\n}\r\n\r\n//加密\r\nexport function encrypt(str) {\r\n  //固定加密串\r\n  let pwd = 'oottbb';\r\n  if (pwd == null || pwd.length <= 0) {\r\n    return null;\r\n  }\r\n  var prand = \"\";\r\n  for (var i = 0; i < pwd.length; i++) {\r\n    prand += pwd.charCodeAt(i).toString();\r\n  }\r\n  var sPos = Math.floor(prand.length / 5);\r\n  var mult = parseInt(prand.charAt(sPos) + prand.charAt(sPos * 2) + prand.charAt(sPos * 3) + prand.charAt(sPos * 4) + prand.charAt(sPos * 5));\r\n  var incr = Math.ceil(pwd.length / 2);\r\n  var modu = Math.pow(2, 31) - 1;\r\n  if (mult < 2) {\r\n    return null;\r\n  }\r\n  var salt = Math.round(Math.random() * 1000000000) % 100000000;\r\n  prand += salt;\r\n  while (prand.length > 10) {\r\n    prand = (parseInt(prand.substring(0, 10)) + parseInt(prand.substring(10, prand.length))).toString();\r\n  }\r\n  prand = (mult * prand + incr) % modu;\r\n  var enc_chr = \"\";\r\n  var enc_str = \"\";\r\n  for (var i = 0; i < str.length; i++) {\r\n    enc_chr = parseInt(str.charCodeAt(i) ^ Math.floor((prand / modu) * 255));\r\n    if (enc_chr < 16) {\r\n      enc_str += \"0\" + enc_chr.toString(16);\r\n    } else enc_str += enc_chr.toString(16);\r\n    prand = (mult * prand + incr) % modu;\r\n  }\r\n  salt = salt.toString(16);\r\n  while (salt.length < 8)salt = \"0\" + salt;\r\n  enc_str += salt;\r\n  return enc_str;\r\n}\r\n//解密\r\nexport function decrypt(str) {\r\n  //固定加密串\r\n  let pwd = 'oottbb';\r\n  if (str == null || str.length < 8) {\r\n    return '';\r\n  }\r\n  if (pwd == null || pwd.length <= 0) {\r\n    return '';\r\n  }\r\n  var prand = \"\";\r\n  for (var i = 0; i < pwd.length; i++) {\r\n    prand += pwd.charCodeAt(i).toString();\r\n  }\r\n  var sPos = Math.floor(prand.length / 5);\r\n  var mult = parseInt(prand.charAt(sPos) + prand.charAt(sPos * 2) + prand.charAt(sPos * 3) + prand.charAt(sPos * 4) + prand.charAt(sPos * 5));\r\n  var incr = Math.round(pwd.length / 2);\r\n  var modu = Math.pow(2, 31) - 1;\r\n  var salt = parseInt(str.substring(str.length - 8, str.length), 16);\r\n  str = str.substring(0, str.length - 8);\r\n  prand += salt;\r\n  while (prand.length > 10) {\r\n    prand = (parseInt(prand.substring(0, 10)) + parseInt(prand.substring(10, prand.length))).toString();\r\n  }\r\n  prand = (mult * prand + incr) % modu;\r\n  var enc_chr = \"\";\r\n  var enc_str = \"\";\r\n  for (var i = 0; i < str.length; i += 2) {\r\n    enc_chr = parseInt(parseInt(str.substring(i, i + 2), 16) ^ Math.floor((prand / modu) * 255));\r\n    enc_str += String.fromCharCode(enc_chr);\r\n    prand = (mult * prand + incr) % modu;\r\n  }\r\n  return enc_str;\r\n}\r\n\r\n\r\n//将[{id: myid, name: myname, pId: mypid }] 转为树形结构 [{id: myid, name: myname, children: [] }]\r\nexport function convertToTree(data, parentKey, firstLevelId = '0') {\r\n  // 删除 所有 children,以防止多次调用\r\n  data.forEach(item => {\r\n    delete item.children;\r\n  });\r\n  // 将数据存储为 以Id为 KEY 的 map 索引数据列\r\n  let map = {};\r\n  data.forEach(item => {\r\n    map[item.id] = item;\r\n  });\r\n  let list = [], result = [];\r\n  data.forEach(item => {\r\n    // 以当前遍历项的parentCategoryId,去map对象中找到索引的id\r\n    let parent = map[item[parentKey]];\r\n    // 如果找到索引，那么说明此项不在顶级当中,那么需要把此项添加到，他对应的父级中\r\n    if (parent) {\r\n      (parent.children || (parent.children = [])).push(item);\r\n    } else {\r\n      //如果没有在map中找到对应的索引ID,那么直接把 当前的item添加到list中，作为顶级\r\n      list.push(item);\r\n    }\r\n  });\r\n  list.forEach(item => (item[parentKey] === firstLevelId || item[parentKey] === null) && result.push(item))\r\n  return result;\r\n}\r\n\r\n//将[{id: myid, name: myname, pId: mypid }] 转为树形结构 [{value: myid, label: myname, children: [] }]\r\nexport function convertToCascader(data, parentKey, firstLevelId = '0') {\r\n  // 删除 所有 children,以防止多次调用\r\n  data.forEach(item => {\r\n    item.value = item.id;\r\n    item.name = item.name;\r\n    delete item.children;\r\n  });\r\n  // 将数据存储为 以Id为 KEY 的 map 索引数据列\r\n  let map = {};\r\n  data.forEach(item => {\r\n    map[item.id] = item;\r\n  });\r\n  let list = [], result = [];\r\n  data.forEach(item => {\r\n    // 以当前遍历项的parentCategoryId,去map对象中找到索引的id\r\n    let parent = map[item[parentKey]];\r\n    // 如果找到索引，那么说明此项不在顶级当中,那么需要把此项添加到，他对应的父级中\r\n    if (parent) {\r\n      (parent.children || (parent.children = [])).push(item);\r\n    } else {\r\n      //如果没有在map中找到对应的索引ID,那么直接把 当前的item添加到list中，作为顶级\r\n      list.push(item);\r\n    }\r\n  });\r\n  list.forEach(item => (item[parentKey] === firstLevelId || item[parentKey] === null) && result.push(item))\r\n  return result;\r\n}\r\n\r\n//生成条形码\r\nexport function generateBarcode(str) {\r\n  let barcode = document.createElement('img'),\r\n    options = {\r\n      fontSize: 18,\r\n      height: 100,\r\n      displayValue: true\r\n    };\r\n  JsBarcode(barcode, str, options);\r\n  return barcode.src\r\n}\r\n//生成二维码\r\nexport function generateQRCode(str) {\r\n  let result = ''\r\n  QRCode.toDataURL(str, {errorCorrectionLevel: 'H'}, function (err, url) {\r\n    result = url;\r\n  })\r\n  return result\r\n}\r\n\r\n//使用存储在本地的pagesize\r\nexport function updatePageSize(path, state) {\r\n  const storedPageSize = getLocalData(path);\r\n  storedPageSize && (state.pageConfig.pageSize = storedPageSize)\r\n\r\n  return state\r\n}\r\n\r\n//树结构数据转换\r\nexport function treeDataConvertor(tree, fieldName) {\r\n  function convert(data) {\r\n    isArray(data) && (data = data.map((item) => {\r\n      item = {\r\n        ...item[fieldName],\r\n        ...item\r\n      }\r\n      delete item[fieldName]\r\n      item.children = convert(item.children);\r\n      return item;\r\n    }));\r\n    return data\r\n  }\r\n  let copyTree = cloneDeep(tree);\r\n  copyTree = convert(copyTree);\r\n  return copyTree;\r\n}\r\n"]}