{"version":3,"sources":["src\\widget\\Layout\\MsgList\\msgListView.jsx"],"names":["props","context","state","myMsgList","nextProps","nextState","prevProps","prevState","self","getMsgList","config","isMsgNotify","status","pageNum","pageSize","result","resultCode","setState","data","list","length","styles","notice","backgroundColor","right","top","width","boxShadow","map","item","i","title","ReactElement","DOMElement","callback","renderMsgList","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;AAIA;;AAGA;;AAGA;;;;AAEA;;AAEA;;;;AACA;;;;AAEA;;;AARA;AAVA;;;;AAoBE;AACA,oBAAYA,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA,kIACpBD,KADoB,EACbC,OADa;;AAE1B,UAAKC,KAAL,GAAa;AACX;AACAC,iBAAW;AAFA,KAAb;AAF0B;AAM3B;;AAED;;;;;yCACqB,CAAE;;AAEvB;;;;wCACoBC,S,EAAWC,S,EAAW,CAAE;;AAE5C;;;;uCACmBC,S,EAAWC,S,EAAW,CAAE;;AAE3C;;;;8CAC0BH,S,EAAW,CAAE;;AAEvC;;;;wCACoB;AAClB,UAAII,OAAO,IAAX;AACAA,WAAKC,UAAL;AACD;;AAED;;;;0CACsBL,S,EAAWC,S,EAAW;AAC1C,UAAIG,OAAO,IAAX;AACA;AACA,UAAG,CAACE,iBAAOC,WAAX,EAAuB;AACrB,eAAO,KAAP;AACD,OAFD,MAEK;AACH,eAAO,IAAP;AACD;AACF;;AAED;;;;2CACsB,CAAE;;AAExB;;;;;;;;;;;;;oBAGQD,iBAAOC,W;;;;;iDAAoB,K;;;;uBAEZ,yBAAO,eAAM,EAAEC,QAAQ,CAAV,EAAaC,SAAS,CAAtB,EAAyBC,UAAU,CAAnC,EAAN,CAAP,C;;;AAAfC,sB;;;AAEJ,oBAAG,QAAQ,KAAKA,OAAOC,UAAvB,EAAkC;AAChC;AACA,uBAAKC,QAAL,CAAc,EAAEd,WAAWY,OAAOG,IAAP,CAAYC,IAAzB,EAAd;AACD;;;;;;;;;AAGD,iDAAc,eAAK,WAAnB,EAAgC,OAAhC;;;;;;;;;;;;;;;;;AAIJ;;;;oCACe;AACb;AACA,UAAG,MAAM,KAAKjB,KAAL,CAAWC,SAAX,CAAqBiB,MAA9B,EAAqC;AACnC,eACE;AAAA;AAAA,YAAK,WAAWC,uBAAOC,MAAvB;AACE,+CAAG,WAAU,sBAAb,GADF;AAEE,2DAAO,OAAQ,KAAKpB,KAAL,CAAWC,SAAX,CAAqBiB,MAApC,EAA6C,OAAO,EAACG,iBAAgB,SAAjB,EAA2BC,OAAM,OAAjC,EAAyCC,KAAI,OAA7C,EAAqDC,OAAM,MAA3D,EAAkEC,WAAW,MAA7E,EAApD,GAFF;AAGE;AAAA;AAAA,cAAU,cAAV,EAAmB,cAAnB;AAEI,iBAAKzB,KAAL,CAAWC,SAAX,IAAwB,KAAKD,KAAL,CAAWC,SAAX,CAAqBiB,MAArB,GAA8B,CAAtD,IACE,KAAKlB,KAAL,CAAWC,SAAX,CAAqByB,GAArB,CAAyB,UAACC,IAAD,EAAMC,CAAN,EAAY;AACnC,qBAAO;AAAA;AAAA,kBAAK,KAAK,SAAOA,CAAjB;AAAoB;AAAC,8BAAD;AAAA,oBAAM,IAAG,0BAAT;AAAqCD,uBAAKE;AAA1C;AAApB,eAAP;AACD,aAFD;AAHN;AAHF,SADF;AAgBD,OAjBD,MAiBK;AACH,YAAGrB,iBAAOC,WAAV,EAAsB;AACpB,iBACE;AAAA;AAAA,cAAK,WAAWU,uBAAOC,MAAvB,EAA+B,OAAO,EAACI,OAAM,EAAP,EAAtC;AACE,iDAAG,WAAU,sBAAb,GADF;AAEE,6DAAO,OAAQ,KAAKxB,KAAL,CAAWC,SAAX,CAAqBiB,MAApC,EAA6C,OAAO,EAACG,iBAAgB,SAAjB,EAA2BC,OAAM,OAAjC,EAAyCC,KAAI,OAA7C,EAAqDC,OAAM,MAA3D,EAAkEC,WAAW,MAA7E,EAApD;AAFF,WADF;AAMD,SAPD,MAOK;AACH,iBAAO,EAAP;AACD;AACF;AACF;;AAED;;;;2BACOK,Y,EAAcC,U,EAAYC,Q,EAAU;AACzC,aACE;AAAA;AAAA;AAAO,aAAKC,aAAL;AAAP,OADF;AAGD;;;EAlG0BC,gB;AAP7B;;AANA;;AAJA","file":"msgListView.jsx","sourceRoot":"C:/Users/liu.ping/helloReact","sourcesContent":["// 加载React\r\nimport React from 'react'\r\n// 加载Component\r\nimport { Component } from 'react'\r\n\r\nimport { parse } from 'qs'\r\n// 引入antd的组件\r\nimport { Carousel, Badge } from 'antd'\r\nimport { Link, hashHistory } from 'dva/router'\r\n\r\n// 站点配置\r\nimport config from '../../../config/config'\r\n// 弹出提示框\r\nimport { messageInform } from '../../../utils/notification'\r\n\r\nimport styles from './msgListStyle.less'\r\nimport { myList } from './msgListServ'\r\n\r\n// 导出组件\r\nexport default class extends Component {\r\n  // 构造函数\r\n  constructor(props, context) {\r\n    super(props, context)\r\n    this.state = {\r\n      // 我的消息列表\r\n      myMsgList: []\r\n    }\r\n  }\r\n\r\n  //准备：即将被重新渲染，状态未变化\r\n  componentWillMount() {}\r\n\r\n  //准备：即将被重新渲染，状态未变化\r\n  componentWillUpdate(nextProps, nextState) {}\r\n\r\n  //完成：正在被重新渲染，状态已变化\r\n  componentDidUpdate(prevProps, prevState) {}\r\n\r\n  // 已加载组件，收到新属性时调用\r\n  componentWillReceiveProps(nextProps) {}\r\n\r\n  // 已插入真实DOM\r\n  componentDidMount() {\r\n    let self = this\r\n    self.getMsgList()\r\n  }\r\n\r\n  // 是否触发render函数\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    let self = this\r\n    // 若不配置消息开关，则不渲染\r\n    if(!config.isMsgNotify){\r\n      return false\r\n    }else{\r\n      return true\r\n    }\r\n  }\r\n\r\n  //组件将被卸载\r\n  componentWillUnmount(){}\r\n\r\n  // 获取消息列表\r\n  async getMsgList(){\r\n    try{\r\n      if(!config.isMsgNotify) return false\r\n      // 查询我的消息\r\n      let result = await myList(parse({ status: 0, pageNum: 1, pageSize: 5}))\r\n\r\n      if('0' === '' + result.resultCode){\r\n        // 设置到状态机\r\n        this.setState({ myMsgList: result.data.list })\r\n      }\r\n\r\n    }catch(e){\r\n      messageInform(e || '未知的查询消息异常', 'error')\r\n    }\r\n  }\r\n\r\n  // 渲染消息列表\r\n  renderMsgList(){\r\n    // 消息列表不为空时\r\n    if(0 !== this.state.myMsgList.length){\r\n      return (\r\n        <div className={styles.notice}>\r\n          <i className=\"iconfont icon-xiaoxi\"></i>\r\n          <Badge count={ this.state.myMsgList.length } style={{backgroundColor:'#FFB840',right:'-13px',top:'-19px',width:'30px',boxShadow: 'none'}}/>\r\n          <Carousel vertical autoplay>\r\n            {\r\n              this.state.myMsgList && this.state.myMsgList.length > 0 && (\r\n                this.state.myMsgList.map((item,i) => {\r\n                  return <div key={'msg_'+i}><Link to=\"/messageManage/myMessage\">{item.title}</Link></div>\r\n                })\r\n              )\r\n            }\r\n          </Carousel>\r\n        </div>\r\n      )\r\n\r\n    }else{\r\n      if(config.isMsgNotify){\r\n        return (\r\n          <div className={styles.notice} style={{width:51}}>\r\n            <i className=\"iconfont icon-xiaoxi\"></i>\r\n            <Badge count={ this.state.myMsgList.length } style={{backgroundColor:'#FFB840',right:'-13px',top:'-19px',width:'30px',boxShadow: 'none'}}/>\r\n          </div>\r\n        )\r\n      }else{\r\n        return ''\r\n      }\r\n    }\r\n  }\r\n\r\n  // 初始状态或状态变化会触发render\r\n  render(ReactElement, DOMElement, callback) {\r\n    return (\r\n      <div>{ this.renderMsgList() }</div>\r\n    )\r\n  }\r\n}\r\n"]}