{"version":3,"sources":["src\\pages\\myPage\\myPageView.jsx"],"names":["routeView","dispatch","model","form","resetFields","getFieldDecorator","validateFields","setFieldsValue","modelObj","namespace","clickHandler","e","type","payload","modalVis","vis","title","pageProps","ui","api_url","method","params","mockData","search_bar","fields","en_name","zh_name","elem_type","elem_valid_type","searchHandler","console","log","resetHandler","searchCallback","pasteTargetList","action_bar","func_name","label","icon","onClick","rows","rowSelection","table","render","text","item","minGuidePrice","actions","url","record","id","marginBottom","mapStateToProps","create"],"mappings":"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","file":"myPageView.jsx","sourceRoot":"C:/Users/liu.ping/helloReact","sourcesContent":["// React基础组件\r\nimport React from 'react'\r\n// dva 连接组件 - 连接route和model\r\nimport { connect } from 'dva'\r\n// 引入antd的组件\r\nimport { Form, Modal, Button } from 'antd'\r\n//导入路由组件，用于跳转等\r\nimport { Link, hashHistory } from 'dva/router'\r\n// 导入项目全局配置文件\r\nimport config from 'config/config' \r\nimport ListPage from 'widget/PageTmpl/ListPage'\r\n\r\n// 引入model取值工具方法\r\nimport { mapStateToProps } from 'utils/view_utils'\r\n// 当前组件样式\r\nimport styles from './myPageStyle.less' \r\n\r\n/**\r\n * description 路由视图及事件处理\r\n * dispatch 分发到models中的effects对应事件名\r\n * model 用于获取models中state定义的数据\r\n * form 表单对象\r\n */\r\nconst routeView = function({dispatch, model, form}) {\r\n  // 表单的子函数\r\n  const {resetFields, getFieldDecorator, validateFields, setFieldsValue} = form\r\n  // 取出model对象，命名空间\r\n  const { modelObj, namespace } = model\r\n\r\n  // modelObj.xxx获取model中状态机的值\r\n\r\n  // 点击处理事件\r\n  const clickHandler = (e) => {\r\n    // 分发到model文件中effects的xxx方法\r\n    dispatch({\r\n      type: `${namespace}/xxx`,\r\n      payload: {}\r\n    });\r\n  }\r\n\r\n  const modalVis = (vis,title=modelObj.title) => {\r\n    // 分发到model文件中effects的xxx方法\r\n    dispatch({\r\n      type: `${namespace}/vis`,\r\n      payload: {\r\n      vis,\r\n      title\r\n    }\r\n    });\r\n  }\r\n\r\n  let pageProps = {\r\n    ui: {\r\n     api_url: 'caf/mgmt/items/car/list-by-page', // 接口地址\r\n     method: 'GET', // 接口请求方式\r\n     params: 'pageNum=1&pageSize=10', // 接口默认参数\r\n     mockData: null, // 模拟数据\r\n     search_bar:{ // 查询栏\r\n       fields: [\r\n         {\r\n           en_name: 'carCode', // 字段英文名\r\n           zh_name: '车型编号', // 字段中文名\r\n           elem_type: 'Input', // 页面元素类型\r\n           elem_valid_type: 'string', // 页面元素校验类型，使用antd的校验类型，支持正则表达式\r\n         }\r\n       ],\r\n       searchHandler: () => { // 自定义搜索按钮回调函数，点击搜索时触发\r\n           console.log('search click')\r\n       },\r\n       resetHandler: () => { // 自定义重置按钮回调函数，点击重置时触发\r\n         console.log('reset click')\r\n       },\r\n       searchCallback: params => { // 自定义搜索完成后的后调函数, 搜索完成后触发, 并将本次搜索的参数传入\r\n         console.log('search finish', params)\r\n       },\r\n       pasteTargetList: [  // 列表组件中将输入框的en_name作为默认id(也可以通过id另外设置)\r\n         'carName',  // 将需要粘贴事件拦截的输入框id以数组的形式传入, 该参数对应PasteFromClipboard组件的targetList参数\r\n       ]\r\n     },\r\n     action_bar: [ // 顶部操作栏\r\n       {\r\n         func_name: 'onAdd', // 按钮的函数名称，约定为on开头的驼峰\r\n         label: '新增车型', // 按钮名称\r\n         type: 'primary', // 高亮按钮\r\n         icon: 'plus', // 图标为加号\r\n         onClick: (e, rows) => { // 自定义点击事件，第二个参数rows为当rowSelection: '1'时，返回选中行的数据\r\n             console.log('e:', e, 'rows:', rows)\r\n         }\r\n       },\r\n       {\r\n         func_name: 'onDelete', // 按钮的函数名称，约定为on开头的驼峰\r\n         label: '删除车型', // 按钮名称\r\n         type: 'primary', // 高亮按钮\r\n         icon: 'delete', // 图标为加号\r\n         rowSelection: '1', // 开启表格第一列前面为单选、复选框时，设置此字段\r\n         onClick: (e, rows) => { // 自定义点击事件，第二个参数rows为当rowSelection: '1'时，返回选中行的数据\r\n             console.log('e:', e, 'rows:', rows)\r\n         }\r\n       }\r\n     ],\r\n     // 表格配置项\r\n     table: {\r\n       fields: [ // 表头字段列，兼容antd的其它字段\r\n         {\r\n           en_name: 'code', // 字段英文名\r\n           zh_name: '车型编号', // 字段中文名\r\n         },\r\n         {\r\n           en_name: 'name',\r\n           zh_name: '车型名称',\r\n         },\r\n         {\r\n           en_name: 'propName',\r\n           zh_name: '分类',\r\n         },\r\n         {\r\n           en_name: 'isDirectSale',\r\n           zh_name: '标签',\r\n         },\r\n         {\r\n           en_name: 'itemPrice',\r\n           zh_name: '指导价',\r\n           render: (text, item) => { // 自定义渲染列\r\n                 return <span >{ item.minGuidePrice } </span>\r\n           }\r\n         },\r\n         {\r\n           en_name: 'updatePerson',\r\n           zh_name: '销售状态',\r\n           render: (text) => {\r\n                 return text == 1 ? '在售' : '停售';\r\n           }\r\n         }\r\n       ],\r\n       actions: [ // 表格操作\r\n             {\r\n               func_name: 'onViewOrder',\r\n               label: '查看订单',\r\n               url: '/order/list',\r\n               params: 'id=&status=', // id、status为每一行数据返回的字段，组件会自动获取该行的值附加到请求参数中，支持多层级的取值和附加值\r\n             },\r\n             {\r\n               func_name: 'onDetail',\r\n               label: '查看',\r\n               render: (record) => { // 自定义渲染操作\r\n                 return <Link to = {'/home/modelsManage/modelDetails?id=' + record.id}>查看</Link>;\r\n               }\r\n             },\r\n             {\r\n               func_name: 'onEdit',\r\n               label: '编辑',\r\n               onClick: (e, record) => { // 自定义点击事件\r\n                     console.log('e:', e, 'record:', record)\r\n               }\r\n             },\r\n             {\r\n               func_name: 'onDelete', // 组件内部已对onDelete做了处理(只要传删除的接口地址 api_url)，也可以自定义处理点击\r\n               api_url: '/model/remove',\r\n               method: 'DELETE',\r\n               params: 'id=&user.status', // id为每一行数据返回的字段，组件会自动获取该行的值附加到请求参数中，支持多层级的取值和附加值\r\n               label: '编辑',\r\n               onClick: (e, record) => { // 自定义点击事件\r\n                     console.log('e:', e, 'record:', record)\r\n               }\r\n             },\r\n       ]\r\n     }\r\n   }\r\n}\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <a type=\"primary\" onClick={()=>modalVis(true,'标题2')} style={{marginBottom:\"50px\"}}>打开一个列表框</a>\r\n      <Modal title={modelObj.title} visible={modelObj.vis} onOk={()=>modalVis(false)} onCancel={()=>modalVis(false)}>\r\n        <p>some contents...</p>\r\n        <p>some contents...</p>\r\n        <p>some contents...</p>\r\n      </Modal>\r\n      <ListPage pageProps={pageProps} visible={modelObj.vis} />\r\n    </div>\r\n  );\r\n}\r\n\r\n// 连接视图(view)和模型(model)\r\nexport default connect(mapStateToProps)(Form.create()(routeView))"]}